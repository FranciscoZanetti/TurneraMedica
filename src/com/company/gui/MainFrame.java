/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.company.gui;

import com.company.entidades.Consulta;
import com.company.entidades.ConsultorioMedico;
import com.company.entidades.Medico;
import com.company.entidades.Paciente;
import com.company.entidades.Persona;
import com.company.gui.ConsultaGui.ConsultaInfoPanel;
import com.company.gui.MedicoGui.MedicoListCellRenderer;
import com.company.service.ServiceConsulta;
import com.company.service.ServiceConsultorioMedico;
import com.company.service.ServiceException;
import com.company.service.ServiceMedico;
import com.company.service.ServicePaciente;
import com.company.service.ServicePersona;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.FormatStyle;
import java.util.ArrayList;
import javax.swing.Box;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSeparator;
import javax.swing.JTextField;
import javax.swing.JToolBar;
import javax.swing.text.DateFormatter;
import org.w3c.dom.css.RGBColor;

/**
 *
 * @author User
 */
public class MainFrame extends javax.swing.JFrame {
    
    private Paciente pacienteLogged;
    private Medico medicoLogged;
    
    private ServiceConsulta serviceConsulta = new ServiceConsulta();
    private ServiceConsultorioMedico serviceConsultorioMedico = new ServiceConsultorioMedico();
    private ServiceMedico serviceMedico = new ServiceMedico();
    private ServicePaciente servicePaciente = new ServicePaciente();
    private ServicePersona servicePersona = new ServicePersona();

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        RegisterPacienteSexo = new javax.swing.ButtonGroup();
        MainPanel = new javax.swing.JPanel();
        MainLayeredPane = new javax.swing.JLayeredPane();
        DashboardPanel = new javax.swing.JPanel();
        LeftMenu = new javax.swing.JPanel();
        TopLeftMenu = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        Username = new javax.swing.JLabel();
        CenterLeftMenuLayeredPane = new javax.swing.JLayeredPane();
        CenterLeftMenu = new javax.swing.JPanel();
        ReservarTurnoMenu = new javax.swing.JLabel();
        ProximosTurnosMenu = new javax.swing.JLabel();
        HistorialTurnosMenu = new javax.swing.JLabel();
        Salir = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        ContentLayeredPane = new javax.swing.JLayeredPane();
        ReservarTurnoPanel = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        SearchMedicoReservarTurno = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        SearchMedicoButtonReservarTurno = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        TurnosDisponiblesReservarTurno = new javax.swing.JScrollPane();
        TurnosDisponiblesContenedorReservarTurno = new javax.swing.JPanel();
        TurnoSeleccionadoReservarTurno = new javax.swing.JPanel();
        ConsultorioComboBoxReservarTurno = new javax.swing.JComboBox<>();
        BorrarButtonReservarTurno = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        MedicoComboBoxReservarTurno = new javax.swing.JComboBox<>();
        jSeparator10 = new javax.swing.JSeparator();
        LoginPanel = new javax.swing.JPanel();
        LeftLoginPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        LoginRegisterLayeredPanel = new javax.swing.JLayeredPane();
        RightRegisterPanel = new javax.swing.JPanel();
        RegisterForm = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        RegisterPacienteDNI = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        RegisterPacienteNombre = new javax.swing.JTextField();
        RegisterPacienteApellido = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        RegisterPacientePassword = new javax.swing.JPasswordField();
        RegisterPacienteNacimiento = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        RegisterPacienteHombre = new javax.swing.JRadioButton();
        RegisterPacienteSexo.add(RegisterPacienteHombre);
        RegisterPacienteMujer = new javax.swing.JRadioButton();
        RegisterPacienteSexo.add(RegisterPacienteMujer);
        jLabel10 = new javax.swing.JLabel();
        RegisterPacienteObraSocial = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        RegisterPacientePasswordRepeat = new javax.swing.JPasswordField();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        NacimientoPacienteSeparator = new javax.swing.JSeparator();
        RegisterPacienteButtonPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        RegisterPacienteClearPanel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        BackToLogin = new javax.swing.JLabel();
        RightLoginPanel = new javax.swing.JPanel();
        LoginForm = new javax.swing.JPanel();
        IniciarSesion = new javax.swing.JLabel();
        IDLogin = new javax.swing.JTextField();
        PasswordLogin = new javax.swing.JPasswordField();
        TextPrompt placeholderPassword = new TextPrompt("**********", PasswordLogin);
        placeholderPassword.changeAlpha(0.4f);
        SubtitleLogin = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        RegisterOptionLogin = new javax.swing.JLabel();
        ButtonPanel = new javax.swing.JPanel();
        ButtonLabelLogin = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(MainFrame.MAXIMIZED_BOTH);
        setResizable(false);

        MainPanel.setBackground(new java.awt.Color(255, 255, 255));
        MainPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        MainLayeredPane.setLayout(new java.awt.CardLayout());

        DashboardPanel.setBackground(new java.awt.Color(255, 255, 255));

        LeftMenu.setBackground(new java.awt.Color(0, 204, 153));
        LeftMenu.setMaximumSize(new java.awt.Dimension(300, 32767));
        LeftMenu.setMinimumSize(new java.awt.Dimension(300, 720));
        LeftMenu.setPreferredSize(new java.awt.Dimension(300, 720));

        TopLeftMenu.setBackground(new java.awt.Color(0, 204, 153));
        TopLeftMenu.setMinimumSize(new java.awt.Dimension(310, 201));
        TopLeftMenu.setLayout(new java.awt.GridLayout(2, 1));

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/41-410093_male-symbol-png.png"))); // NOI18N
        TopLeftMenu.add(jLabel15);

        Username.setFont(new java.awt.Font("Roboto Medium", 0, 22)); // NOI18N
        Username.setForeground(new java.awt.Color(255, 255, 255));
        Username.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Username.setText("Paciente");
        TopLeftMenu.add(Username);

        CenterLeftMenuLayeredPane.setLayout(new java.awt.CardLayout());

        CenterLeftMenu.setBackground(new java.awt.Color(0, 204, 153));
        CenterLeftMenu.setMinimumSize(new java.awt.Dimension(310, 410));
        CenterLeftMenu.setPreferredSize(new java.awt.Dimension(310, 410));

        ReservarTurnoMenu.setFont(new java.awt.Font("Roboto Medium", 0, 20)); // NOI18N
        ReservarTurnoMenu.setForeground(new java.awt.Color(255, 255, 255));
        ReservarTurnoMenu.setText("Reservar turno");
        ReservarTurnoMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ReservarTurnoMenuMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ReservarTurnoMenuMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ReservarTurnoMenuMouseEntered(evt);
            }
        });

        ProximosTurnosMenu.setFont(new java.awt.Font("Roboto Medium", 0, 20)); // NOI18N
        ProximosTurnosMenu.setForeground(new java.awt.Color(255, 255, 255));
        ProximosTurnosMenu.setText("Pr√≥ximos turnos");

        HistorialTurnosMenu.setFont(new java.awt.Font("Roboto Medium", 0, 20)); // NOI18N
        HistorialTurnosMenu.setForeground(new java.awt.Color(255, 255, 255));
        HistorialTurnosMenu.setText("Historial de turnos");

        javax.swing.GroupLayout CenterLeftMenuLayout = new javax.swing.GroupLayout(CenterLeftMenu);
        CenterLeftMenu.setLayout(CenterLeftMenuLayout);
        CenterLeftMenuLayout.setHorizontalGroup(
            CenterLeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CenterLeftMenuLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(CenterLeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HistorialTurnosMenu)
                    .addComponent(ProximosTurnosMenu)
                    .addComponent(ReservarTurnoMenu))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CenterLeftMenuLayout.setVerticalGroup(
            CenterLeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CenterLeftMenuLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(ReservarTurnoMenu)
                .addGap(18, 18, 18)
                .addComponent(ProximosTurnosMenu)
                .addGap(18, 18, 18)
                .addComponent(HistorialTurnosMenu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CenterLeftMenuLayeredPane.add(CenterLeftMenu, "card2");

        Salir.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        Salir.setForeground(new java.awt.Color(255, 255, 255));
        Salir.setText("Salir");

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/backArrow2.png"))); // NOI18N

        javax.swing.GroupLayout LeftMenuLayout = new javax.swing.GroupLayout(LeftMenu);
        LeftMenu.setLayout(LeftMenuLayout);
        LeftMenuLayout.setHorizontalGroup(
            LeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TopLeftMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(LeftMenuLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Salir)
                .addContainerGap(236, Short.MAX_VALUE))
            .addGroup(LeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(LeftMenuLayout.createSequentialGroup()
                    .addComponent(CenterLeftMenuLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 19, Short.MAX_VALUE)))
        );
        LeftMenuLayout.setVerticalGroup(
            LeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftMenuLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(TopLeftMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(LeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Salir, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(39, 39, 39))
            .addGroup(LeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(LeftMenuLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(CenterLeftMenuLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(136, Short.MAX_VALUE)))
        );

        ContentLayeredPane.setLayout(new java.awt.CardLayout());

        ReservarTurnoPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setFont(new java.awt.Font("Roboto Medium", 0, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 51, 51));
        jLabel16.setText("Reservar un turno");

        jLabel17.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("Seleccione un m√©dico:");

        SearchMedicoReservarTurno.setBackground(new java.awt.Color(255, 255, 255));
        SearchMedicoReservarTurno.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        SearchMedicoReservarTurno.setBorder(null);
        SearchMedicoReservarTurno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SearchMedicoReservarTurnoKeyPressed(evt);
            }
        });

        SearchMedicoButtonReservarTurno.setBackground(new java.awt.Color(204, 204, 204));
        SearchMedicoButtonReservarTurno.setForeground(new java.awt.Color(51, 51, 51));
        SearchMedicoButtonReservarTurno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SearchMedicoButtonReservarTurnoMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SearchMedicoButtonReservarTurnoMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SearchMedicoButtonReservarTurnoMouseEntered(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 51, 51));
        jLabel19.setText("Buscar");

        javax.swing.GroupLayout SearchMedicoButtonReservarTurnoLayout = new javax.swing.GroupLayout(SearchMedicoButtonReservarTurno);
        SearchMedicoButtonReservarTurno.setLayout(SearchMedicoButtonReservarTurnoLayout);
        SearchMedicoButtonReservarTurnoLayout.setHorizontalGroup(
            SearchMedicoButtonReservarTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchMedicoButtonReservarTurnoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel19)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        SearchMedicoButtonReservarTurnoLayout.setVerticalGroup(
            SearchMedicoButtonReservarTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchMedicoButtonReservarTurnoLayout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addContainerGap())
        );

        jLabel20.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 51, 51));
        jLabel20.setText("Turnos disponibles");

        TurnosDisponiblesReservarTurno.setBackground(new java.awt.Color(255, 255, 255));
        TurnosDisponiblesReservarTurno.setPreferredSize(new Dimension(868, 300));
        //TurnosDisponiblesReservarTurno.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        TurnosDisponiblesReservarTurno.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        TurnosDisponiblesContenedorReservarTurno.setLayout(new javax.swing.BoxLayout(TurnosDisponiblesContenedorReservarTurno, javax.swing.BoxLayout.Y_AXIS));
        TurnosDisponiblesReservarTurno.setViewportView(TurnosDisponiblesContenedorReservarTurno);

        javax.swing.GroupLayout TurnoSeleccionadoReservarTurnoLayout = new javax.swing.GroupLayout(TurnoSeleccionadoReservarTurno);
        TurnoSeleccionadoReservarTurno.setLayout(TurnoSeleccionadoReservarTurnoLayout);
        TurnoSeleccionadoReservarTurnoLayout.setHorizontalGroup(
            TurnoSeleccionadoReservarTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        TurnoSeleccionadoReservarTurnoLayout.setVerticalGroup(
            TurnoSeleccionadoReservarTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 69, Short.MAX_VALUE)
        );

        ConsultorioComboBoxReservarTurno.setBackground(new java.awt.Color(255, 255, 255));
        ConsultorioComboBoxReservarTurno.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        ConsultorioComboBoxReservarTurno.setForeground(new java.awt.Color(51, 51, 51));
        ConsultorioComboBoxReservarTurno.setBorder(null);
        ConsultorioComboBoxReservarTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultorioComboBoxReservarTurnoActionPerformed(evt);
            }
        });

        BorrarButtonReservarTurno.setBackground(new java.awt.Color(204, 204, 204));

        jLabel21.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 51, 51));
        jLabel21.setText("Borrar");

        javax.swing.GroupLayout BorrarButtonReservarTurnoLayout = new javax.swing.GroupLayout(BorrarButtonReservarTurno);
        BorrarButtonReservarTurno.setLayout(BorrarButtonReservarTurnoLayout);
        BorrarButtonReservarTurnoLayout.setHorizontalGroup(
            BorrarButtonReservarTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BorrarButtonReservarTurnoLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel21)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        BorrarButtonReservarTurnoLayout.setVerticalGroup(
            BorrarButtonReservarTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BorrarButtonReservarTurnoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addContainerGap())
        );

        MedicoComboBoxReservarTurno.setBackground(new java.awt.Color(255, 255, 255));
        MedicoComboBoxReservarTurno.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        MedicoComboBoxReservarTurno.setForeground(new java.awt.Color(51, 51, 51));
        MedicoComboBoxReservarTurno.setMaximumRowCount(30);
        MedicoComboBoxReservarTurno.setBorder(null);
        populateMedicoComboBox();
        MedicoComboBoxReservarTurno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MedicoComboBoxReservarTurnoMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MedicoComboBoxReservarTurnoMouseEntered(evt);
            }
        });
        MedicoComboBoxReservarTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MedicoComboBoxReservarTurnoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ReservarTurnoPanelLayout = new javax.swing.GroupLayout(ReservarTurnoPanel);
        ReservarTurnoPanel.setLayout(ReservarTurnoPanelLayout);
        ReservarTurnoPanelLayout.setHorizontalGroup(
            ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReservarTurnoPanelLayout.createSequentialGroup()
                .addComponent(BorrarButtonReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReservarTurnoPanelLayout.createSequentialGroup()
                .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TurnoSeleccionadoReservarTurno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TurnosDisponiblesReservarTurno)
                    .addGroup(ReservarTurnoPanelLayout.createSequentialGroup()
                        .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addGroup(ReservarTurnoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(49, 49, 49)
                                .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSeparator8, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                                    .addComponent(MedicoComboBoxReservarTurno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SearchMedicoReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(SearchMedicoButtonReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ReservarTurnoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ConsultorioComboBoxReservarTurno, javax.swing.GroupLayout.Alignment.TRAILING, 0, 200, Short.MAX_VALUE))))
                .addGap(58, 58, 58))
        );
        ReservarTurnoPanelLayout.setVerticalGroup(
            ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReservarTurnoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReservarTurnoPanelLayout.createSequentialGroup()
                        .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(SearchMedicoReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ReservarTurnoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel17))
                            .addComponent(MedicoComboBoxReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ReservarTurnoPanelLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(SearchMedicoButtonReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(ConsultorioComboBoxReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TurnosDisponiblesReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TurnoSeleccionadoReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(BorrarButtonReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        ContentLayeredPane.add(ReservarTurnoPanel, "card2");

        javax.swing.GroupLayout DashboardPanelLayout = new javax.swing.GroupLayout(DashboardPanel);
        DashboardPanel.setLayout(DashboardPanelLayout);
        DashboardPanelLayout.setHorizontalGroup(
            DashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardPanelLayout.createSequentialGroup()
                .addComponent(LeftMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(ContentLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 926, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        DashboardPanelLayout.setVerticalGroup(
            DashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LeftMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DashboardPanelLayout.createSequentialGroup()
                .addGap(0, 49, Short.MAX_VALUE)
                .addComponent(ContentLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        MainLayeredPane.add(DashboardPanel, "card3");

        LoginPanel.setBackground(new java.awt.Color(255, 255, 255));
        LoginPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        LeftLoginPanel.setBackground(new java.awt.Color(0, 204, 153));
        LeftLoginPanel.setPreferredSize(new java.awt.Dimension(640, 720));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Sin t√≠tulo-1.png"))); // NOI18N

        javax.swing.GroupLayout LeftLoginPanelLayout = new javax.swing.GroupLayout(LeftLoginPanel);
        LeftLoginPanel.setLayout(LeftLoginPanelLayout);
        LeftLoginPanelLayout.setHorizontalGroup(
            LeftLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftLoginPanelLayout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(834, 834, 834))
        );
        LeftLoginPanelLayout.setVerticalGroup(
            LeftLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        LoginRegisterLayeredPanel.setPreferredSize(new java.awt.Dimension(640, 720));
        LoginRegisterLayeredPanel.setLayout(new java.awt.CardLayout());

        RightRegisterPanel.setBackground(new java.awt.Color(255, 255, 255));
        RightRegisterPanel.setLayout(new java.awt.GridBagLayout());

        RegisterForm.setBackground(new java.awt.Color(255, 255, 255));
        RegisterForm.setPreferredSize(new java.awt.Dimension(500, 570));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Roboto Medium", 0, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Cre√° tu cuenta");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Ingres√° tus datos");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("DNI");

        RegisterPacienteDNI.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacienteDNI.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        RegisterPacienteDNI.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacienteDNI.setBorder(null);
        RegisterPacienteDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterPacienteDNIActionPerformed(evt);
            }
        });
        RegisterPacienteDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RegisterPacienteDNIKeyPressed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Nombre");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Apellido");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Fecha de nacimiento");

        RegisterPacienteNombre.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacienteNombre.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        RegisterPacienteNombre.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacienteNombre.setBorder(null);
        RegisterPacienteNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RegisterPacienteNombreKeyPressed(evt);
            }
        });

        RegisterPacienteApellido.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacienteApellido.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        RegisterPacienteApellido.setBorder(null);
        RegisterPacienteApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RegisterPacienteApellidoKeyPressed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Contrase√±a");

        RegisterPacientePassword.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacientePassword.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        RegisterPacientePassword.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacientePassword.setBorder(null);
        RegisterPacientePassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RegisterPacientePasswordKeyPressed(evt);
            }
        });

        RegisterPacienteNacimiento.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacienteNacimiento.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        RegisterPacienteNacimiento.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacienteNacimiento.setBorder(null);
        RegisterPacienteNacimiento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RegisterPacienteNacimientoFocusLost(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Sexo");

        RegisterPacienteHombre.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacienteHombre.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        RegisterPacienteHombre.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacienteHombre.setText("hombre");
        RegisterPacienteHombre.setBorder(null);

        RegisterPacienteMujer.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacienteMujer.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        RegisterPacienteMujer.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacienteMujer.setText("mujer");
        RegisterPacienteMujer.setBorder(null);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Obra Social");

        RegisterPacienteObraSocial.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacienteObraSocial.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        RegisterPacienteObraSocial.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacienteObraSocial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguna", "Hospital Italiano", "Galeno", "OSDEPYM", "Swiss Medical", "OSCHOCA", "Obra Social de Personal Dom√©stico", "Jer√°rquicos Salud", "Uni√≥n Personal", "Carniceria Dock Sud", "FEMEBA" }));
        RegisterPacienteObraSocial.setBorder(null);

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("Repetir contrase√±a");

        RegisterPacientePasswordRepeat.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacientePasswordRepeat.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        RegisterPacientePasswordRepeat.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacientePasswordRepeat.setBorder(null);
        RegisterPacientePasswordRepeat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RegisterPacientePasswordRepeatKeyPressed(evt);
            }
        });

        jSeparator3.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator3.setForeground(new java.awt.Color(51, 51, 51));

        jSeparator4.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator4.setForeground(new java.awt.Color(51, 51, 51));

        jSeparator5.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator5.setForeground(new java.awt.Color(51, 51, 51));

        jSeparator6.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator6.setForeground(new java.awt.Color(51, 51, 51));

        jSeparator7.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator7.setForeground(new java.awt.Color(51, 51, 51));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("(yyyy-MM-dd)");

        NacimientoPacienteSeparator.setBackground(new java.awt.Color(255, 255, 255));
        NacimientoPacienteSeparator.setForeground(new java.awt.Color(51, 51, 51));

        RegisterPacienteButtonPanel.setBackground(new java.awt.Color(0, 204, 153));
        RegisterPacienteButtonPanel.setPreferredSize(new java.awt.Dimension(194, 42));
        RegisterPacienteButtonPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RegisterPacienteButtonPanelMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RegisterPacienteButtonPanelMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RegisterPacienteButtonPanelMouseEntered(evt);
            }
        });
        RegisterPacienteButtonPanel.setLayout(new java.awt.GridBagLayout());

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Crear cuenta");
        RegisterPacienteButtonPanel.add(jLabel13, new java.awt.GridBagConstraints());

        RegisterPacienteClearPanel.setBackground(new java.awt.Color(204, 204, 204));
        RegisterPacienteClearPanel.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacienteClearPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RegisterPacienteClearPanelMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RegisterPacienteClearPanelMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RegisterPacienteClearPanelMouseEntered(evt);
            }
        });
        RegisterPacienteClearPanel.setLayout(new java.awt.GridBagLayout());

        jLabel14.setBackground(new java.awt.Color(204, 204, 204));
        jLabel14.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 51));
        jLabel14.setText("Borrar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 91, 6, 86);
        RegisterPacienteClearPanel.add(jLabel14, gridBagConstraints);

        BackToLogin.setBackground(new java.awt.Color(255, 255, 255));
        BackToLogin.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        BackToLogin.setForeground(new java.awt.Color(0, 204, 153));
        BackToLogin.setText("Iniciar sesi√≥n");
        BackToLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BackToLoginMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BackToLoginMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BackToLoginMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout RegisterFormLayout = new javax.swing.GroupLayout(RegisterForm);
        RegisterForm.setLayout(RegisterFormLayout);
        RegisterFormLayout.setHorizontalGroup(
            RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterFormLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(RegisterFormLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BackToLogin)
                            .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4)
                                .addComponent(jLabel2)
                                .addGroup(RegisterFormLayout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(146, 146, 146)
                                    .addComponent(jLabel12))
                                .addComponent(jSeparator3)
                                .addComponent(RegisterPacienteDNI)
                                .addGroup(RegisterFormLayout.createSequentialGroup()
                                    .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(RegisterPacienteNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                            .addComponent(jSeparator4)
                                            .addComponent(RegisterPacientePassword)
                                            .addComponent(jLabel5)
                                            .addComponent(jSeparator6))
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel11))
                                    .addGap(18, 18, 18)
                                    .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(RegisterPacienteHombre)
                                        .addComponent(jLabel9)
                                        .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel6)
                                            .addComponent(RegisterPacientePasswordRepeat, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                            .addComponent(jSeparator5)
                                            .addComponent(RegisterPacienteApellido)
                                            .addComponent(jSeparator7))))
                                .addGroup(RegisterFormLayout.createSequentialGroup()
                                    .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(NacimientoPacienteSeparator, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(RegisterPacienteNacimiento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addComponent(RegisterPacienteMujer))
                                .addComponent(jLabel10)
                                .addComponent(RegisterPacienteObraSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(RegisterFormLayout.createSequentialGroup()
                                    .addComponent(RegisterPacienteButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(RegisterPacienteClearPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RegisterFormLayout.setVerticalGroup(
            RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterFormLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RegisterPacienteDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegisterPacientePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegisterPacientePasswordRepeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegisterPacienteNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegisterPacienteApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(RegisterPacienteHombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegisterPacienteNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegisterPacienteMujer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NacimientoPacienteSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RegisterPacienteObraSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RegisterPacienteClearPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RegisterPacienteButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BackToLogin)
                .addGap(100, 100, 100))
        );

        RightRegisterPanel.add(RegisterForm, new java.awt.GridBagConstraints());

        LoginRegisterLayeredPanel.add(RightRegisterPanel, "card3");

        RightLoginPanel.setBackground(new java.awt.Color(255, 255, 255));
        RightLoginPanel.setPreferredSize(new java.awt.Dimension(640, 720));
        RightLoginPanel.setLayout(new java.awt.GridBagLayout());

        LoginForm.setBackground(new java.awt.Color(255, 255, 255));
        LoginForm.setMaximumSize(new java.awt.Dimension(400, 600));
        LoginForm.setPreferredSize(new java.awt.Dimension(350, 400));

        IniciarSesion.setFont(new java.awt.Font("Roboto Medium", 0, 30)); // NOI18N
        IniciarSesion.setForeground(new java.awt.Color(51, 51, 51));
        IniciarSesion.setText("Iniciar Sesi√≥n");

        IDLogin.setBackground(new java.awt.Color(255, 255, 255));
        IDLogin.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        IDLogin.setForeground(new java.awt.Color(51, 51, 51));
        IDLogin.setBorder(null);
        TextPrompt placeholder = new TextPrompt("ID", IDLogin);
        placeholder.changeAlpha(0.4f);
        IDLogin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                IDLoginFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                IDLoginFocusLost(evt);
            }
        });
        IDLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                IDLoginMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IDLoginMouseClicked(evt);
            }
        });
        IDLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDLoginActionPerformed(evt);
            }
        });
        IDLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                onlyDigits(evt);
            }
        });

        PasswordLogin.setBackground(new java.awt.Color(255, 255, 255));
        PasswordLogin.setForeground(new java.awt.Color(153, 153, 153));
        PasswordLogin.setBorder(null);
        PasswordLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                onlyLettersOrDigits(evt);
            }
        });

        SubtitleLogin.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        SubtitleLogin.setForeground(new java.awt.Color(51, 51, 51));
        SubtitleLogin.setText("Ingrese DNI y contrase√±a");

        RegisterOptionLogin.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        RegisterOptionLogin.setForeground(new java.awt.Color(0, 204, 153));
        RegisterOptionLogin.setText("Registrarse como paciente nuevo");
        RegisterOptionLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RegisterOptionLoginMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                registerOptionLoginMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                registerOptionLoginMouseEntered(evt);
            }
        });

        ButtonPanel.setBackground(new java.awt.Color(0, 204, 153));
        ButtonPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonPanelMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loginButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loginButtonMouseEntered(evt);
            }
        });

        ButtonLabelLogin.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        ButtonLabelLogin.setForeground(new java.awt.Color(255, 255, 255));
        ButtonLabelLogin.setText("Ingresar");

        javax.swing.GroupLayout ButtonPanelLayout = new javax.swing.GroupLayout(ButtonPanel);
        ButtonPanel.setLayout(ButtonPanelLayout);
        ButtonPanelLayout.setHorizontalGroup(
            ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonPanelLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(ButtonLabelLogin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ButtonPanelLayout.setVerticalGroup(
            ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ButtonLabelLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout LoginFormLayout = new javax.swing.GroupLayout(LoginForm);
        LoginForm.setLayout(LoginFormLayout);
        LoginFormLayout.setHorizontalGroup(
            LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginFormLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(IniciarSesion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(IDLogin)
                    .addComponent(PasswordLogin)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2)
                    .addGroup(LoginFormLayout.createSequentialGroup()
                        .addComponent(SubtitleLogin)
                        .addGap(127, 127, 127))
                    .addComponent(ButtonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RegisterOptionLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        LoginFormLayout.setVerticalGroup(
            LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginFormLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(IniciarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SubtitleLogin)
                .addGap(18, 18, 18)
                .addComponent(IDLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RegisterOptionLogin)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        RightLoginPanel.add(LoginForm, new java.awt.GridBagConstraints());

        LoginRegisterLayeredPanel.add(RightLoginPanel, "card2");

        switchLayeredPane(LoginRegisterLayeredPanel, RightLoginPanel);

        javax.swing.GroupLayout LoginPanelLayout = new javax.swing.GroupLayout(LoginPanel);
        LoginPanel.setLayout(LoginPanelLayout);
        LoginPanelLayout.setHorizontalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addComponent(LeftLoginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(640, Short.MAX_VALUE))
            .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginPanelLayout.createSequentialGroup()
                    .addGap(0, 640, Short.MAX_VALUE)
                    .addComponent(LoginRegisterLayeredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        LoginPanelLayout.setVerticalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LeftLoginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(LoginRegisterLayeredPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MainLayeredPane.add(LoginPanel, "card2");

        switchLayeredPane(MainLayeredPane, LoginPanel);

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainLayeredPane)
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainLayeredPane)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IDLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDLoginActionPerformed

    private void IDLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IDLoginMouseClicked
        ServicePersona servicePersona = new ServicePersona();
        try{
            Persona persona = servicePersona.login(Integer.parseInt(IDLogin.getText()), PasswordLogin.getText());
            if (persona instanceof Paciente){
                Paciente paciente = (Paciente)persona;
                System.out.println(paciente.toString());
            }
            if (persona instanceof Medico){
                Medico medico = (Medico)persona;
                System.out.println(medico.toString());
            }
        }catch(ServiceException exception){
            JOptionPane.showMessageDialog(null, exception.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_IDLoginMouseClicked

    private void IDLoginMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IDLoginMousePressed
//        IDLogin.setForeground(Color.black);
//        IDLogin.setText("");
        
    }//GEN-LAST:event_IDLoginMousePressed

    private void IDLoginFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IDLoginFocusGained
        // TODO add your handling code here:
//        if (IDLogin.getText() == "ID" || IDLogin.getText() == ""){
//            IDLogin.setForeground(Color.black);
//            IDLogin.setText("");
//        }
    }//GEN-LAST:event_IDLoginFocusGained

    private void IDLoginFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IDLoginFocusLost
        // TODO add your handling code here:
//        if (IDLogin.getText() == ""){
//            IDLogin.setForeground(Color.gray);
//            IDLogin.setText("ID");
//        }
    }//GEN-LAST:event_IDLoginFocusLost

    private void onlyDigits(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onlyDigits
        validateOnlyDigits(evt);
    }//GEN-LAST:event_onlyDigits

    private void onlyLettersOrDigits(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onlyLettersOrDigits
        validateOnlyLettersOrDigits(evt);
    }//GEN-LAST:event_onlyLettersOrDigits

    private void loginButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseExited
        Color color = new Color(0, 204, 153);
        setCursor(NORMAL);
        ButtonPanel.setBackground(color);
    }//GEN-LAST:event_loginButtonMouseExited

    private void loginButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseEntered
        Color color = new Color(90, 204, 153);
        setCursor(HAND_CURSOR);
        ButtonPanel.setBackground(color);
    }//GEN-LAST:event_loginButtonMouseEntered

    private void registerOptionLoginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerOptionLoginMouseEntered
        Color color = new Color(90, 204, 153);
        setCursor(HAND_CURSOR);
        RegisterOptionLogin.setForeground(color);
    }//GEN-LAST:event_registerOptionLoginMouseEntered

    private void registerOptionLoginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerOptionLoginMouseExited
        Color color = new Color(0, 204, 153);
        setCursor(NORMAL);
        RegisterOptionLogin.setForeground(color);
    }//GEN-LAST:event_registerOptionLoginMouseExited

    private void RegisterOptionLoginMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterOptionLoginMousePressed
        IDLogin.setText("");
        PasswordLogin.setText("");
        switchLayeredPane(LoginRegisterLayeredPanel, RightRegisterPanel);
    }//GEN-LAST:event_RegisterOptionLoginMousePressed

    private void RegisterPacienteDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterPacienteDNIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RegisterPacienteDNIActionPerformed

    private void RegisterPacienteButtonPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterPacienteButtonPanelMouseEntered
        Color color = new Color(90, 204, 153);
        setCursor(HAND_CURSOR);
        RegisterOptionLogin.setForeground(color);
    }//GEN-LAST:event_RegisterPacienteButtonPanelMouseEntered

    private void RegisterPacienteButtonPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterPacienteButtonPanelMouseExited
        Color color = new Color(0, 204, 153);
        setCursor(NORMAL);
        RegisterOptionLogin.setForeground(color);
    }//GEN-LAST:event_RegisterPacienteButtonPanelMouseExited

    private void RegisterPacienteClearPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterPacienteClearPanelMouseEntered
        Color color = new Color(214, 204, 204);
        setCursor(HAND_CURSOR);
        RegisterOptionLogin.setForeground(color);
    }//GEN-LAST:event_RegisterPacienteClearPanelMouseEntered

    private void RegisterPacienteClearPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterPacienteClearPanelMouseExited
        Color color = new Color(204, 204, 204);
        setCursor(NORMAL);
        RegisterOptionLogin.setForeground(color);
    }//GEN-LAST:event_RegisterPacienteClearPanelMouseExited

    private void RegisterPacienteClearPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterPacienteClearPanelMousePressed
        clearPaciente();
    }//GEN-LAST:event_RegisterPacienteClearPanelMousePressed

    private void RegisterPacienteButtonPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterPacienteButtonPanelMousePressed
        if (validarRegisterPaciente() == false){
            JOptionPane.showMessageDialog(null, "Complete todos los campos", "Advertencia", JOptionPane.PLAIN_MESSAGE);
        }else{
            Integer dni = Integer.parseInt(RegisterPacienteDNI.getText());
            String password = RegisterPacientePassword.getText();
            String password2 = RegisterPacientePasswordRepeat.getText();
            String nombre = RegisterPacienteNombre.getText();
            String apellido = RegisterPacienteApellido.getText();
            String naciemiento = RegisterPacienteNacimiento.getText();
            String obraSocial = RegisterPacienteObraSocial.getSelectedItem().toString();
            String sexo = null;
            if (RegisterPacienteHombre.isSelected()){
                sexo = "hombre";
            }
            if (RegisterPacienteMujer.isSelected()){
                sexo = "mujer";
            }
            Paciente paciente = new Paciente();
            paciente.setDNI(dni);
            paciente.setPassword(password);
            paciente.setNombre(nombre);
            paciente.setApellido(apellido);
            paciente.setNacimiento(LocalDate.parse(naciemiento));
            paciente.setSexo(sexo);
            paciente.setObrasocial(obraSocial);
            try{
                ServicePaciente servicePaciente = new ServicePaciente();
                servicePaciente.create(paciente);
                System.out.println(paciente.toString());
                clearPaciente();
                switchLayeredPane(LoginRegisterLayeredPanel, RightLoginPanel);
            }catch (ServiceException exception){
                JOptionPane.showMessageDialog(null, exception.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_RegisterPacienteButtonPanelMousePressed

    private void RegisterPacienteDNIKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegisterPacienteDNIKeyPressed
        validateOnlyDigits(evt);
    }//GEN-LAST:event_RegisterPacienteDNIKeyPressed

    private void RegisterPacientePasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegisterPacientePasswordKeyPressed
        validateOnlyLettersOrDigits(evt);
    }//GEN-LAST:event_RegisterPacientePasswordKeyPressed

    private void RegisterPacientePasswordRepeatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegisterPacientePasswordRepeatKeyPressed
        validateOnlyLettersOrDigits(evt);
    }//GEN-LAST:event_RegisterPacientePasswordRepeatKeyPressed

    private void RegisterPacienteNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegisterPacienteNombreKeyPressed
        validateNames(evt);
    }//GEN-LAST:event_RegisterPacienteNombreKeyPressed

    private void RegisterPacienteApellidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegisterPacienteApellidoKeyPressed
        validateNames(evt);
    }//GEN-LAST:event_RegisterPacienteApellidoKeyPressed

    private void RegisterPacienteNacimientoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RegisterPacienteNacimientoFocusLost
        Boolean status = validateLocalDates(RegisterPacienteNacimiento);
        changeBorderColor(status, NacimientoPacienteSeparator);
    }//GEN-LAST:event_RegisterPacienteNacimientoFocusLost

    private void BackToLoginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToLoginMouseEntered
        Color color = new Color(90, 204, 153);
        setCursor(HAND_CURSOR);
        BackToLogin.setForeground(color);
    }//GEN-LAST:event_BackToLoginMouseEntered

    private void BackToLoginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToLoginMouseExited
        Color color = new Color(0, 204, 153);
        setCursor(NORMAL);
        BackToLogin.setForeground(color);
    }//GEN-LAST:event_BackToLoginMouseExited

    private void BackToLoginMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToLoginMousePressed
        clearPaciente();
        switchLayeredPane(LoginRegisterLayeredPanel, RightLoginPanel);
    }//GEN-LAST:event_BackToLoginMousePressed

    private void ButtonPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonPanelMousePressed
        System.out.println("Flag 1");
        ServicePersona servicePersona = new ServicePersona();
        System.out.println("Flag 2");
        try{
            Persona persona = servicePersona.login(Integer.parseInt(IDLogin.getText()), PasswordLogin.getText());
            if (persona instanceof Paciente){
                pacienteLogged = (Paciente)persona;
                System.out.println(pacienteLogged.toString());
            }
            if (persona instanceof Medico){
                medicoLogged = (Medico)persona;
                System.out.println(medicoLogged.toString());
            }
            setCursor(NORMAL);
            switchLayeredPane(MainLayeredPane, DashboardPanel);
        }catch(ServiceException exception){
            JOptionPane.showMessageDialog(null, exception.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ButtonPanelMousePressed

    private void MedicoComboBoxReservarTurnoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedicoComboBoxReservarTurnoMouseEntered
        MedicoComboBoxReservarTurno.setBorder(null);
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_MedicoComboBoxReservarTurnoMouseEntered

    private void MedicoComboBoxReservarTurnoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedicoComboBoxReservarTurnoMouseExited
        MedicoComboBoxReservarTurno.setBorder(null);
        setCursor(NORMAL);
    }//GEN-LAST:event_MedicoComboBoxReservarTurnoMouseExited

    private void SearchMedicoButtonReservarTurnoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchMedicoButtonReservarTurnoMousePressed
        populateMedicoComboBox(SearchMedicoReservarTurno.getText());
        if (MedicoComboBoxReservarTurno.getItemCount() > 0) {
            MedicoComboBoxReservarTurno.setSelectedIndex(0);
//            populateConsultasDisponibles();
        }
//        MedicoComboBoxReservarTurno.setSelectedIndex(0);
//        populateConsultasDisponibles();
    }//GEN-LAST:event_SearchMedicoButtonReservarTurnoMousePressed

    private void SearchMedicoReservarTurnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchMedicoReservarTurnoKeyPressed
        int resultado = validateNamesWithEnter(evt);
        System.out.println("resultado " + resultado);
        if (resultado == 1){
            populateMedicoComboBox(SearchMedicoReservarTurno.getText());
        }
    }//GEN-LAST:event_SearchMedicoReservarTurnoKeyPressed

    private void SearchMedicoButtonReservarTurnoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchMedicoButtonReservarTurnoMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_SearchMedicoButtonReservarTurnoMouseEntered

    private void SearchMedicoButtonReservarTurnoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchMedicoButtonReservarTurnoMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_SearchMedicoButtonReservarTurnoMouseExited

    private void ReservarTurnoMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReservarTurnoMenuMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_ReservarTurnoMenuMouseEntered

    private void ReservarTurnoMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReservarTurnoMenuMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_ReservarTurnoMenuMouseExited

    private void ReservarTurnoMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReservarTurnoMenuMousePressed
        switchLayeredPane(ContentLayeredPane, ReservarTurnoPanel);
        populateConsultasDisponibles("init");
    }//GEN-LAST:event_ReservarTurnoMenuMousePressed

    private void MedicoComboBoxReservarTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MedicoComboBoxReservarTurnoActionPerformed
        if (MedicoComboBoxReservarTurno.getItemCount() > 0){
            populateConsultorioComboBox();
            populateConsultasDisponibles();
        }
    }//GEN-LAST:event_MedicoComboBoxReservarTurnoActionPerformed

    private void ConsultorioComboBoxReservarTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultorioComboBoxReservarTurnoActionPerformed
        if (ConsultorioComboBoxReservarTurno.getItemCount() > 0){
            populateConsultasDisponibles(ConsultorioComboBoxReservarTurno.getSelectedItem().toString());
        }
    }//GEN-LAST:event_ConsultorioComboBoxReservarTurnoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BackToLogin;
    private javax.swing.JPanel BorrarButtonReservarTurno;
    private javax.swing.JLabel ButtonLabelLogin;
    private javax.swing.JPanel ButtonPanel;
    private javax.swing.JPanel CenterLeftMenu;
    private javax.swing.JLayeredPane CenterLeftMenuLayeredPane;
    private javax.swing.JComboBox<String> ConsultorioComboBoxReservarTurno;
    private javax.swing.JLayeredPane ContentLayeredPane;
    private javax.swing.JPanel DashboardPanel;
    private javax.swing.JLabel HistorialTurnosMenu;
    private javax.swing.JTextField IDLogin;
    private javax.swing.JLabel IniciarSesion;
    private javax.swing.JPanel LeftLoginPanel;
    private javax.swing.JPanel LeftMenu;
    private javax.swing.JPanel LoginForm;
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JLayeredPane LoginRegisterLayeredPanel;
    private javax.swing.JLayeredPane MainLayeredPane;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JComboBox<Medico> MedicoComboBoxReservarTurno;
    private javax.swing.JSeparator NacimientoPacienteSeparator;
    private javax.swing.JPasswordField PasswordLogin;
    private javax.swing.JLabel ProximosTurnosMenu;
    private javax.swing.JPanel RegisterForm;
    private javax.swing.JLabel RegisterOptionLogin;
    private javax.swing.JTextField RegisterPacienteApellido;
    private javax.swing.JPanel RegisterPacienteButtonPanel;
    private javax.swing.JPanel RegisterPacienteClearPanel;
    private javax.swing.JTextField RegisterPacienteDNI;
    private javax.swing.JRadioButton RegisterPacienteHombre;
    private javax.swing.JRadioButton RegisterPacienteMujer;
    private javax.swing.JTextField RegisterPacienteNacimiento;
    private javax.swing.JTextField RegisterPacienteNombre;
    private javax.swing.JComboBox<String> RegisterPacienteObraSocial;
    private javax.swing.JPasswordField RegisterPacientePassword;
    private javax.swing.JPasswordField RegisterPacientePasswordRepeat;
    private javax.swing.ButtonGroup RegisterPacienteSexo;
    private javax.swing.JLabel ReservarTurnoMenu;
    private javax.swing.JPanel ReservarTurnoPanel;
    private javax.swing.JPanel RightLoginPanel;
    private javax.swing.JPanel RightRegisterPanel;
    private javax.swing.JLabel Salir;
    private javax.swing.JPanel SearchMedicoButtonReservarTurno;
    private javax.swing.JTextField SearchMedicoReservarTurno;
    private javax.swing.JLabel SubtitleLogin;
    private javax.swing.JPanel TopLeftMenu;
    private javax.swing.JPanel TurnoSeleccionadoReservarTurno;
    private javax.swing.JPanel TurnosDisponiblesContenedorReservarTurno;
    private javax.swing.JScrollPane TurnosDisponiblesReservarTurno;
    private javax.swing.JLabel Username;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    // End of variables declaration//GEN-END:variables

    private void switchLayeredPane(JLayeredPane jLayeredPane, JPanel panel) {
        jLayeredPane.removeAll();
        jLayeredPane.add(panel);
        jLayeredPane.repaint();
        jLayeredPane.revalidate();
    }

    private boolean validarRegisterPaciente() {
        String dni = RegisterPacienteDNI.getText();
        String password = String.valueOf(RegisterPacientePassword.getPassword());
        String password2 = String.valueOf(RegisterPacientePasswordRepeat.getPassword());
        String nombre = RegisterPacienteNombre.getText();
        String apellido = RegisterPacienteApellido.getText();
        String naciemiento = RegisterPacienteNacimiento.getText();
        String sexo = null;
        if (RegisterPacienteHombre.isSelected()){
            sexo = "hombre";
        }
        if (RegisterPacienteMujer.isSelected()){
            sexo = "mujer";
        }
//        System.out.print(dni + " " + password + " " + password2 + " " + nombre + " " + apellido + " " + naciemiento + " " + sexo);
        if (dni == "" || password == "" || !password.equals(password2) || nombre == "" || apellido == "" || naciemiento == "" || sexo == null){
            return false;
        }else{
            return true;
        }
    }

    private void clearPaciente() {
        RegisterPacienteDNI.setText("");
        RegisterPacientePassword.setText("");
        RegisterPacientePasswordRepeat.setText("");
        RegisterPacienteNombre.setText("");
        RegisterPacienteApellido.setText("");
        RegisterPacienteNacimiento.setText("");
        RegisterPacienteHombre.setSelected(false);
        RegisterPacienteMujer.setSelected(false);
        RegisterPacienteObraSocial.setSelectedIndex(0);
    }

    private void validateOnlyDigits(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)){
            evt.consume();
        }
    }

    private void validateOnlyLettersOrDigits(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (!Character.isLetterOrDigit(c)){
            evt.consume();
        }
    }

    private void validateNames(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if ( (!Character.isLetter(c)) && (!Character.isSpaceChar(c)) && (String.valueOf(c) != "-") ) {
            evt.consume();
        }
    }
    
    private int validateNamesWithEnter(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        int result = 0;
        if ( (!Character.isLetter(c)) && (!Character.isSpaceChar(c)) && (String.valueOf(c) != "-") && (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE) && (evt.getKeyCode() != KeyEvent.VK_ENTER) ) {
            evt.consume();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            result = 1;
        }
        return result;
    }
    
    private Boolean validateLocalDates(JTextField jTextField){
        String dateString = jTextField.getText();
        Boolean result = true;
        try{
            LocalDate.parse(dateString, DateTimeFormatter.ISO_DATE);
        }catch(DateTimeException exception){
            result = false;
            JOptionPane.showMessageDialog(null, "Fecha inv√°lida", "Advertencia", JOptionPane.PLAIN_MESSAGE);
        }finally{
            return result;
        }
    }
    
    private void changeBorderColor(Boolean state, JSeparator separator){
        if (!state){
            separator.setForeground(Color.red);
            separator.setBackground(Color.red);
        }else{
            Color color = new Color(51, 51, 51);
            separator.setForeground(color);
            separator.setBackground(Color.red);
        }
    }
    
    private ArrayList<Medico> searchAllMedicos(){
        ServiceMedico serviceMedico = new ServiceMedico();
        ArrayList<Medico> medicos = null;
        try{
            medicos = serviceMedico.searchAll(1);
        }
        catch(ServiceException exception){
            JOptionPane.showMessageDialog(null, "No se pudieron encontrar resultados", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return medicos;
    }
    
    private ArrayList<Medico> searchAllMedicosByApellido(String apellido){
        ServiceMedico serviceMedico = new ServiceMedico();
        ArrayList<Medico> medicos = null;
        try{
            medicos = serviceMedico.searchAllByApellido(1, apellido);
        }
        catch(ServiceException exception){
            JOptionPane.showMessageDialog(null, "No se pudieron encontrar resultados", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return medicos;
    }
    
    private ArrayList<ConsultorioMedico> searchAllConsultoriosMedicosByDNI(int dni){
        ServiceConsultorioMedico serviceConsultorioMedico = new ServiceConsultorioMedico();
        ArrayList<ConsultorioMedico> consultoriosMedicos = null;
        try{
            consultoriosMedicos = serviceConsultorioMedico.searchAll(dni);
        }catch(ServiceException exception){
            JOptionPane.showMessageDialog(null, "Error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return consultoriosMedicos;
    }
    
    private ArrayList<Consulta> searchAllConsultasByMedico(int dni, int activo){
        ServiceConsulta serviceConsulta = new ServiceConsulta();
        ArrayList<Consulta> consultas = null;
        try{
            consultas = serviceConsulta.serchAllByMedico(dni, activo);
        }catch(ServiceException exception){
            JOptionPane.showMessageDialog(null, "Error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return consultas;
    }
    
    private void populateMedicoComboBox(String... apellido){
        MedicoComboBoxReservarTurno.removeAllItems();
        System.out.println("Flag 8");
        ArrayList<Medico> medicos = (apellido.length > 0) ? searchAllMedicosByApellido(apellido[0]) : searchAllMedicos();
        System.out.println("Flag 9");
        if ( (!medicos.isEmpty()) && (medicos != null) ){
            for (Medico medico : medicos){
                MedicoComboBoxReservarTurno.addItem(medico);
            }
//            DefaultComboBoxModel<Medico> model = new DefaultComboBoxModel<>();
//            MedicoComboBoxReservarTurno.setModel(model);
            MedicoComboBoxReservarTurno.setRenderer(new MedicoListCellRenderer());
            if (medicos.size() == 1){
                MedicoComboBoxReservarTurno.setSelectedIndex(0);
            }
        }
    }
    
    private void populateConsultorioComboBox(){
        ConsultorioComboBoxReservarTurno.removeAllItems();
        Medico medico = (Medico) MedicoComboBoxReservarTurno.getSelectedItem();
        ArrayList<ConsultorioMedico> consultoriosMedicos = searchAllConsultoriosMedicosByDNI(medico.getDNI());
        ArrayList<String> consultorios = serviceConsultorioMedico.generateConsultoriosArray(consultoriosMedicos);
        ConsultorioComboBoxReservarTurno.addItem("Todos");
        if (!(consultorios.isEmpty()) && (consultorios != null))
        for (String consultorio : consultorios){
            ConsultorioComboBoxReservarTurno.addItem(consultorio);
        }
    }
    
    private void populateConsultasDisponibles(String... param){
        TurnosDisponiblesContenedorReservarTurno.removeAll();
        TurnosDisponiblesContenedorReservarTurno.revalidate();
        TurnosDisponiblesContenedorReservarTurno.repaint();
        if (!(param.length > 0) && (MedicoComboBoxReservarTurno.getItemCount() > 0)){
            Medico medico = (Medico) MedicoComboBoxReservarTurno.getSelectedItem();
            Paciente paciente = pacienteLogged;
            ArrayList<ConsultorioMedico> consultoriosMedicos = searchAllConsultoriosMedicosByDNI(medico.getDNI());
            ArrayList<Consulta> consultas = searchAllConsultasByMedico(medico.getDNI(), 1);
            ArrayList<Consulta> consultasNew = serviceConsulta.generateArrayConsultas(paciente, consultas, consultoriosMedicos);
            
            for (Consulta consulta : consultasNew){
                ConsultaInfoPanel panel = new ConsultaInfoPanel(consulta);
                TurnosDisponiblesContenedorReservarTurno.add(Box.createVerticalStrut(2));
                TurnosDisponiblesContenedorReservarTurno.add(panel);
            }
        
            TurnosDisponiblesContenedorReservarTurno.setPreferredSize(new Dimension(868, 8000));
        }
        if ((param.length > 0) && (MedicoComboBoxReservarTurno.getItemCount() > 0) && !(param[0]).equals("init")){
            Medico medico = (Medico) MedicoComboBoxReservarTurno.getSelectedItem();
            Paciente paciente = pacienteLogged;
            ArrayList<ConsultorioMedico> consultoriosMedicos = searchAllConsultoriosMedicosByDNI(medico.getDNI());
            ArrayList<Consulta> consultas = searchAllConsultasByMedico(medico.getDNI(), 1);
            ArrayList<Consulta> consultasNew = serviceConsulta.generateArrayConsultas(paciente, consultas, consultoriosMedicos);
            
            if (!(param[0]).equals("Todos")){
                System.out.println("FLAG 70");
                System.out.println(param[0]);
                for (Consulta consulta : consultasNew){
                    if (param[0].equals(consulta.getConsultorio())){
                        System.out.println("FLAG 80");
                        ConsultaInfoPanel panel = new ConsultaInfoPanel(consulta);
                        TurnosDisponiblesContenedorReservarTurno.add(Box.createVerticalStrut(2));
                        TurnosDisponiblesContenedorReservarTurno.add(panel);
                    }
                }
            }else{
                for (Consulta consulta : consultasNew){
                    ConsultaInfoPanel panel = new ConsultaInfoPanel(consulta);
                    TurnosDisponiblesContenedorReservarTurno.add(Box.createVerticalStrut(2));
                    TurnosDisponiblesContenedorReservarTurno.add(panel);
                }
            }
        
            TurnosDisponiblesContenedorReservarTurno.setPreferredSize(new Dimension(868, 8000));
        }
        TurnosDisponiblesReservarTurno.revalidate();
    }
    
//    private void filterConsultasByConsultorio(String consultorio){
//        Arra
//        for (int i = 0; i < TurnosDisponiblesContenedorReservarTurno.getComponentCount(); i++) {
//            Component componente = TurnosDisponiblesContenedorReservarTurno.getComponent(i);
//            if (componente instanceof ConsultaInfoPanel) {
//                ConsultaInfoPanel consultaInfoPanel = (ConsultaInfoPanel) componente;
//                
//            }
//        }
//    }
    
    
}
