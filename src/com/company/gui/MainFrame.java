/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.company.gui;

import com.company.entidades.Consulta;
import com.company.entidades.ConsultorioMedico;
import com.company.entidades.Medico;
import com.company.entidades.Paciente;
import com.company.entidades.Persona;
import com.company.gui.ConsultaGui.ConsultaInfoPanel;
import com.company.gui.Interfaces.PanelEventListener;
import com.company.gui.MedicoGui.MedicoInfoPanel;
import com.company.gui.MedicoGui.MedicoListCellRenderer;
import com.company.gui.ReportesGui.ConsultasReportesInfoPanel;
import com.company.gui.ReportesGui.RecaudacionesReportesInfoPanel;
import com.company.service.ServiceConsulta;
import com.company.service.ServiceConsultorioMedico;
import com.company.service.ServiceException;
import com.company.service.ServiceMedico;
import com.company.service.ServicePaciente;
import com.company.service.ServicePersona;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.Month;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.time.format.FormatStyle;
import java.util.ArrayList;
import java.util.List;
import javax.swing.Box;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSeparator;
import javax.swing.JTextField;
import javax.swing.JToolBar;
import javax.swing.Timer;
import javax.swing.text.DateFormatter;
import org.w3c.dom.css.RGBColor;

/**
 *
 * @author User
 */
public class MainFrame extends javax.swing.JFrame implements PanelEventListener{
    
    private Paciente pacienteLogged;
    private Medico medicoLogged;
    
    private ServiceConsulta serviceConsulta = new ServiceConsulta();
    private ServiceConsultorioMedico serviceConsultorioMedico = new ServiceConsultorioMedico();
    private ServiceMedico serviceMedico = new ServiceMedico();
    private ServicePaciente servicePaciente = new ServicePaciente();
    private ServicePersona servicePersona = new ServicePersona();

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        RegisterPacienteSexo = new javax.swing.ButtonGroup();
        MainPanel = new javax.swing.JPanel();
        MainLayeredPane = new javax.swing.JLayeredPane();
        InitPanel = new javax.swing.JPanel();
        InitLayeredPane = new javax.swing.JLayeredPane();
        InitContenedorPanel = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        AdminPanel = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        PacientePanel = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        DashboardPanel = new javax.swing.JPanel();
        LeftMenu = new javax.swing.JPanel();
        TopLeftMenu = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        Username = new javax.swing.JLabel();
        CenterLeftMenuLayeredPane = new javax.swing.JLayeredPane();
        CenterLeftMenuAdmin = new javax.swing.JPanel();
        AdministrarMedicosMenu = new javax.swing.JLabel();
        AdministrarPacientesMenu = new javax.swing.JLabel();
        ReportesMenu = new javax.swing.JLabel();
        CenterLeftMenuMedico = new javax.swing.JPanel();
        ProximosTurnosMenuMedico = new javax.swing.JLabel();
        CenterLeftMenu = new javax.swing.JPanel();
        ReservarTurnoMenu = new javax.swing.JLabel();
        ProximosTurnosMenu = new javax.swing.JLabel();
        HistorialTurnosMenu = new javax.swing.JLabel();
        Salir = new javax.swing.JLabel();
        BackArrow = new javax.swing.JLabel();
        ContentLayeredPane = new javax.swing.JLayeredPane();
        ReportesPanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        ReportesRecaudacionesDesde = new javax.swing.JTextField();
        jLabel70 = new javax.swing.JLabel();
        ReportesRecaudacionesHasta = new javax.swing.JTextField();
        ReportesRecaudacionesButton = new javax.swing.JPanel();
        jLabel71 = new javax.swing.JLabel();
        jSeparator21 = new javax.swing.JSeparator();
        jSeparator22 = new javax.swing.JSeparator();
        ReportesRecaudacionesScrollPane = new javax.swing.JScrollPane();
        ReportesRecaudacionesContenedor = new javax.swing.JPanel();
        jLabel72 = new javax.swing.JLabel();
        ReportesConsultasScrollPane = new javax.swing.JScrollPane();
        ReportesConsultasContenedor = new javax.swing.JPanel();
        jLabel73 = new javax.swing.JLabel();
        ReportesConsultasDNI = new javax.swing.JTextField();
        jSeparator23 = new javax.swing.JSeparator();
        ReportesConsultasDesde = new javax.swing.JTextField();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        ReportesConsultasHasta = new javax.swing.JTextField();
        jSeparator24 = new javax.swing.JSeparator();
        jSeparator25 = new javax.swing.JSeparator();
        ReportesConsultasButton = new javax.swing.JPanel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        ReportesRecaudacionesTotal = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        ReportesConsultasTotal = new javax.swing.JLabel();
        EditarMedicoPanel = new javax.swing.JPanel();
        EditarMedicoTitle = new javax.swing.JLabel();
        EditarMedicoDNI = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        EditarMedicoRepetirPasswordLabel = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        EditarMedicoNombre = new javax.swing.JTextField();
        EditarMedicoApellido = new javax.swing.JTextField();
        EditarMedicoHonorarios = new javax.swing.JTextField();
        jSeparator14 = new javax.swing.JSeparator();
        jSeparator15 = new javax.swing.JSeparator();
        jSeparator16 = new javax.swing.JSeparator();
        jSeparator17 = new javax.swing.JSeparator();
        jSeparator18 = new javax.swing.JSeparator();
        EditarMedicoRepetirPassword = new javax.swing.JPasswordField();
        EditarMedicoPassword = new javax.swing.JPasswordField();
        jSeparator19 = new javax.swing.JSeparator();
        jSeparator20 = new javax.swing.JSeparator();
        EditarMedicoGuardarButton = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        EditarMedicoBorrarButton = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        EditarMedicoConfirmacionPanel = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        EditarMedicoConsultoriosMedicosTitle = new javax.swing.JLabel();
        EditarMedicoCancelarButton = new javax.swing.JPanel();
        jLabel69 = new javax.swing.JLabel();
        EditarMedicoConsultoriosMedicosContenedor = new javax.swing.JPanel();
        EditarMedicoConsultoriosMedicosGuardarButton = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        EditarMedicoConsultoriosMedicosBorrarButton = new javax.swing.JPanel();
        jLabel66 = new javax.swing.JLabel();
        EditarConsultoriosMedicosScrollPane = new javax.swing.JScrollPane();
        EditarMedicoConsultoriosMedicosPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        LunesConsultoriosMedicos = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        LunesEntradaConsultoriosMedicos = new javax.swing.JTextField();
        LunesSalidaConsultoriosMedicos = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        MartesConsultoriosMedicos = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        MartesEntradaConsultoriosMedicos = new javax.swing.JTextField();
        MartesSalidaConsultoriosMedicos = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        MiercolesConsultoriosMedicos = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        MiercolesEntradaConsultoriosMedicos = new javax.swing.JTextField();
        MiercolesSalidaConsultoriosMedicos = new javax.swing.JTextField();
        jLabel62 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        JuevesConsultoriosMedicos = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        JuevesEntradaConsultoriosMedicos = new javax.swing.JTextField();
        JuevesSalidaConsultoriosMedicos = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        SabadoConsultoriosMedicos = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        SabadoEntradaConsultoriosMedicos = new javax.swing.JTextField();
        SabadoSalidaConsultoriosMedicos = new javax.swing.JTextField();
        jLabel65 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        ViernesConsultoriosMedicos = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        ViernesEntradaConsultoriosMedicos = new javax.swing.JTextField();
        ViernesSalidaConsultoriosMedicos = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        EditarMedicoDesactivarButton = new javax.swing.JPanel();
        EditarMedicoDesactivarText = new javax.swing.JLabel();
        EditarMedicoID = new javax.swing.JLabel();
        EditarMedicoObraSocial = new javax.swing.JComboBox<>();
        AdministrarMedicosPanel = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        AdministrarMedicosScrollPane = new javax.swing.JScrollPane();
        AdministrarMedicosContenedor = new javax.swing.JPanel();
        AdministrarMedicosSearchTextfield = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jSeparator12 = new javax.swing.JSeparator();
        AdministrarMedicosSearchButton = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        AdministrarMedicosActivoComboBox = new javax.swing.JComboBox<>();
        jSeparator13 = new javax.swing.JSeparator();
        AdministrarMedicoAgregarButton = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        ProximosTurnosMedicoPanel = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        ProximosTurnosMedicoScrollPane = new javax.swing.JScrollPane();
        ProximosTurnosMedicoContenedor = new javax.swing.JPanel();
        ProximosTurnosMedicoFechaComboBox = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        jSeparator11 = new javax.swing.JSeparator();
        HistorialTurnosPanel = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        HistorialTurnosScrollPane = new javax.swing.JScrollPane();
        HistorialTurnosContenedor = new javax.swing.JPanel();
        ProximosTurnosPanel = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        ProximosTurnosScrollPane = new javax.swing.JScrollPane();
        ProximosTurnosContenedor = new javax.swing.JPanel();
        ProximoTurnoAEliminar = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        ProximosTurnosMantenerButton = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        ProximosTurnosCancelarButton = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        ReservarTurnoPanel = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        SearchMedicoReservarTurno = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        SearchMedicoButtonReservarTurno = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        TurnosDisponiblesReservarTurno = new javax.swing.JScrollPane();
        TurnosDisponiblesContenedorReservarTurno = new javax.swing.JPanel();
        TurnoSeleccionadoReservarTurno = new javax.swing.JPanel();
        ConsultorioComboBoxReservarTurno = new javax.swing.JComboBox<>();
        BorrarButtonReservarTurno = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        MedicoComboBoxReservarTurno = new javax.swing.JComboBox<>();
        jSeparator10 = new javax.swing.JSeparator();
        ReservarButtonReservarTurno = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        LoginPanel = new javax.swing.JPanel();
        LeftLoginPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        LoginRegisterLayeredPanel = new javax.swing.JLayeredPane();
        RightRegisterPanel = new javax.swing.JPanel();
        RegisterForm = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        RegisterPacienteDNI = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        RegisterPacienteNombre = new javax.swing.JTextField();
        RegisterPacienteApellido = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        RegisterPacientePassword = new javax.swing.JPasswordField();
        RegisterPacienteNacimiento = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        RegisterPacienteHombre = new javax.swing.JRadioButton();
        RegisterPacienteSexo.add(RegisterPacienteHombre);
        RegisterPacienteMujer = new javax.swing.JRadioButton();
        RegisterPacienteSexo.add(RegisterPacienteMujer);
        jLabel10 = new javax.swing.JLabel();
        RegisterPacienteObraSocial = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        RegisterPacientePasswordRepeat = new javax.swing.JPasswordField();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        NacimientoPacienteSeparator = new javax.swing.JSeparator();
        RegisterPacienteButtonPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        RegisterPacienteClearPanel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        BackToLogin = new javax.swing.JLabel();
        RightLoginPanel = new javax.swing.JPanel();
        LoginForm = new javax.swing.JPanel();
        IniciarSesion = new javax.swing.JLabel();
        IDLogin = new javax.swing.JTextField();
        PasswordLogin = new javax.swing.JPasswordField();
        TextPrompt placeholderPassword = new TextPrompt("**********", PasswordLogin);
        placeholderPassword.changeAlpha(0.4f);
        SubtitleLogin = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        RegisterOptionLogin = new javax.swing.JLabel();
        ButtonPanel = new javax.swing.JPanel();
        ButtonLabelLogin = new javax.swing.JLabel();
        AtrasLogin = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(MainFrame.MAXIMIZED_BOTH);
        setResizable(false);

        MainPanel.setBackground(new java.awt.Color(255, 255, 255));
        MainPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        MainLayeredPane.setLayout(new java.awt.CardLayout());

        InitLayeredPane.setLayout(new java.awt.CardLayout());

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Sin título-2.png"))); // NOI18N

        AdminPanel.setBackground(new java.awt.Color(255, 255, 255));
        AdminPanel.setPreferredSize(new java.awt.Dimension(300, 400));
        AdminPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AdminPanelMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AdminPanelMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AdminPanelMouseEntered(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Roboto Medium", 0, 36)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 153, 153));
        jLabel30.setText("Administrador");

        javax.swing.GroupLayout AdminPanelLayout = new javax.swing.GroupLayout(AdminPanel);
        AdminPanel.setLayout(AdminPanelLayout);
        AdminPanelLayout.setHorizontalGroup(
            AdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminPanelLayout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jLabel30)
                .addGap(35, 35, 35))
        );
        AdminPanelLayout.setVerticalGroup(
            AdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminPanelLayout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(jLabel30)
                .addContainerGap(178, Short.MAX_VALUE))
        );

        PacientePanel.setBackground(new java.awt.Color(255, 255, 255));
        PacientePanel.setPreferredSize(new java.awt.Dimension(300, 400));
        PacientePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PacientePanelMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PacientePanelMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PacientePanelMouseEntered(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Roboto Medium", 0, 36)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 153, 153));
        jLabel32.setText("Médico");

        jLabel33.setFont(new java.awt.Font("Roboto Medium", 0, 36)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 153, 153));
        jLabel33.setText("Paciente");

        javax.swing.GroupLayout PacientePanelLayout = new javax.swing.GroupLayout(PacientePanel);
        PacientePanel.setLayout(PacientePanelLayout);
        PacientePanelLayout.setHorizontalGroup(
            PacientePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PacientePanelLayout.createSequentialGroup()
                .addGroup(PacientePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PacientePanelLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jLabel32))
                    .addGroup(PacientePanelLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel33)))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        PacientePanelLayout.setVerticalGroup(
            PacientePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PacientePanelLayout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel33)
                .addContainerGap(151, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout InitContenedorPanelLayout = new javax.swing.GroupLayout(InitContenedorPanel);
        InitContenedorPanel.setLayout(InitContenedorPanelLayout);
        InitContenedorPanelLayout.setHorizontalGroup(
            InitContenedorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InitContenedorPanelLayout.createSequentialGroup()
                .addGap(290, 290, 290)
                .addComponent(AdminPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92)
                .addComponent(PacientePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(298, Short.MAX_VALUE))
            .addGroup(InitContenedorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(InitContenedorPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel29)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        InitContenedorPanelLayout.setVerticalGroup(
            InitContenedorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InitContenedorPanelLayout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addGroup(InitContenedorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PacientePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AdminPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(167, Short.MAX_VALUE))
            .addGroup(InitContenedorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(InitContenedorPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel29)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        InitLayeredPane.add(InitContenedorPanel, "card2");

        javax.swing.GroupLayout InitPanelLayout = new javax.swing.GroupLayout(InitPanel);
        InitPanel.setLayout(InitPanelLayout);
        InitPanelLayout.setHorizontalGroup(
            InitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
            .addGroup(InitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(InitPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(InitLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        InitPanelLayout.setVerticalGroup(
            InitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
            .addGroup(InitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(InitPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(InitLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        MainLayeredPane.add(InitPanel, "card5");

        DashboardPanel.setBackground(new java.awt.Color(255, 255, 255));

        LeftMenu.setBackground(new java.awt.Color(0, 204, 153));
        LeftMenu.setMaximumSize(new java.awt.Dimension(300, 32767));
        LeftMenu.setMinimumSize(new java.awt.Dimension(300, 720));
        LeftMenu.setPreferredSize(new java.awt.Dimension(300, 720));

        TopLeftMenu.setBackground(new java.awt.Color(0, 204, 153));
        TopLeftMenu.setMinimumSize(new java.awt.Dimension(310, 201));
        TopLeftMenu.setLayout(new java.awt.GridLayout(2, 1));

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/41-410093_male-symbol-png.png"))); // NOI18N
        TopLeftMenu.add(jLabel15);

        Username.setFont(new java.awt.Font("Roboto Medium", 0, 22)); // NOI18N
        Username.setForeground(new java.awt.Color(255, 255, 255));
        Username.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Username.setText("Paciente");
        TopLeftMenu.add(Username);

        CenterLeftMenuLayeredPane.setLayout(new java.awt.CardLayout());

        CenterLeftMenuAdmin.setBackground(new java.awt.Color(0, 204, 153));

        AdministrarMedicosMenu.setFont(new java.awt.Font("Roboto Medium", 0, 20)); // NOI18N
        AdministrarMedicosMenu.setForeground(new java.awt.Color(255, 255, 255));
        AdministrarMedicosMenu.setText("Administrar médicos");
        AdministrarMedicosMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AdministrarMedicosMenuMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AdministrarMedicosMenuMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AdministrarMedicosMenuMouseEntered(evt);
            }
        });

        AdministrarPacientesMenu.setFont(new java.awt.Font("Roboto Medium", 0, 20)); // NOI18N
        AdministrarPacientesMenu.setForeground(new java.awt.Color(255, 255, 255));
        AdministrarPacientesMenu.setText("Administrar pacientes");
        AdministrarPacientesMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AdministrarPacientesMenuMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AdministrarPacientesMenuMouseEntered(evt);
            }
        });

        ReportesMenu.setFont(new java.awt.Font("Roboto Medium", 0, 20)); // NOI18N
        ReportesMenu.setForeground(new java.awt.Color(255, 255, 255));
        ReportesMenu.setText("Reportes");
        ReportesMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ReportesMenuMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ReportesMenuMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ReportesMenuMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout CenterLeftMenuAdminLayout = new javax.swing.GroupLayout(CenterLeftMenuAdmin);
        CenterLeftMenuAdmin.setLayout(CenterLeftMenuAdminLayout);
        CenterLeftMenuAdminLayout.setHorizontalGroup(
            CenterLeftMenuAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CenterLeftMenuAdminLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(CenterLeftMenuAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ReportesMenu)
                    .addComponent(AdministrarMedicosMenu)
                    .addComponent(AdministrarPacientesMenu))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        CenterLeftMenuAdminLayout.setVerticalGroup(
            CenterLeftMenuAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CenterLeftMenuAdminLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(AdministrarPacientesMenu)
                .addGap(18, 18, 18)
                .addComponent(AdministrarMedicosMenu)
                .addGap(18, 18, 18)
                .addComponent(ReportesMenu)
                .addContainerGap(284, Short.MAX_VALUE))
        );

        CenterLeftMenuLayeredPane.add(CenterLeftMenuAdmin, "card4");

        CenterLeftMenuMedico.setBackground(new java.awt.Color(0, 204, 153));

        ProximosTurnosMenuMedico.setFont(new java.awt.Font("Roboto Medium", 0, 20)); // NOI18N
        ProximosTurnosMenuMedico.setForeground(new java.awt.Color(255, 255, 255));
        ProximosTurnosMenuMedico.setText("Próximos turnos");
        ProximosTurnosMenuMedico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ProximosTurnosMenuMedicoMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ProximosTurnosMenuMedicoMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout CenterLeftMenuMedicoLayout = new javax.swing.GroupLayout(CenterLeftMenuMedico);
        CenterLeftMenuMedico.setLayout(CenterLeftMenuMedicoLayout);
        CenterLeftMenuMedicoLayout.setHorizontalGroup(
            CenterLeftMenuMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CenterLeftMenuMedicoLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(ProximosTurnosMenuMedico)
                .addContainerGap(127, Short.MAX_VALUE))
        );
        CenterLeftMenuMedicoLayout.setVerticalGroup(
            CenterLeftMenuMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CenterLeftMenuMedicoLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(ProximosTurnosMenuMedico)
                .addContainerGap(371, Short.MAX_VALUE))
        );

        CenterLeftMenuLayeredPane.add(CenterLeftMenuMedico, "card3");

        CenterLeftMenu.setBackground(new java.awt.Color(0, 204, 153));
        CenterLeftMenu.setMinimumSize(new java.awt.Dimension(310, 410));
        CenterLeftMenu.setPreferredSize(new java.awt.Dimension(310, 410));

        ReservarTurnoMenu.setFont(new java.awt.Font("Roboto Medium", 0, 20)); // NOI18N
        ReservarTurnoMenu.setForeground(new java.awt.Color(255, 255, 255));
        ReservarTurnoMenu.setText("Reservar turno");
        ReservarTurnoMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ReservarTurnoMenuMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ReservarTurnoMenuMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ReservarTurnoMenuMouseEntered(evt);
            }
        });

        ProximosTurnosMenu.setFont(new java.awt.Font("Roboto Medium", 0, 20)); // NOI18N
        ProximosTurnosMenu.setForeground(new java.awt.Color(255, 255, 255));
        ProximosTurnosMenu.setText("Próximos turnos");
        ProximosTurnosMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ProximosTurnosMenuMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ProximosTurnosMenuMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ProximosTurnosMenuMouseEntered(evt);
            }
        });

        HistorialTurnosMenu.setFont(new java.awt.Font("Roboto Medium", 0, 20)); // NOI18N
        HistorialTurnosMenu.setForeground(new java.awt.Color(255, 255, 255));
        HistorialTurnosMenu.setText("Historial de turnos");
        HistorialTurnosMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HistorialTurnosMenuMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HistorialTurnosMenuMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HistorialTurnosMenuMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout CenterLeftMenuLayout = new javax.swing.GroupLayout(CenterLeftMenu);
        CenterLeftMenu.setLayout(CenterLeftMenuLayout);
        CenterLeftMenuLayout.setHorizontalGroup(
            CenterLeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CenterLeftMenuLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(CenterLeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HistorialTurnosMenu)
                    .addComponent(ProximosTurnosMenu)
                    .addComponent(ReservarTurnoMenu))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CenterLeftMenuLayout.setVerticalGroup(
            CenterLeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CenterLeftMenuLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(ReservarTurnoMenu)
                .addGap(18, 18, 18)
                .addComponent(ProximosTurnosMenu)
                .addGap(18, 18, 18)
                .addComponent(HistorialTurnosMenu)
                .addContainerGap(286, Short.MAX_VALUE))
        );

        CenterLeftMenuLayeredPane.add(CenterLeftMenu, "card2");

        Salir.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        Salir.setForeground(new java.awt.Color(255, 255, 255));
        Salir.setText("Salir");
        Salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SalirMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SalirMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SalirMouseEntered(evt);
            }
        });

        BackArrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/backArrow2.png"))); // NOI18N
        BackArrow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BackArrowMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BackArrowMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BackArrowMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout LeftMenuLayout = new javax.swing.GroupLayout(LeftMenu);
        LeftMenu.setLayout(LeftMenuLayout);
        LeftMenuLayout.setHorizontalGroup(
            LeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TopLeftMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
            .addGroup(LeftMenuLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(BackArrow, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(LeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(LeftMenuLayout.createSequentialGroup()
                    .addComponent(CenterLeftMenuLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 19, Short.MAX_VALUE)))
        );
        LeftMenuLayout.setVerticalGroup(
            LeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftMenuLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(TopLeftMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(LeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Salir, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BackArrow, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(39, 39, 39))
            .addGroup(LeftMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(LeftMenuLayout.createSequentialGroup()
                    .addGap(222, 222, 222)
                    .addComponent(CenterLeftMenuLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(136, Short.MAX_VALUE)))
        );

        ContentLayeredPane.setLayout(new java.awt.CardLayout());

        ReportesPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel18.setFont(new java.awt.Font("Roboto Medium", 0, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 51, 51));
        jLabel18.setText("Reportes");

        jLabel43.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(51, 51, 51));
        jLabel43.setText("Recaudaciones de médicos");

        jLabel68.setFont(new java.awt.Font("Roboto Light", 1, 16)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(51, 51, 51));
        jLabel68.setText("Entre");

        ReportesRecaudacionesDesde.setBackground(new java.awt.Color(255, 255, 255));
        ReportesRecaudacionesDesde.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        ReportesRecaudacionesDesde.setForeground(new java.awt.Color(51, 51, 51));
        ReportesRecaudacionesDesde.setBorder(null);

        jLabel70.setFont(new java.awt.Font("Roboto Light", 1, 16)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(51, 51, 51));
        jLabel70.setText("y");

        ReportesRecaudacionesHasta.setBackground(new java.awt.Color(255, 255, 255));
        ReportesRecaudacionesHasta.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        ReportesRecaudacionesHasta.setForeground(new java.awt.Color(51, 51, 51));
        ReportesRecaudacionesHasta.setBorder(null);

        ReportesRecaudacionesButton.setBackground(new java.awt.Color(204, 204, 204));
        ReportesRecaudacionesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ReportesRecaudacionesButtonMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ReportesRecaudacionesButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ReportesRecaudacionesButtonMouseEntered(evt);
            }
        });

        jLabel71.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(51, 51, 51));
        jLabel71.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel71.setText("Actualizar");

        javax.swing.GroupLayout ReportesRecaudacionesButtonLayout = new javax.swing.GroupLayout(ReportesRecaudacionesButton);
        ReportesRecaudacionesButton.setLayout(ReportesRecaudacionesButtonLayout);
        ReportesRecaudacionesButtonLayout.setHorizontalGroup(
            ReportesRecaudacionesButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReportesRecaudacionesButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel71, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        ReportesRecaudacionesButtonLayout.setVerticalGroup(
            ReportesRecaudacionesButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportesRecaudacionesButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel71, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        ReportesRecaudacionesScrollPane.setMaximumSize(new java.awt.Dimension(334, 380));
        ReportesRecaudacionesScrollPane.setMinimumSize(new java.awt.Dimension(334, 380));
        ReportesRecaudacionesScrollPane.setPreferredSize(new java.awt.Dimension(334, 380));

        ReportesRecaudacionesContenedor.setLayout(new javax.swing.BoxLayout(ReportesRecaudacionesContenedor, javax.swing.BoxLayout.Y_AXIS));
        ReportesRecaudacionesScrollPane.setViewportView(ReportesRecaudacionesContenedor);

        jLabel72.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jLabel72.setForeground(new java.awt.Color(51, 51, 51));
        jLabel72.setText("Historial de consultas de médico");

        ReportesConsultasScrollPane.setMaximumSize(new java.awt.Dimension(484, 380));
        ReportesConsultasScrollPane.setMinimumSize(new java.awt.Dimension(484, 380));
        ReportesConsultasScrollPane.setPreferredSize(new java.awt.Dimension(484, 380));

        ReportesConsultasContenedor.setLayout(new javax.swing.BoxLayout(ReportesConsultasContenedor, javax.swing.BoxLayout.Y_AXIS));
        ReportesConsultasScrollPane.setViewportView(ReportesConsultasContenedor);

        jLabel73.setFont(new java.awt.Font("Roboto Light", 1, 16)); // NOI18N
        jLabel73.setForeground(new java.awt.Color(51, 51, 51));
        jLabel73.setText("DNI");

        ReportesConsultasDNI.setBackground(new java.awt.Color(255, 255, 255));
        ReportesConsultasDNI.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        ReportesConsultasDNI.setForeground(new java.awt.Color(51, 51, 51));
        ReportesConsultasDNI.setBorder(null);

        ReportesConsultasDesde.setBackground(new java.awt.Color(255, 255, 255));
        ReportesConsultasDesde.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        ReportesConsultasDesde.setForeground(new java.awt.Color(51, 51, 51));
        ReportesConsultasDesde.setBorder(null);

        jLabel74.setFont(new java.awt.Font("Roboto Light", 1, 16)); // NOI18N
        jLabel74.setForeground(new java.awt.Color(51, 51, 51));
        jLabel74.setText("Entre");

        jLabel75.setFont(new java.awt.Font("Roboto Light", 1, 16)); // NOI18N
        jLabel75.setForeground(new java.awt.Color(51, 51, 51));
        jLabel75.setText("y");

        ReportesConsultasHasta.setBackground(new java.awt.Color(255, 255, 255));
        ReportesConsultasHasta.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        ReportesConsultasHasta.setForeground(new java.awt.Color(51, 51, 51));
        ReportesConsultasHasta.setBorder(null);

        ReportesConsultasButton.setBackground(new java.awt.Color(204, 204, 204));
        ReportesConsultasButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ReportesConsultasButtonMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ReportesConsultasButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ReportesConsultasButtonMouseEntered(evt);
            }
        });

        jLabel76.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel76.setForeground(new java.awt.Color(51, 51, 51));
        jLabel76.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel76.setText("Actualizar");

        javax.swing.GroupLayout ReportesConsultasButtonLayout = new javax.swing.GroupLayout(ReportesConsultasButton);
        ReportesConsultasButton.setLayout(ReportesConsultasButtonLayout);
        ReportesConsultasButtonLayout.setHorizontalGroup(
            ReportesConsultasButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportesConsultasButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel76, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        ReportesConsultasButtonLayout.setVerticalGroup(
            ReportesConsultasButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportesConsultasButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel76)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel77.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel77.setForeground(new java.awt.Color(51, 51, 51));
        jLabel77.setText("Total:");

        ReportesRecaudacionesTotal.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        ReportesRecaudacionesTotal.setForeground(new java.awt.Color(51, 51, 51));
        ReportesRecaudacionesTotal.setText("4444444444");

        jLabel78.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel78.setForeground(new java.awt.Color(51, 51, 51));
        jLabel78.setText("Total:");

        jLabel79.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel79.setForeground(new java.awt.Color(51, 51, 51));
        jLabel79.setText("$");

        jLabel80.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel80.setForeground(new java.awt.Color(51, 51, 51));
        jLabel80.setText("$");

        ReportesConsultasTotal.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        ReportesConsultasTotal.setForeground(new java.awt.Color(51, 51, 51));
        ReportesConsultasTotal.setText("4444444444");

        javax.swing.GroupLayout ReportesPanelLayout = new javax.swing.GroupLayout(ReportesPanel);
        ReportesPanel.setLayout(ReportesPanelLayout);
        ReportesPanelLayout.setHorizontalGroup(
            ReportesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ReportesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18)
                    .addComponent(jLabel43)
                    .addGroup(ReportesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel68)
                        .addGap(18, 18, 18)
                        .addGroup(ReportesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator21)
                            .addComponent(ReportesRecaudacionesDesde, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel70)
                        .addGap(18, 18, 18)
                        .addGroup(ReportesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator22)
                            .addComponent(ReportesRecaudacionesHasta, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)))
                    .addComponent(ReportesRecaudacionesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(ReportesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel77)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel79)
                        .addGap(18, 18, 18)
                        .addComponent(ReportesRecaudacionesTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(ReportesRecaudacionesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51)
                .addGroup(ReportesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ReportesConsultasButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(ReportesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel72)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel73)
                        .addGap(18, 18, 18)
                        .addGroup(ReportesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator23)
                            .addComponent(ReportesConsultasDNI)))
                    .addGroup(ReportesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel74)
                        .addGap(18, 18, 18)
                        .addGroup(ReportesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator24)
                            .addComponent(ReportesConsultasDesde, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel75)
                        .addGap(18, 18, 18)
                        .addGroup(ReportesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator25)
                            .addComponent(ReportesConsultasHasta, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)))
                    .addGroup(ReportesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel78)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel80)
                        .addGap(18, 18, 18)
                        .addComponent(ReportesConsultasTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(ReportesConsultasScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        ReportesPanelLayout.setVerticalGroup(
            ReportesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReportesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addGap(48, 48, 48)
                .addGroup(ReportesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(jLabel72)
                    .addComponent(jLabel73)
                    .addComponent(ReportesConsultasDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator23, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(ReportesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel68)
                    .addComponent(ReportesRecaudacionesDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel70)
                    .addComponent(ReportesRecaudacionesHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReportesConsultasDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel74)
                    .addComponent(jLabel75)
                    .addComponent(ReportesConsultasHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReportesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator22, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator24, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator25, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator21, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReportesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ReportesConsultasButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ReportesRecaudacionesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(ReportesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ReportesConsultasScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReportesRecaudacionesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ReportesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel77)
                    .addComponent(jLabel79)
                    .addComponent(ReportesRecaudacionesTotal)
                    .addComponent(jLabel78)
                    .addComponent(jLabel80)
                    .addComponent(ReportesConsultasTotal))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        ContentLayeredPane.add(ReportesPanel, "card8");

        EditarMedicoPanel.setBackground(new java.awt.Color(255, 255, 255));

        EditarMedicoTitle.setFont(new java.awt.Font("Roboto Medium", 0, 24)); // NOI18N
        EditarMedicoTitle.setForeground(new java.awt.Color(51, 51, 51));
        EditarMedicoTitle.setText("Agregar médico");

        EditarMedicoDNI.setBackground(new java.awt.Color(255, 255, 255));
        EditarMedicoDNI.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        EditarMedicoDNI.setForeground(new java.awt.Color(51, 51, 51));
        EditarMedicoDNI.setBorder(null);
        EditarMedicoDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EditarMedicoDNIKeyPressed(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(51, 51, 51));
        jLabel38.setText("DNI");

        jLabel39.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(51, 51, 51));
        jLabel39.setText("Nombre");

        jLabel40.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(51, 51, 51));
        jLabel40.setText("Apellido");

        jLabel41.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(51, 51, 51));
        jLabel41.setText("Obra social");

        jLabel42.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(51, 51, 51));
        jLabel42.setText("Honorarios");

        EditarMedicoRepetirPasswordLabel.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        EditarMedicoRepetirPasswordLabel.setForeground(new java.awt.Color(51, 51, 51));
        EditarMedicoRepetirPasswordLabel.setText("Repetir contraseña");

        jLabel44.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(51, 51, 51));
        jLabel44.setText("Contraseña");

        EditarMedicoNombre.setBackground(new java.awt.Color(255, 255, 255));
        EditarMedicoNombre.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        EditarMedicoNombre.setForeground(new java.awt.Color(51, 51, 51));
        EditarMedicoNombre.setBorder(null);

        EditarMedicoApellido.setBackground(new java.awt.Color(255, 255, 255));
        EditarMedicoApellido.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        EditarMedicoApellido.setForeground(new java.awt.Color(51, 51, 51));
        EditarMedicoApellido.setBorder(null);

        EditarMedicoHonorarios.setBackground(new java.awt.Color(255, 255, 255));
        EditarMedicoHonorarios.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        EditarMedicoHonorarios.setForeground(new java.awt.Color(51, 51, 51));
        EditarMedicoHonorarios.setBorder(null);
        EditarMedicoHonorarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EditarMedicoHonorariosKeyPressed(evt);
            }
        });

        EditarMedicoRepetirPassword.setBackground(new java.awt.Color(255, 255, 255));
        EditarMedicoRepetirPassword.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        EditarMedicoRepetirPassword.setForeground(new java.awt.Color(51, 51, 51));
        EditarMedicoRepetirPassword.setBorder(null);
        EditarMedicoRepetirPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EditarMedicoRepetirPasswordKeyPressed(evt);
            }
        });

        EditarMedicoPassword.setBackground(new java.awt.Color(255, 255, 255));
        EditarMedicoPassword.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        EditarMedicoPassword.setForeground(new java.awt.Color(51, 51, 51));
        EditarMedicoPassword.setBorder(null);
        EditarMedicoPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EditarMedicoPasswordKeyPressed(evt);
            }
        });

        EditarMedicoGuardarButton.setBackground(new java.awt.Color(0, 204, 153));
        EditarMedicoGuardarButton.setForeground(new java.awt.Color(51, 51, 51));
        EditarMedicoGuardarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                EditarMedicoGuardarButtonMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EditarMedicoGuardarButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EditarMedicoGuardarButtonMouseEntered(evt);
            }
        });

        jLabel45.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("Guardar");

        javax.swing.GroupLayout EditarMedicoGuardarButtonLayout = new javax.swing.GroupLayout(EditarMedicoGuardarButton);
        EditarMedicoGuardarButton.setLayout(EditarMedicoGuardarButtonLayout);
        EditarMedicoGuardarButtonLayout.setHorizontalGroup(
            EditarMedicoGuardarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditarMedicoGuardarButtonLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel45)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        EditarMedicoGuardarButtonLayout.setVerticalGroup(
            EditarMedicoGuardarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditarMedicoGuardarButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                .addContainerGap())
        );

        EditarMedicoBorrarButton.setBackground(new java.awt.Color(204, 204, 204));
        EditarMedicoBorrarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                EditarMedicoBorrarButtonMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EditarMedicoBorrarButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EditarMedicoBorrarButtonMouseEntered(evt);
            }
        });

        jLabel46.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(51, 51, 51));
        jLabel46.setText("Borrar");

        javax.swing.GroupLayout EditarMedicoBorrarButtonLayout = new javax.swing.GroupLayout(EditarMedicoBorrarButton);
        EditarMedicoBorrarButton.setLayout(EditarMedicoBorrarButtonLayout);
        EditarMedicoBorrarButtonLayout.setHorizontalGroup(
            EditarMedicoBorrarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditarMedicoBorrarButtonLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(jLabel46)
                .addGap(31, 31, 31))
        );
        EditarMedicoBorrarButtonLayout.setVerticalGroup(
            EditarMedicoBorrarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditarMedicoBorrarButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                .addContainerGap())
        );

        EditarMedicoConfirmacionPanel.setBackground(new java.awt.Color(0, 204, 153));
        EditarMedicoConfirmacionPanel.setForeground(new java.awt.Color(51, 51, 51));

        jLabel47.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("Guardado con éxito");

        javax.swing.GroupLayout EditarMedicoConfirmacionPanelLayout = new javax.swing.GroupLayout(EditarMedicoConfirmacionPanel);
        EditarMedicoConfirmacionPanel.setLayout(EditarMedicoConfirmacionPanelLayout);
        EditarMedicoConfirmacionPanelLayout.setHorizontalGroup(
            EditarMedicoConfirmacionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditarMedicoConfirmacionPanelLayout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(jLabel47)
                .addContainerGap(134, Short.MAX_VALUE))
        );
        EditarMedicoConfirmacionPanelLayout.setVerticalGroup(
            EditarMedicoConfirmacionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditarMedicoConfirmacionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        EditarMedicoConsultoriosMedicosTitle.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        EditarMedicoConsultoriosMedicosTitle.setForeground(new java.awt.Color(51, 51, 51));
        EditarMedicoConsultoriosMedicosTitle.setText("Administrar asignaciones a consultorios");
        EditarMedicoConsultoriosMedicosTitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                EditarMedicoConsultoriosMedicosTitleMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EditarMedicoConsultoriosMedicosTitleMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EditarMedicoConsultoriosMedicosTitleMouseEntered(evt);
            }
        });

        EditarMedicoCancelarButton.setBackground(new java.awt.Color(204, 204, 204));
        EditarMedicoCancelarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                EditarMedicoCancelarButtonMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EditarMedicoCancelarButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EditarMedicoCancelarButtonMouseEntered(evt);
            }
        });

        jLabel69.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(51, 51, 51));
        jLabel69.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel69.setText("Cancelar");

        javax.swing.GroupLayout EditarMedicoCancelarButtonLayout = new javax.swing.GroupLayout(EditarMedicoCancelarButton);
        EditarMedicoCancelarButton.setLayout(EditarMedicoCancelarButtonLayout);
        EditarMedicoCancelarButtonLayout.setHorizontalGroup(
            EditarMedicoCancelarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditarMedicoCancelarButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel69, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                .addContainerGap())
        );
        EditarMedicoCancelarButtonLayout.setVerticalGroup(
            EditarMedicoCancelarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditarMedicoCancelarButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel69, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                .addContainerGap())
        );

        EditarMedicoConsultoriosMedicosContenedor.setBackground(new java.awt.Color(255, 255, 255));

        EditarMedicoConsultoriosMedicosGuardarButton.setBackground(new java.awt.Color(0, 204, 153));
        EditarMedicoConsultoriosMedicosGuardarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                EditarMedicoConsultoriosMedicosGuardarButtonMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EditarMedicoConsultoriosMedicosGuardarButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EditarMedicoConsultoriosMedicosGuardarButtonMouseEntered(evt);
            }
        });

        jLabel67.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(255, 255, 255));
        jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel67.setText("Guardar");

        javax.swing.GroupLayout EditarMedicoConsultoriosMedicosGuardarButtonLayout = new javax.swing.GroupLayout(EditarMedicoConsultoriosMedicosGuardarButton);
        EditarMedicoConsultoriosMedicosGuardarButton.setLayout(EditarMedicoConsultoriosMedicosGuardarButtonLayout);
        EditarMedicoConsultoriosMedicosGuardarButtonLayout.setHorizontalGroup(
            EditarMedicoConsultoriosMedicosGuardarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditarMedicoConsultoriosMedicosGuardarButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel67, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                .addContainerGap())
        );
        EditarMedicoConsultoriosMedicosGuardarButtonLayout.setVerticalGroup(
            EditarMedicoConsultoriosMedicosGuardarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditarMedicoConsultoriosMedicosGuardarButtonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel67)
                .addContainerGap())
        );

        EditarMedicoConsultoriosMedicosBorrarButton.setBackground(new java.awt.Color(204, 204, 204));
        EditarMedicoConsultoriosMedicosBorrarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                EditarMedicoConsultoriosMedicosBorrarButtonMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EditarMedicoConsultoriosMedicosBorrarButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EditarMedicoConsultoriosMedicosBorrarButtonMouseEntered(evt);
            }
        });

        jLabel66.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(51, 51, 51));
        jLabel66.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel66.setText("Borrar");

        javax.swing.GroupLayout EditarMedicoConsultoriosMedicosBorrarButtonLayout = new javax.swing.GroupLayout(EditarMedicoConsultoriosMedicosBorrarButton);
        EditarMedicoConsultoriosMedicosBorrarButton.setLayout(EditarMedicoConsultoriosMedicosBorrarButtonLayout);
        EditarMedicoConsultoriosMedicosBorrarButtonLayout.setHorizontalGroup(
            EditarMedicoConsultoriosMedicosBorrarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditarMedicoConsultoriosMedicosBorrarButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel66, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                .addContainerGap())
        );
        EditarMedicoConsultoriosMedicosBorrarButtonLayout.setVerticalGroup(
            EditarMedicoConsultoriosMedicosBorrarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditarMedicoConsultoriosMedicosBorrarButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel66)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        EditarConsultoriosMedicosScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        EditarConsultoriosMedicosScrollPane.setMaximumSize(new java.awt.Dimension(852, 134));
        EditarConsultoriosMedicosScrollPane.setPreferredSize(new java.awt.Dimension(852, 134));

        EditarMedicoConsultoriosMedicosPanel.setBackground(new java.awt.Color(204, 204, 204));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMaximumSize(new java.awt.Dimension(135, 122));

        jLabel48.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(51, 51, 51));
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("Lunes");

        LunesConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        LunesConsultoriosMedicos.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        LunesConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        LunesConsultoriosMedicos.setBorder(null);
        LunesConsultoriosMedicos.setMaximumSize(new java.awt.Dimension(123, 17));

        jLabel54.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(51, 51, 51));
        jLabel54.setText("Entrada");

        LunesEntradaConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        LunesEntradaConsultoriosMedicos.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        LunesEntradaConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        LunesEntradaConsultoriosMedicos.setBorder(null);

        LunesSalidaConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        LunesSalidaConsultoriosMedicos.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        LunesSalidaConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        LunesSalidaConsultoriosMedicos.setBorder(null);

        jLabel60.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(51, 51, 51));
        jLabel60.setText("Salida");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LunesConsultoriosMedicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel48, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel54)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(LunesEntradaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel60)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LunesSalidaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel48)
                .addGap(18, 18, 18)
                .addComponent(LunesConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(LunesEntradaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LunesSalidaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel60))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setMaximumSize(new java.awt.Dimension(135, 122));

        jLabel49.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(51, 51, 51));
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("Martes");

        MartesConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        MartesConsultoriosMedicos.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        MartesConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        MartesConsultoriosMedicos.setBorder(null);
        MartesConsultoriosMedicos.setMaximumSize(new java.awt.Dimension(123, 17));

        jLabel55.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(51, 51, 51));
        jLabel55.setText("Entrada");

        MartesEntradaConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        MartesEntradaConsultoriosMedicos.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        MartesEntradaConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        MartesEntradaConsultoriosMedicos.setBorder(null);

        MartesSalidaConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        MartesSalidaConsultoriosMedicos.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        MartesSalidaConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        MartesSalidaConsultoriosMedicos.setBorder(null);

        jLabel61.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(51, 51, 51));
        jLabel61.setText("Salida");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MartesConsultoriosMedicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel55)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(MartesEntradaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel61)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MartesSalidaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel49)
                .addGap(18, 18, 18)
                .addComponent(MartesConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55)
                    .addComponent(MartesEntradaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MartesSalidaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel61))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setMaximumSize(new java.awt.Dimension(135, 122));

        jLabel50.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(51, 51, 51));
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("Miércoles");

        MiercolesConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        MiercolesConsultoriosMedicos.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        MiercolesConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        MiercolesConsultoriosMedicos.setBorder(null);
        MiercolesConsultoriosMedicos.setMaximumSize(new java.awt.Dimension(123, 17));

        jLabel56.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(51, 51, 51));
        jLabel56.setText("Entrada");

        MiercolesEntradaConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        MiercolesEntradaConsultoriosMedicos.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        MiercolesEntradaConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        MiercolesEntradaConsultoriosMedicos.setBorder(null);

        MiercolesSalidaConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        MiercolesSalidaConsultoriosMedicos.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        MiercolesSalidaConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        MiercolesSalidaConsultoriosMedicos.setBorder(null);

        jLabel62.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(51, 51, 51));
        jLabel62.setText("Salida");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel56)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(MiercolesEntradaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel62)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MiercolesSalidaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(MiercolesConsultoriosMedicos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel50)
                .addGap(18, 18, 18)
                .addComponent(MiercolesConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(MiercolesEntradaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MiercolesSalidaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel62))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setMaximumSize(new java.awt.Dimension(135, 122));

        jLabel51.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(51, 51, 51));
        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel51.setText("Jueves");

        JuevesConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        JuevesConsultoriosMedicos.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        JuevesConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        JuevesConsultoriosMedicos.setBorder(null);
        JuevesConsultoriosMedicos.setMaximumSize(new java.awt.Dimension(123, 17));

        jLabel57.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(51, 51, 51));
        jLabel57.setText("Entrada");

        JuevesEntradaConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        JuevesEntradaConsultoriosMedicos.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        JuevesEntradaConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        JuevesEntradaConsultoriosMedicos.setBorder(null);

        JuevesSalidaConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        JuevesSalidaConsultoriosMedicos.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        JuevesSalidaConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        JuevesSalidaConsultoriosMedicos.setBorder(null);

        jLabel63.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(51, 51, 51));
        jLabel63.setText("Salida");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JuevesConsultoriosMedicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel57)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(JuevesEntradaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel63)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JuevesSalidaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel51)
                .addGap(18, 18, 18)
                .addComponent(JuevesConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel57)
                    .addComponent(JuevesEntradaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JuevesSalidaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel63))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setMaximumSize(new java.awt.Dimension(135, 122));

        jLabel53.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(51, 51, 51));
        jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel53.setText("Sábado");

        SabadoConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        SabadoConsultoriosMedicos.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        SabadoConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        SabadoConsultoriosMedicos.setBorder(null);
        SabadoConsultoriosMedicos.setMaximumSize(new java.awt.Dimension(123, 17));

        jLabel59.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(51, 51, 51));
        jLabel59.setText("Entrada");

        SabadoEntradaConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        SabadoEntradaConsultoriosMedicos.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        SabadoEntradaConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        SabadoEntradaConsultoriosMedicos.setBorder(null);

        SabadoSalidaConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        SabadoSalidaConsultoriosMedicos.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        SabadoSalidaConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        SabadoSalidaConsultoriosMedicos.setBorder(null);

        jLabel65.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(51, 51, 51));
        jLabel65.setText("Salida");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SabadoConsultoriosMedicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel59)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(SabadoEntradaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel65)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SabadoSalidaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel53)
                .addGap(18, 18, 18)
                .addComponent(SabadoConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59)
                    .addComponent(SabadoEntradaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SabadoSalidaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel65))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setMaximumSize(new java.awt.Dimension(135, 122));

        jLabel52.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(51, 51, 51));
        jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel52.setText("Viernes");

        ViernesConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        ViernesConsultoriosMedicos.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        ViernesConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        ViernesConsultoriosMedicos.setBorder(null);
        ViernesConsultoriosMedicos.setMaximumSize(new java.awt.Dimension(123, 17));

        jLabel58.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(51, 51, 51));
        jLabel58.setText("Entrada");

        ViernesEntradaConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        ViernesEntradaConsultoriosMedicos.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        ViernesEntradaConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        ViernesEntradaConsultoriosMedicos.setBorder(null);

        ViernesSalidaConsultoriosMedicos.setBackground(new java.awt.Color(204, 204, 204));
        ViernesSalidaConsultoriosMedicos.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        ViernesSalidaConsultoriosMedicos.setForeground(new java.awt.Color(51, 51, 51));
        ViernesSalidaConsultoriosMedicos.setBorder(null);

        jLabel64.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(51, 51, 51));
        jLabel64.setText("Salida");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ViernesConsultoriosMedicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel58)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(ViernesEntradaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel64)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ViernesSalidaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel52)
                .addGap(18, 18, 18)
                .addComponent(ViernesConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel58)
                    .addComponent(ViernesEntradaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ViernesSalidaConsultoriosMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel64))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout EditarMedicoConsultoriosMedicosPanelLayout = new javax.swing.GroupLayout(EditarMedicoConsultoriosMedicosPanel);
        EditarMedicoConsultoriosMedicosPanel.setLayout(EditarMedicoConsultoriosMedicosPanelLayout);
        EditarMedicoConsultoriosMedicosPanelLayout.setHorizontalGroup(
            EditarMedicoConsultoriosMedicosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditarMedicoConsultoriosMedicosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        EditarMedicoConsultoriosMedicosPanelLayout.setVerticalGroup(
            EditarMedicoConsultoriosMedicosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditarMedicoConsultoriosMedicosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EditarMedicoConsultoriosMedicosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        EditarConsultoriosMedicosScrollPane.setViewportView(EditarMedicoConsultoriosMedicosPanel);

        javax.swing.GroupLayout EditarMedicoConsultoriosMedicosContenedorLayout = new javax.swing.GroupLayout(EditarMedicoConsultoriosMedicosContenedor);
        EditarMedicoConsultoriosMedicosContenedor.setLayout(EditarMedicoConsultoriosMedicosContenedorLayout);
        EditarMedicoConsultoriosMedicosContenedorLayout.setHorizontalGroup(
            EditarMedicoConsultoriosMedicosContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditarMedicoConsultoriosMedicosContenedorLayout.createSequentialGroup()
                .addGroup(EditarMedicoConsultoriosMedicosContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditarMedicoConsultoriosMedicosContenedorLayout.createSequentialGroup()
                        .addComponent(EditarMedicoConsultoriosMedicosBorrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EditarMedicoConsultoriosMedicosGuardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(EditarConsultoriosMedicosScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        EditarMedicoConsultoriosMedicosContenedorLayout.setVerticalGroup(
            EditarMedicoConsultoriosMedicosContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditarMedicoConsultoriosMedicosContenedorLayout.createSequentialGroup()
                .addComponent(EditarConsultoriosMedicosScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EditarMedicoConsultoriosMedicosContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditarMedicoConsultoriosMedicosContenedorLayout.createSequentialGroup()
                        .addComponent(EditarMedicoConsultoriosMedicosGuardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditarMedicoConsultoriosMedicosContenedorLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(EditarMedicoConsultoriosMedicosBorrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        EditarMedicoDesactivarButton.setBackground(new java.awt.Color(255, 51, 51));
        EditarMedicoDesactivarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                EditarMedicoDesactivarButtonMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EditarMedicoDesactivarButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EditarMedicoDesactivarButtonMouseEntered(evt);
            }
        });

        EditarMedicoDesactivarText.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        EditarMedicoDesactivarText.setForeground(new java.awt.Color(255, 255, 255));
        EditarMedicoDesactivarText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EditarMedicoDesactivarText.setText("Dar de baja");

        javax.swing.GroupLayout EditarMedicoDesactivarButtonLayout = new javax.swing.GroupLayout(EditarMedicoDesactivarButton);
        EditarMedicoDesactivarButton.setLayout(EditarMedicoDesactivarButtonLayout);
        EditarMedicoDesactivarButtonLayout.setHorizontalGroup(
            EditarMedicoDesactivarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditarMedicoDesactivarButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EditarMedicoDesactivarText, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                .addContainerGap())
        );
        EditarMedicoDesactivarButtonLayout.setVerticalGroup(
            EditarMedicoDesactivarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditarMedicoDesactivarButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EditarMedicoDesactivarText, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                .addContainerGap())
        );

        EditarMedicoID.setFont(new java.awt.Font("Roboto Light", 1, 16)); // NOI18N
        EditarMedicoID.setForeground(new java.awt.Color(51, 51, 51));
        EditarMedicoID.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        EditarMedicoID.setText("44444444");

        EditarMedicoObraSocial.setBackground(new java.awt.Color(255, 255, 255));
        EditarMedicoObraSocial.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        EditarMedicoObraSocial.setForeground(new java.awt.Color(51, 51, 51));
        EditarMedicoObraSocial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguna", "Hospital Italiano", "Galeno", "OSDEPYM", "Swiss Medical", "OSCHOCA", "Obra Social de Personal Doméstico", "Jerárquicos Salud", "Unión Personal", "Carniceria Dock Sud", "FEMEBA" }));
        EditarMedicoObraSocial.setBorder(null);

        javax.swing.GroupLayout EditarMedicoPanelLayout = new javax.swing.GroupLayout(EditarMedicoPanel);
        EditarMedicoPanel.setLayout(EditarMedicoPanelLayout);
        EditarMedicoPanelLayout.setHorizontalGroup(
            EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditarMedicoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EditarMedicoConsultoriosMedicosTitle)
                    .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditarMedicoPanelLayout.createSequentialGroup()
                            .addComponent(EditarMedicoTitle)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EditarMedicoID, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(EditarMedicoPanelLayout.createSequentialGroup()
                            .addComponent(EditarMedicoCancelarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EditarMedicoDesactivarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(EditarMedicoConsultoriosMedicosContenedor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditarMedicoPanelLayout.createSequentialGroup()
                            .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel39)
                                .addComponent(jLabel40)
                                .addComponent(jLabel41)
                                .addComponent(jLabel42)
                                .addComponent(jLabel38))
                            .addGap(18, 18, 18)
                            .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(EditarMedicoDNI)
                                .addComponent(jSeparator18)
                                .addComponent(EditarMedicoHonorarios)
                                .addComponent(jSeparator17)
                                .addComponent(EditarMedicoApellido)
                                .addComponent(jSeparator16)
                                .addComponent(EditarMedicoNombre)
                                .addComponent(jSeparator15)
                                .addComponent(jSeparator14)
                                .addComponent(EditarMedicoObraSocial, 0, 240, Short.MAX_VALUE))
                            .addGap(71, 71, 71)
                            .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(EditarMedicoPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel44)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(EditarMedicoPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(EditarMedicoPanelLayout.createSequentialGroup()
                                    .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(EditarMedicoBorrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(EditarMedicoRepetirPasswordLabel))
                                    .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(EditarMedicoPanelLayout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jSeparator20)
                                                .addComponent(jSeparator19)
                                                .addComponent(EditarMedicoRepetirPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)))
                                        .addGroup(EditarMedicoPanelLayout.createSequentialGroup()
                                            .addGap(96, 96, 96)
                                            .addComponent(EditarMedicoGuardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addComponent(EditarMedicoConfirmacionPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(60, 60, 60))
        );
        EditarMedicoPanelLayout.setVerticalGroup(
            EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditarMedicoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditarMedicoTitle)
                    .addComponent(EditarMedicoID))
                .addGap(43, 43, 43)
                .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(EditarMedicoDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44)
                    .addComponent(EditarMedicoPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditarMedicoPanelLayout.createSequentialGroup()
                        .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EditarMedicoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel39)
                            .addComponent(EditarMedicoRepetirPasswordLabel)
                            .addComponent(EditarMedicoRepetirPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator19, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator15, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator20, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditarMedicoPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EditarMedicoDesactivarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(EditarMedicoPanelLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EditarMedicoApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel40))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(EditarMedicoPanelLayout.createSequentialGroup()
                                .addComponent(jSeparator16, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel41)
                                    .addComponent(EditarMedicoObraSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(EditarMedicoPanelLayout.createSequentialGroup()
                                        .addGroup(EditarMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(EditarMedicoHonorarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel42))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSeparator18, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(EditarMedicoGuardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(EditarMedicoBorrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46)
                                .addComponent(EditarMedicoConsultoriosMedicosTitle))
                            .addComponent(EditarMedicoConfirmacionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EditarMedicoConsultoriosMedicosContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(EditarMedicoCancelarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
        );

        ContentLayeredPane.add(EditarMedicoPanel, "card7");

        AdministrarMedicosPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel34.setFont(new java.awt.Font("Roboto Medium", 0, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(51, 51, 51));
        jLabel34.setText("Médicos");

        AdministrarMedicosContenedor.setLayout(new javax.swing.BoxLayout(AdministrarMedicosContenedor, javax.swing.BoxLayout.Y_AXIS));
        AdministrarMedicosScrollPane.setViewportView(AdministrarMedicosContenedor);

        AdministrarMedicosSearchTextfield.setBackground(new java.awt.Color(255, 255, 255));
        AdministrarMedicosSearchTextfield.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        AdministrarMedicosSearchTextfield.setForeground(new java.awt.Color(51, 51, 51));
        AdministrarMedicosSearchTextfield.setBorder(null);
        AdministrarMedicosSearchTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdministrarMedicosSearchTextfieldActionPerformed(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(51, 51, 51));
        jLabel35.setText("Apellido");

        AdministrarMedicosSearchButton.setBackground(new java.awt.Color(204, 204, 204));
        AdministrarMedicosSearchButton.setPreferredSize(new java.awt.Dimension(82, 34));
        AdministrarMedicosSearchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AdministrarMedicosSearchButtonMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AdministrarMedicosSearchButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AdministrarMedicosSearchButtonMouseEntered(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(51, 51, 51));
        jLabel36.setText("Buscar");

        javax.swing.GroupLayout AdministrarMedicosSearchButtonLayout = new javax.swing.GroupLayout(AdministrarMedicosSearchButton);
        AdministrarMedicosSearchButton.setLayout(AdministrarMedicosSearchButtonLayout);
        AdministrarMedicosSearchButtonLayout.setHorizontalGroup(
            AdministrarMedicosSearchButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdministrarMedicosSearchButtonLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel36)
                .addGap(18, 18, 18))
        );
        AdministrarMedicosSearchButtonLayout.setVerticalGroup(
            AdministrarMedicosSearchButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdministrarMedicosSearchButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        AdministrarMedicosActivoComboBox.setBackground(new java.awt.Color(255, 255, 255));
        AdministrarMedicosActivoComboBox.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        AdministrarMedicosActivoComboBox.setForeground(new java.awt.Color(51, 51, 51));
        AdministrarMedicosActivoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activos", "Inactivos" }));
        AdministrarMedicosActivoComboBox.setBorder(null);
        AdministrarMedicosActivoComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AdministrarMedicosActivoComboBoxMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AdministrarMedicosActivoComboBoxMouseEntered(evt);
            }
        });
        AdministrarMedicosActivoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdministrarMedicosActivoComboBoxActionPerformed(evt);
            }
        });

        AdministrarMedicoAgregarButton.setBackground(new java.awt.Color(0, 204, 153));
        AdministrarMedicoAgregarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AdministrarMedicoAgregarButtonMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AdministrarMedicoAgregarButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AdministrarMedicoAgregarButtonMouseEntered(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Agregar médico");

        javax.swing.GroupLayout AdministrarMedicoAgregarButtonLayout = new javax.swing.GroupLayout(AdministrarMedicoAgregarButton);
        AdministrarMedicoAgregarButton.setLayout(AdministrarMedicoAgregarButtonLayout);
        AdministrarMedicoAgregarButtonLayout.setHorizontalGroup(
            AdministrarMedicoAgregarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdministrarMedicoAgregarButtonLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel37)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        AdministrarMedicoAgregarButtonLayout.setVerticalGroup(
            AdministrarMedicoAgregarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdministrarMedicoAgregarButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout AdministrarMedicosPanelLayout = new javax.swing.GroupLayout(AdministrarMedicosPanel);
        AdministrarMedicosPanel.setLayout(AdministrarMedicosPanelLayout);
        AdministrarMedicosPanelLayout.setHorizontalGroup(
            AdministrarMedicosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdministrarMedicosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AdministrarMedicosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AdministrarMedicosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(AdministrarMedicosScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 890, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(AdministrarMedicosPanelLayout.createSequentialGroup()
                            .addGroup(AdministrarMedicosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(AdministrarMedicosPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel35)
                                    .addGap(22, 22, 22)
                                    .addGroup(AdministrarMedicosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jSeparator12)
                                        .addComponent(AdministrarMedicosSearchTextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                                    .addGap(38, 38, 38)
                                    .addComponent(AdministrarMedicosSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel34))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(AdministrarMedicosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jSeparator13)
                                .addComponent(AdministrarMedicosActivoComboBox, 0, 160, Short.MAX_VALUE))))
                    .addComponent(AdministrarMedicoAgregarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        AdministrarMedicosPanelLayout.setVerticalGroup(
            AdministrarMedicosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdministrarMedicosPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel34)
                .addGroup(AdministrarMedicosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdministrarMedicosPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(AdministrarMedicosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AdministrarMedicosPanelLayout.createSequentialGroup()
                                .addGroup(AdministrarMedicosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AdministrarMedicosSearchTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel35))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(AdministrarMedicosSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdministrarMedicosPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AdministrarMedicosActivoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)))
                .addComponent(AdministrarMedicosScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AdministrarMedicoAgregarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        ContentLayeredPane.add(AdministrarMedicosPanel, "card6");

        ProximosTurnosMedicoPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel28.setFont(new java.awt.Font("Roboto Medium", 0, 24)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(51, 51, 51));
        jLabel28.setText("Próximos turnos");

        ProximosTurnosMedicoScrollPane.setMaximumSize(new java.awt.Dimension(890, 450));
        ProximosTurnosMedicoScrollPane.setMinimumSize(new java.awt.Dimension(890, 450));
        ProximosTurnosMedicoScrollPane.setPreferredSize(new java.awt.Dimension(890, 450));

        ProximosTurnosMedicoContenedor.setLayout(new javax.swing.BoxLayout(ProximosTurnosMedicoContenedor, javax.swing.BoxLayout.Y_AXIS));
        ProximosTurnosMedicoScrollPane.setViewportView(ProximosTurnosMedicoContenedor);

        ProximosTurnosMedicoFechaComboBox.setBackground(new java.awt.Color(255, 255, 255));
        ProximosTurnosMedicoFechaComboBox.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        ProximosTurnosMedicoFechaComboBox.setForeground(new java.awt.Color(51, 51, 51));
        ProximosTurnosMedicoFechaComboBox.setMaximumRowCount(32);
        ProximosTurnosMedicoFechaComboBox.setBorder(null);
        ProximosTurnosMedicoFechaComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ProximosTurnosMedicoFechaComboBoxMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ProximosTurnosMedicoFechaComboBoxMouseEntered(evt);
            }
        });
        ProximosTurnosMedicoFechaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProximosTurnosMedicoFechaComboBoxActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(51, 51, 51));
        jLabel31.setText("Fecha");

        javax.swing.GroupLayout ProximosTurnosMedicoPanelLayout = new javax.swing.GroupLayout(ProximosTurnosMedicoPanel);
        ProximosTurnosMedicoPanel.setLayout(ProximosTurnosMedicoPanelLayout);
        ProximosTurnosMedicoPanelLayout.setHorizontalGroup(
            ProximosTurnosMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProximosTurnosMedicoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ProximosTurnosMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28)
                    .addComponent(ProximosTurnosMedicoScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 890, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addGroup(ProximosTurnosMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator11, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ProximosTurnosMedicoFechaComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 250, Short.MAX_VALUE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        ProximosTurnosMedicoPanelLayout.setVerticalGroup(
            ProximosTurnosMedicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProximosTurnosMedicoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jLabel31)
                .addGap(18, 18, 18)
                .addComponent(ProximosTurnosMedicoFechaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProximosTurnosMedicoScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );

        ContentLayeredPane.add(ProximosTurnosMedicoPanel, "card5");

        HistorialTurnosPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel27.setFont(new java.awt.Font("Roboto Medium", 0, 24)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(51, 51, 51));
        jLabel27.setText("Historial de turnos");

        HistorialTurnosScrollPane.setMaximumSize(new java.awt.Dimension(890, 380));
        HistorialTurnosScrollPane.setMinimumSize(new java.awt.Dimension(890, 380));
        HistorialTurnosScrollPane.setPreferredSize(new java.awt.Dimension(890, 380));

        HistorialTurnosContenedor.setPreferredSize(new java.awt.Dimension(866, 380));
        HistorialTurnosContenedor.setLayout(new javax.swing.BoxLayout(HistorialTurnosContenedor, javax.swing.BoxLayout.Y_AXIS));
        HistorialTurnosScrollPane.setViewportView(HistorialTurnosContenedor);

        javax.swing.GroupLayout HistorialTurnosPanelLayout = new javax.swing.GroupLayout(HistorialTurnosPanel);
        HistorialTurnosPanel.setLayout(HistorialTurnosPanelLayout);
        HistorialTurnosPanelLayout.setHorizontalGroup(
            HistorialTurnosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistorialTurnosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HistorialTurnosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(HistorialTurnosScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 890, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        HistorialTurnosPanelLayout.setVerticalGroup(
            HistorialTurnosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistorialTurnosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addGap(64, 64, 64)
                .addComponent(HistorialTurnosScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        ContentLayeredPane.add(HistorialTurnosPanel, "card4");

        ProximosTurnosPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel23.setBackground(new java.awt.Color(255, 255, 255));
        jLabel23.setFont(new java.awt.Font("Roboto Medium", 0, 24)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(51, 51, 51));
        jLabel23.setText("Próximos turnos");

        ProximosTurnosScrollPane.setMaximumSize(new java.awt.Dimension(890, 380));
        ProximosTurnosScrollPane.setMinimumSize(new java.awt.Dimension(890, 380));
        ProximosTurnosScrollPane.setPreferredSize(new java.awt.Dimension(890, 380));

        ProximosTurnosContenedor.setPreferredSize(new java.awt.Dimension(868, 380));
        ProximosTurnosContenedor.setLayout(new javax.swing.BoxLayout(ProximosTurnosContenedor, javax.swing.BoxLayout.Y_AXIS));
        ProximosTurnosScrollPane.setViewportView(ProximosTurnosContenedor);

        ProximoTurnoAEliminar.setBackground(new java.awt.Color(255, 255, 255));
        ProximoTurnoAEliminar.setMinimumSize(new java.awt.Dimension(890, 72));
        ProximoTurnoAEliminar.setPreferredSize(new java.awt.Dimension(890, 72));
        ProximoTurnoAEliminar.setLayout(new java.awt.BorderLayout());

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(51, 51, 51));
        jLabel24.setText("¿Desea cancelar el turno?");
        jLabel24.setVisible(false);

        ProximosTurnosMantenerButton.setBackground(new java.awt.Color(187, 187, 187));
        ProximosTurnosMantenerButton.setVisible(false);
        ProximosTurnosMantenerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ProximosTurnosMantenerButtonMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ProximosTurnosMantenerButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ProximosTurnosMantenerButtonMouseEntered(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(51, 51, 51));
        jLabel25.setText("Mantener");

        javax.swing.GroupLayout ProximosTurnosMantenerButtonLayout = new javax.swing.GroupLayout(ProximosTurnosMantenerButton);
        ProximosTurnosMantenerButton.setLayout(ProximosTurnosMantenerButtonLayout);
        ProximosTurnosMantenerButtonLayout.setHorizontalGroup(
            ProximosTurnosMantenerButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProximosTurnosMantenerButtonLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel25)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        ProximosTurnosMantenerButtonLayout.setVerticalGroup(
            ProximosTurnosMantenerButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProximosTurnosMantenerButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ProximosTurnosCancelarButton.setBackground(new java.awt.Color(255, 51, 51));
        ProximosTurnosCancelarButton.setPreferredSize(new java.awt.Dimension(103, 31));
        ProximosTurnosCancelarButton.setVisible(false);
        ProximosTurnosCancelarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ProximosTurnosCancelarButtonMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ProximosTurnosCancelarButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ProximosTurnosCancelarButtonMouseEntered(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Cancelar");

        javax.swing.GroupLayout ProximosTurnosCancelarButtonLayout = new javax.swing.GroupLayout(ProximosTurnosCancelarButton);
        ProximosTurnosCancelarButton.setLayout(ProximosTurnosCancelarButtonLayout);
        ProximosTurnosCancelarButtonLayout.setHorizontalGroup(
            ProximosTurnosCancelarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProximosTurnosCancelarButtonLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel26)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        ProximosTurnosCancelarButtonLayout.setVerticalGroup(
            ProximosTurnosCancelarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProximosTurnosCancelarButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel26)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ProximosTurnosPanelLayout = new javax.swing.GroupLayout(ProximosTurnosPanel);
        ProximosTurnosPanel.setLayout(ProximosTurnosPanelLayout);
        ProximosTurnosPanelLayout.setHorizontalGroup(
            ProximosTurnosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProximosTurnosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ProximosTurnosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ProximosTurnosPanelLayout.createSequentialGroup()
                        .addComponent(ProximosTurnosMantenerButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ProximosTurnosCancelarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(ProximoTurnoAEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProximosTurnosScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        ProximosTurnosPanelLayout.setVerticalGroup(
            ProximosTurnosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProximosTurnosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addGap(46, 46, 46)
                .addComponent(ProximosTurnosScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jLabel24)
                .addGap(18, 18, 18)
                .addComponent(ProximoTurnoAEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ProximosTurnosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ProximosTurnosCancelarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProximosTurnosMantenerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17))
        );

        ContentLayeredPane.add(ProximosTurnosPanel, "card3");

        ReservarTurnoPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setFont(new java.awt.Font("Roboto Medium", 0, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 51, 51));
        jLabel16.setText("Reservar un turno");

        jLabel17.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("Seleccione un médico:");

        SearchMedicoReservarTurno.setBackground(new java.awt.Color(255, 255, 255));
        SearchMedicoReservarTurno.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        SearchMedicoReservarTurno.setBorder(null);
        SearchMedicoReservarTurno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SearchMedicoReservarTurnoKeyPressed(evt);
            }
        });

        SearchMedicoButtonReservarTurno.setBackground(new java.awt.Color(204, 204, 204));
        SearchMedicoButtonReservarTurno.setForeground(new java.awt.Color(51, 51, 51));
        SearchMedicoButtonReservarTurno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SearchMedicoButtonReservarTurnoMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SearchMedicoButtonReservarTurnoMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SearchMedicoButtonReservarTurnoMouseEntered(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 51, 51));
        jLabel19.setText("Buscar");

        javax.swing.GroupLayout SearchMedicoButtonReservarTurnoLayout = new javax.swing.GroupLayout(SearchMedicoButtonReservarTurno);
        SearchMedicoButtonReservarTurno.setLayout(SearchMedicoButtonReservarTurnoLayout);
        SearchMedicoButtonReservarTurnoLayout.setHorizontalGroup(
            SearchMedicoButtonReservarTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchMedicoButtonReservarTurnoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel19)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        SearchMedicoButtonReservarTurnoLayout.setVerticalGroup(
            SearchMedicoButtonReservarTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchMedicoButtonReservarTurnoLayout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addContainerGap())
        );

        jLabel20.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 51, 51));
        jLabel20.setText("Turnos disponibles");

        TurnosDisponiblesReservarTurno.setBackground(new java.awt.Color(255, 255, 255));
        TurnosDisponiblesReservarTurno.setPreferredSize(new Dimension(868, 300));

        TurnosDisponiblesContenedorReservarTurno.setLayout(new javax.swing.BoxLayout(TurnosDisponiblesContenedorReservarTurno, javax.swing.BoxLayout.Y_AXIS));
        TurnosDisponiblesReservarTurno.setViewportView(TurnosDisponiblesContenedorReservarTurno);

        TurnoSeleccionadoReservarTurno.setMinimumSize(new java.awt.Dimension(866, 72));
        TurnoSeleccionadoReservarTurno.setLayout(new java.awt.BorderLayout());

        ConsultorioComboBoxReservarTurno.setBackground(new java.awt.Color(255, 255, 255));
        ConsultorioComboBoxReservarTurno.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        ConsultorioComboBoxReservarTurno.setForeground(new java.awt.Color(51, 51, 51));
        ConsultorioComboBoxReservarTurno.setBorder(null);
        ConsultorioComboBoxReservarTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultorioComboBoxReservarTurnoActionPerformed(evt);
            }
        });

        BorrarButtonReservarTurno.setBackground(new java.awt.Color(204, 204, 204));
        BorrarButtonReservarTurno.setVisible(false);
        BorrarButtonReservarTurno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BorrarButtonReservarTurnoMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BorrarButtonReservarTurnoMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BorrarButtonReservarTurnoMouseEntered(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 51, 51));
        jLabel21.setText("Borrar");

        javax.swing.GroupLayout BorrarButtonReservarTurnoLayout = new javax.swing.GroupLayout(BorrarButtonReservarTurno);
        BorrarButtonReservarTurno.setLayout(BorrarButtonReservarTurnoLayout);
        BorrarButtonReservarTurnoLayout.setHorizontalGroup(
            BorrarButtonReservarTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BorrarButtonReservarTurnoLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel21)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        BorrarButtonReservarTurnoLayout.setVerticalGroup(
            BorrarButtonReservarTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BorrarButtonReservarTurnoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addContainerGap())
        );

        MedicoComboBoxReservarTurno.setBackground(new java.awt.Color(255, 255, 255));
        MedicoComboBoxReservarTurno.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        MedicoComboBoxReservarTurno.setForeground(new java.awt.Color(51, 51, 51));
        MedicoComboBoxReservarTurno.setMaximumRowCount(30);
        MedicoComboBoxReservarTurno.setBorder(null);
        populateMedicoComboBox();
        MedicoComboBoxReservarTurno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MedicoComboBoxReservarTurnoMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MedicoComboBoxReservarTurnoMouseEntered(evt);
            }
        });
        MedicoComboBoxReservarTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MedicoComboBoxReservarTurnoActionPerformed(evt);
            }
        });

        ReservarButtonReservarTurno.setBackground(new java.awt.Color(0, 204, 153));
        ReservarButtonReservarTurno.setVisible(false);
        ReservarButtonReservarTurno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ReservarButtonReservarTurnoMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ReservarButtonReservarTurnoMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ReservarButtonReservarTurnoMouseEntered(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Confirmar");

        javax.swing.GroupLayout ReservarButtonReservarTurnoLayout = new javax.swing.GroupLayout(ReservarButtonReservarTurno);
        ReservarButtonReservarTurno.setLayout(ReservarButtonReservarTurnoLayout);
        ReservarButtonReservarTurnoLayout.setHorizontalGroup(
            ReservarButtonReservarTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReservarButtonReservarTurnoLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel22)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        ReservarButtonReservarTurnoLayout.setVerticalGroup(
            ReservarButtonReservarTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReservarButtonReservarTurnoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ReservarTurnoPanelLayout = new javax.swing.GroupLayout(ReservarTurnoPanel);
        ReservarTurnoPanel.setLayout(ReservarTurnoPanelLayout);
        ReservarTurnoPanelLayout.setHorizontalGroup(
            ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReservarTurnoPanelLayout.createSequentialGroup()
                .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ReservarTurnoPanelLayout.createSequentialGroup()
                        .addComponent(BorrarButtonReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ReservarButtonReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(TurnoSeleccionadoReservarTurno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TurnosDisponiblesReservarTurno)
                    .addGroup(ReservarTurnoPanelLayout.createSequentialGroup()
                        .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addGroup(ReservarTurnoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(49, 49, 49)
                                .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSeparator8, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                                    .addComponent(MedicoComboBoxReservarTurno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SearchMedicoReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(SearchMedicoButtonReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ReservarTurnoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ConsultorioComboBoxReservarTurno, javax.swing.GroupLayout.Alignment.TRAILING, 0, 200, Short.MAX_VALUE))))
                .addGap(58, 58, 58))
        );
        ReservarTurnoPanelLayout.setVerticalGroup(
            ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReservarTurnoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReservarTurnoPanelLayout.createSequentialGroup()
                        .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(SearchMedicoReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ReservarTurnoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel17))
                            .addComponent(MedicoComboBoxReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ReservarTurnoPanelLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(SearchMedicoButtonReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(ConsultorioComboBoxReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TurnosDisponiblesReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TurnoSeleccionadoReservarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addGroup(ReservarTurnoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BorrarButtonReservarTurno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ReservarButtonReservarTurno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );

        ContentLayeredPane.add(ReservarTurnoPanel, "card2");

        javax.swing.GroupLayout DashboardPanelLayout = new javax.swing.GroupLayout(DashboardPanel);
        DashboardPanel.setLayout(DashboardPanelLayout);
        DashboardPanelLayout.setHorizontalGroup(
            DashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardPanelLayout.createSequentialGroup()
                .addComponent(LeftMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(ContentLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 926, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        DashboardPanelLayout.setVerticalGroup(
            DashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LeftMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DashboardPanelLayout.createSequentialGroup()
                .addGap(0, 49, Short.MAX_VALUE)
                .addComponent(ContentLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        MainLayeredPane.add(DashboardPanel, "card3");

        LoginPanel.setBackground(new java.awt.Color(255, 255, 255));
        LoginPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        LeftLoginPanel.setBackground(new java.awt.Color(0, 204, 153));
        LeftLoginPanel.setPreferredSize(new java.awt.Dimension(640, 720));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Sin título-1.png"))); // NOI18N

        javax.swing.GroupLayout LeftLoginPanelLayout = new javax.swing.GroupLayout(LeftLoginPanel);
        LeftLoginPanel.setLayout(LeftLoginPanelLayout);
        LeftLoginPanelLayout.setHorizontalGroup(
            LeftLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftLoginPanelLayout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(834, 834, 834))
        );
        LeftLoginPanelLayout.setVerticalGroup(
            LeftLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        LoginRegisterLayeredPanel.setPreferredSize(new java.awt.Dimension(640, 720));
        LoginRegisterLayeredPanel.setLayout(new java.awt.CardLayout());

        RightRegisterPanel.setBackground(new java.awt.Color(255, 255, 255));
        RightRegisterPanel.setLayout(new java.awt.GridBagLayout());

        RegisterForm.setBackground(new java.awt.Color(255, 255, 255));
        RegisterForm.setPreferredSize(new java.awt.Dimension(500, 570));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Roboto Medium", 0, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Creá tu cuenta");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Ingresá tus datos");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("DNI");

        RegisterPacienteDNI.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacienteDNI.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        RegisterPacienteDNI.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacienteDNI.setBorder(null);
        RegisterPacienteDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterPacienteDNIActionPerformed(evt);
            }
        });
        RegisterPacienteDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RegisterPacienteDNIKeyPressed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Nombre");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Apellido");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Fecha de nacimiento");

        RegisterPacienteNombre.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacienteNombre.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        RegisterPacienteNombre.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacienteNombre.setBorder(null);
        RegisterPacienteNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RegisterPacienteNombreKeyPressed(evt);
            }
        });

        RegisterPacienteApellido.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacienteApellido.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        RegisterPacienteApellido.setBorder(null);
        RegisterPacienteApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RegisterPacienteApellidoKeyPressed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Contraseña");

        RegisterPacientePassword.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacientePassword.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        RegisterPacientePassword.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacientePassword.setBorder(null);
        RegisterPacientePassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RegisterPacientePasswordKeyPressed(evt);
            }
        });

        RegisterPacienteNacimiento.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacienteNacimiento.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        RegisterPacienteNacimiento.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacienteNacimiento.setBorder(null);
        RegisterPacienteNacimiento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RegisterPacienteNacimientoFocusLost(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Sexo");

        RegisterPacienteHombre.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacienteHombre.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        RegisterPacienteHombre.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacienteHombre.setText("hombre");
        RegisterPacienteHombre.setBorder(null);

        RegisterPacienteMujer.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacienteMujer.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        RegisterPacienteMujer.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacienteMujer.setText("mujer");
        RegisterPacienteMujer.setBorder(null);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Obra Social");

        RegisterPacienteObraSocial.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacienteObraSocial.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        RegisterPacienteObraSocial.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacienteObraSocial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguna", "Hospital Italiano", "Galeno", "OSDEPYM", "Swiss Medical", "OSCHOCA", "Obra Social de Personal Doméstico", "Jerárquicos Salud", "Unión Personal", "Carniceria Dock Sud", "FEMEBA" }));
        RegisterPacienteObraSocial.setBorder(null);

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("Repetir contraseña");

        RegisterPacientePasswordRepeat.setBackground(new java.awt.Color(255, 255, 255));
        RegisterPacientePasswordRepeat.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        RegisterPacientePasswordRepeat.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacientePasswordRepeat.setBorder(null);
        RegisterPacientePasswordRepeat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RegisterPacientePasswordRepeatKeyPressed(evt);
            }
        });

        jSeparator3.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator3.setForeground(new java.awt.Color(51, 51, 51));

        jSeparator4.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator4.setForeground(new java.awt.Color(51, 51, 51));

        jSeparator5.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator5.setForeground(new java.awt.Color(51, 51, 51));

        jSeparator6.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator6.setForeground(new java.awt.Color(51, 51, 51));

        jSeparator7.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator7.setForeground(new java.awt.Color(51, 51, 51));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("(yyyy-MM-dd)");

        NacimientoPacienteSeparator.setBackground(new java.awt.Color(255, 255, 255));
        NacimientoPacienteSeparator.setForeground(new java.awt.Color(51, 51, 51));

        RegisterPacienteButtonPanel.setBackground(new java.awt.Color(0, 204, 153));
        RegisterPacienteButtonPanel.setPreferredSize(new java.awt.Dimension(194, 42));
        RegisterPacienteButtonPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RegisterPacienteButtonPanelMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RegisterPacienteButtonPanelMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RegisterPacienteButtonPanelMouseEntered(evt);
            }
        });
        RegisterPacienteButtonPanel.setLayout(new java.awt.GridBagLayout());

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Crear cuenta");
        RegisterPacienteButtonPanel.add(jLabel13, new java.awt.GridBagConstraints());

        RegisterPacienteClearPanel.setBackground(new java.awt.Color(204, 204, 204));
        RegisterPacienteClearPanel.setForeground(new java.awt.Color(51, 51, 51));
        RegisterPacienteClearPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RegisterPacienteClearPanelMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RegisterPacienteClearPanelMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RegisterPacienteClearPanelMouseEntered(evt);
            }
        });
        RegisterPacienteClearPanel.setLayout(new java.awt.GridBagLayout());

        jLabel14.setBackground(new java.awt.Color(204, 204, 204));
        jLabel14.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 51));
        jLabel14.setText("Borrar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 91, 6, 86);
        RegisterPacienteClearPanel.add(jLabel14, gridBagConstraints);

        BackToLogin.setBackground(new java.awt.Color(255, 255, 255));
        BackToLogin.setFont(new java.awt.Font("Roboto Light", 0, 16)); // NOI18N
        BackToLogin.setForeground(new java.awt.Color(0, 204, 153));
        BackToLogin.setText("Iniciar sesión");
        BackToLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BackToLoginMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BackToLoginMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BackToLoginMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout RegisterFormLayout = new javax.swing.GroupLayout(RegisterForm);
        RegisterForm.setLayout(RegisterFormLayout);
        RegisterFormLayout.setHorizontalGroup(
            RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterFormLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(RegisterFormLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BackToLogin)
                            .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4)
                                .addComponent(jLabel2)
                                .addGroup(RegisterFormLayout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(146, 146, 146)
                                    .addComponent(jLabel12))
                                .addComponent(jSeparator3)
                                .addComponent(RegisterPacienteDNI)
                                .addGroup(RegisterFormLayout.createSequentialGroup()
                                    .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(RegisterPacienteNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                            .addComponent(jSeparator4)
                                            .addComponent(RegisterPacientePassword)
                                            .addComponent(jLabel5)
                                            .addComponent(jSeparator6))
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel11))
                                    .addGap(18, 18, 18)
                                    .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(RegisterPacienteHombre)
                                        .addComponent(jLabel9)
                                        .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel6)
                                            .addComponent(RegisterPacientePasswordRepeat, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                            .addComponent(jSeparator5)
                                            .addComponent(RegisterPacienteApellido)
                                            .addComponent(jSeparator7))))
                                .addGroup(RegisterFormLayout.createSequentialGroup()
                                    .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(NacimientoPacienteSeparator, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(RegisterPacienteNacimiento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addComponent(RegisterPacienteMujer))
                                .addComponent(jLabel10)
                                .addComponent(RegisterPacienteObraSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(RegisterFormLayout.createSequentialGroup()
                                    .addComponent(RegisterPacienteButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(RegisterPacienteClearPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RegisterFormLayout.setVerticalGroup(
            RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterFormLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RegisterPacienteDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegisterPacientePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegisterPacientePasswordRepeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegisterPacienteNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegisterPacienteApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(RegisterPacienteHombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegisterPacienteNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegisterPacienteMujer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NacimientoPacienteSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RegisterPacienteObraSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(RegisterFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RegisterPacienteClearPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RegisterPacienteButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BackToLogin)
                .addGap(100, 100, 100))
        );

        RightRegisterPanel.add(RegisterForm, new java.awt.GridBagConstraints());

        LoginRegisterLayeredPanel.add(RightRegisterPanel, "card3");

        RightLoginPanel.setBackground(new java.awt.Color(255, 255, 255));
        RightLoginPanel.setPreferredSize(new java.awt.Dimension(640, 720));
        RightLoginPanel.setLayout(new java.awt.GridBagLayout());

        LoginForm.setBackground(new java.awt.Color(255, 255, 255));
        LoginForm.setMaximumSize(new java.awt.Dimension(400, 600));
        LoginForm.setPreferredSize(new java.awt.Dimension(350, 400));

        IniciarSesion.setFont(new java.awt.Font("Roboto Medium", 0, 30)); // NOI18N
        IniciarSesion.setForeground(new java.awt.Color(51, 51, 51));
        IniciarSesion.setText("Iniciar Sesión");

        IDLogin.setBackground(new java.awt.Color(255, 255, 255));
        IDLogin.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        IDLogin.setForeground(new java.awt.Color(51, 51, 51));
        IDLogin.setBorder(null);
        TextPrompt placeholder = new TextPrompt("ID", IDLogin);
        placeholder.changeAlpha(0.4f);
        IDLogin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                IDLoginFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                IDLoginFocusLost(evt);
            }
        });
        IDLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                IDLoginMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IDLoginMouseClicked(evt);
            }
        });
        IDLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDLoginActionPerformed(evt);
            }
        });
        IDLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                onlyDigits(evt);
            }
        });

        PasswordLogin.setBackground(new java.awt.Color(255, 255, 255));
        PasswordLogin.setForeground(new java.awt.Color(153, 153, 153));
        PasswordLogin.setBorder(null);
        PasswordLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                onlyLettersOrDigits(evt);
            }
        });

        SubtitleLogin.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        SubtitleLogin.setForeground(new java.awt.Color(51, 51, 51));
        SubtitleLogin.setText("Ingrese DNI y contraseña");

        RegisterOptionLogin.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        RegisterOptionLogin.setForeground(new java.awt.Color(0, 204, 153));
        RegisterOptionLogin.setText("Registrarse como paciente nuevo");
        RegisterOptionLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RegisterOptionLoginMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                registerOptionLoginMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                registerOptionLoginMouseEntered(evt);
            }
        });

        ButtonPanel.setBackground(new java.awt.Color(0, 204, 153));
        ButtonPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonPanelMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loginButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loginButtonMouseEntered(evt);
            }
        });

        ButtonLabelLogin.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        ButtonLabelLogin.setForeground(new java.awt.Color(255, 255, 255));
        ButtonLabelLogin.setText("Ingresar");

        javax.swing.GroupLayout ButtonPanelLayout = new javax.swing.GroupLayout(ButtonPanel);
        ButtonPanel.setLayout(ButtonPanelLayout);
        ButtonPanelLayout.setHorizontalGroup(
            ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonPanelLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(ButtonLabelLogin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ButtonPanelLayout.setVerticalGroup(
            ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ButtonLabelLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addContainerGap())
        );

        AtrasLogin.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        AtrasLogin.setForeground(new java.awt.Color(0, 204, 153));
        AtrasLogin.setText("Atrás");
        AtrasLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AtrasLoginMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AtrasLoginMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AtrasLoginMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout LoginFormLayout = new javax.swing.GroupLayout(LoginForm);
        LoginForm.setLayout(LoginFormLayout);
        LoginFormLayout.setHorizontalGroup(
            LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginFormLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AtrasLogin)
                    .addGroup(LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(IniciarSesion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(IDLogin)
                        .addComponent(PasswordLogin)
                        .addComponent(jSeparator1)
                        .addComponent(jSeparator2)
                        .addGroup(LoginFormLayout.createSequentialGroup()
                            .addComponent(SubtitleLogin)
                            .addGap(127, 127, 127))
                        .addComponent(ButtonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RegisterOptionLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        LoginFormLayout.setVerticalGroup(
            LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginFormLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(IniciarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SubtitleLogin)
                .addGap(18, 18, 18)
                .addComponent(IDLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RegisterOptionLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AtrasLogin)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        RightLoginPanel.add(LoginForm, new java.awt.GridBagConstraints());

        LoginRegisterLayeredPanel.add(RightLoginPanel, "card2");

        switchLayeredPane(LoginRegisterLayeredPanel, RightLoginPanel);

        javax.swing.GroupLayout LoginPanelLayout = new javax.swing.GroupLayout(LoginPanel);
        LoginPanel.setLayout(LoginPanelLayout);
        LoginPanelLayout.setHorizontalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addComponent(LeftLoginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(640, Short.MAX_VALUE))
            .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginPanelLayout.createSequentialGroup()
                    .addGap(0, 640, Short.MAX_VALUE)
                    .addComponent(LoginRegisterLayeredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        LoginPanelLayout.setVerticalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LeftLoginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(LoginRegisterLayeredPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MainLayeredPane.add(LoginPanel, "card2");

        switchLayeredPane(MainLayeredPane, InitPanel);

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainLayeredPane)
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainLayeredPane)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IDLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDLoginActionPerformed

    private void IDLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IDLoginMouseClicked
//        ServicePersona servicePersona = new ServicePersona();
//        try{
//            Persona persona = servicePersona.login(Integer.parseInt(IDLogin.getText()), PasswordLogin.getText());
//            if (persona instanceof Paciente){
//                Paciente paciente = (Paciente)persona;
//                System.out.println(paciente.toString());
//            }
//            if (persona instanceof Medico){
//                Medico medico = (Medico)persona;
//                System.out.println(medico.toString());
//            }
//        }catch(ServiceException exception){
//            JOptionPane.showMessageDialog(null, exception.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//        }
    }//GEN-LAST:event_IDLoginMouseClicked

    private void IDLoginMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IDLoginMousePressed
//        IDLogin.setForeground(Color.black);
//        IDLogin.setText("");
        
    }//GEN-LAST:event_IDLoginMousePressed

    private void IDLoginFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IDLoginFocusGained
        // TODO add your handling code here:
//        if (IDLogin.getText() == "ID" || IDLogin.getText() == ""){
//            IDLogin.setForeground(Color.black);
//            IDLogin.setText("");
//        }
    }//GEN-LAST:event_IDLoginFocusGained

    private void IDLoginFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IDLoginFocusLost
        // TODO add your handling code here:
//        if (IDLogin.getText() == ""){
//            IDLogin.setForeground(Color.gray);
//            IDLogin.setText("ID");
//        }
    }//GEN-LAST:event_IDLoginFocusLost

    private void onlyDigits(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onlyDigits
        validateOnlyDigits(evt);
    }//GEN-LAST:event_onlyDigits

    private void onlyLettersOrDigits(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onlyLettersOrDigits
        validateOnlyLettersOrDigits(evt);
    }//GEN-LAST:event_onlyLettersOrDigits

    private void loginButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseExited
        Color color = new Color(0, 204, 153);
        setCursor(NORMAL);
        ButtonPanel.setBackground(color);
    }//GEN-LAST:event_loginButtonMouseExited

    private void loginButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseEntered
        Color color = new Color(90, 204, 153);
        setCursor(HAND_CURSOR);
        ButtonPanel.setBackground(color);
    }//GEN-LAST:event_loginButtonMouseEntered

    private void registerOptionLoginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerOptionLoginMouseEntered
        Color color = new Color(90, 204, 153);
        setCursor(HAND_CURSOR);
        RegisterOptionLogin.setForeground(color);
    }//GEN-LAST:event_registerOptionLoginMouseEntered

    private void registerOptionLoginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerOptionLoginMouseExited
        Color color = new Color(0, 204, 153);
        setCursor(NORMAL);
        RegisterOptionLogin.setForeground(color);
    }//GEN-LAST:event_registerOptionLoginMouseExited

    private void RegisterOptionLoginMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterOptionLoginMousePressed
        IDLogin.setText("");
        PasswordLogin.setText("");
        switchLayeredPane(LoginRegisterLayeredPanel, RightRegisterPanel);
    }//GEN-LAST:event_RegisterOptionLoginMousePressed

    private void RegisterPacienteDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterPacienteDNIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RegisterPacienteDNIActionPerformed

    private void RegisterPacienteButtonPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterPacienteButtonPanelMouseEntered
        Color color = new Color(90, 204, 153);
        setCursor(HAND_CURSOR);
        RegisterOptionLogin.setForeground(color);
    }//GEN-LAST:event_RegisterPacienteButtonPanelMouseEntered

    private void RegisterPacienteButtonPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterPacienteButtonPanelMouseExited
        Color color = new Color(0, 204, 153);
        setCursor(NORMAL);
        RegisterOptionLogin.setForeground(color);
    }//GEN-LAST:event_RegisterPacienteButtonPanelMouseExited

    private void RegisterPacienteClearPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterPacienteClearPanelMouseEntered
        Color color = new Color(214, 204, 204);
        setCursor(HAND_CURSOR);
        RegisterOptionLogin.setForeground(color);
    }//GEN-LAST:event_RegisterPacienteClearPanelMouseEntered

    private void RegisterPacienteClearPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterPacienteClearPanelMouseExited
        Color color = new Color(204, 204, 204);
        setCursor(NORMAL);
        RegisterOptionLogin.setForeground(color);
    }//GEN-LAST:event_RegisterPacienteClearPanelMouseExited

    private void RegisterPacienteClearPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterPacienteClearPanelMousePressed
        clearPaciente();
    }//GEN-LAST:event_RegisterPacienteClearPanelMousePressed

    private void RegisterPacienteButtonPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterPacienteButtonPanelMousePressed
        if (validarRegisterPaciente() == false){
            JOptionPane.showMessageDialog(null, "Complete todos los campos", "Advertencia", JOptionPane.PLAIN_MESSAGE);
        }else{
            Integer dni = Integer.parseInt(RegisterPacienteDNI.getText());
            Paciente pacienteSearch = null;
            try{
                pacienteSearch = servicePaciente.search(dni);
            }catch(ServiceException exception){
                JOptionPane.showMessageDialog(null, "Ocurrió un error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
            }finally{
                if (pacienteSearch == null){
                    String password = RegisterPacientePassword.getText();
                    String password2 = RegisterPacientePasswordRepeat.getText();
                    
                    String nombre = RegisterPacienteNombre.getText();
                    String apellido = RegisterPacienteApellido.getText();
                    String naciemiento = RegisterPacienteNacimiento.getText();
                    String obraSocial = RegisterPacienteObraSocial.getSelectedItem().toString();
                    String sexo = null;
                    if (RegisterPacienteHombre.isSelected()){
                        sexo = "hombre";
                    }
                    if (RegisterPacienteMujer.isSelected()){
                        sexo = "mujer";
                    }
                    Paciente paciente = new Paciente();
                    paciente.setDNI(dni);
                    paciente.setPassword(password);
                    paciente.setNombre(nombre);
                    paciente.setApellido(apellido);
                    paciente.setNacimiento(LocalDate.parse(naciemiento));
                    paciente.setSexo(sexo);
                    paciente.setObrasocial(obraSocial);
                    try{
                        ServicePaciente servicePaciente = new ServicePaciente();
                        servicePaciente.create(paciente);
                        System.out.println(paciente.toString());
                        clearPaciente();
                        switchLayeredPane(LoginRegisterLayeredPanel, RightLoginPanel);
                    }catch (ServiceException exception){
                        JOptionPane.showMessageDialog(null, exception.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "El DNI ingresado ya existe.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            
        }
    }//GEN-LAST:event_RegisterPacienteButtonPanelMousePressed

    private void RegisterPacienteDNIKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegisterPacienteDNIKeyPressed
        validateOnlyDigits(evt);
    }//GEN-LAST:event_RegisterPacienteDNIKeyPressed

    private void RegisterPacientePasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegisterPacientePasswordKeyPressed
        validateOnlyLettersOrDigits(evt);
    }//GEN-LAST:event_RegisterPacientePasswordKeyPressed

    private void RegisterPacientePasswordRepeatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegisterPacientePasswordRepeatKeyPressed
        validateOnlyLettersOrDigits(evt);
    }//GEN-LAST:event_RegisterPacientePasswordRepeatKeyPressed

    private void RegisterPacienteNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegisterPacienteNombreKeyPressed
        validateNames(evt);
    }//GEN-LAST:event_RegisterPacienteNombreKeyPressed

    private void RegisterPacienteApellidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegisterPacienteApellidoKeyPressed
        validateNames(evt);
    }//GEN-LAST:event_RegisterPacienteApellidoKeyPressed

    private void RegisterPacienteNacimientoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RegisterPacienteNacimientoFocusLost
        Boolean status = validateLocalDates(RegisterPacienteNacimiento);
        changeBorderColor(status, NacimientoPacienteSeparator);
    }//GEN-LAST:event_RegisterPacienteNacimientoFocusLost

    private void BackToLoginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToLoginMouseEntered
        Color color = new Color(90, 204, 153);
        setCursor(HAND_CURSOR);
        BackToLogin.setForeground(color);
    }//GEN-LAST:event_BackToLoginMouseEntered

    private void BackToLoginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToLoginMouseExited
        Color color = new Color(0, 204, 153);
        setCursor(NORMAL);
        BackToLogin.setForeground(color);
    }//GEN-LAST:event_BackToLoginMouseExited

    private void BackToLoginMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToLoginMousePressed
        clearPaciente();
        switchLayeredPane(LoginRegisterLayeredPanel, RightLoginPanel);
    }//GEN-LAST:event_BackToLoginMousePressed

    private void ButtonPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonPanelMousePressed
        System.out.println("Flag 1");
        ServicePersona servicePersona = new ServicePersona();
        System.out.println("Flag 2");
        try{
            Persona persona = servicePersona.login(Integer.parseInt(IDLogin.getText()), PasswordLogin.getText());
            if (persona != null){
                if (persona instanceof Paciente){
                    pacienteLogged = (Paciente)persona;
                    populateProximasConsultas();
                    switchLayeredPane(CenterLeftMenuLayeredPane, CenterLeftMenu);
                    Username.setText("Paciente");
                    switchLayeredPane(ContentLayeredPane, ProximosTurnosPanel);
                    System.out.println(pacienteLogged.toString());
                }
                if (persona instanceof Medico){
                    medicoLogged = (Medico)persona;
                    switchLayeredPane(CenterLeftMenuLayeredPane, CenterLeftMenuMedico);
                    Username.setText("Medico");
                    switchLayeredPane(ContentLayeredPane, ProximosTurnosMedicoPanel);
                    populateProximasConsultasMedico("init");
                    System.out.println(medicoLogged.toString());
                }
                setCursor(NORMAL);
                IDLogin.setText("");
                PasswordLogin.setText("");
                switchLayeredPane(MainLayeredPane, DashboardPanel);
            }
            else{
                JOptionPane.showMessageDialog(null, "Los datos ingresados son incorrectos", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }catch(ServiceException exception){
            JOptionPane.showMessageDialog(null, "Ocurrió un error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ButtonPanelMousePressed

    private void MedicoComboBoxReservarTurnoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedicoComboBoxReservarTurnoMouseEntered
        MedicoComboBoxReservarTurno.setBorder(null);
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_MedicoComboBoxReservarTurnoMouseEntered

    private void MedicoComboBoxReservarTurnoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedicoComboBoxReservarTurnoMouseExited
        MedicoComboBoxReservarTurno.setBorder(null);
        setCursor(NORMAL);
    }//GEN-LAST:event_MedicoComboBoxReservarTurnoMouseExited

    private void SearchMedicoButtonReservarTurnoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchMedicoButtonReservarTurnoMousePressed
        populateMedicoComboBox(SearchMedicoReservarTurno.getText());
        if (MedicoComboBoxReservarTurno.getItemCount() > 0) {
            MedicoComboBoxReservarTurno.setSelectedIndex(0);
//            populateConsultasDisponibles();
        }
//        MedicoComboBoxReservarTurno.setSelectedIndex(0);
//        populateConsultasDisponibles();
    }//GEN-LAST:event_SearchMedicoButtonReservarTurnoMousePressed

    private void SearchMedicoReservarTurnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchMedicoReservarTurnoKeyPressed
        int resultado = validateNamesWithEnter(evt);
        System.out.println("resultado " + resultado);
        if (resultado == 1){
            populateMedicoComboBox(SearchMedicoReservarTurno.getText());
        }
    }//GEN-LAST:event_SearchMedicoReservarTurnoKeyPressed

    private void SearchMedicoButtonReservarTurnoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchMedicoButtonReservarTurnoMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_SearchMedicoButtonReservarTurnoMouseEntered

    private void SearchMedicoButtonReservarTurnoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchMedicoButtonReservarTurnoMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_SearchMedicoButtonReservarTurnoMouseExited

    private void ReservarTurnoMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReservarTurnoMenuMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_ReservarTurnoMenuMouseEntered

    private void ReservarTurnoMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReservarTurnoMenuMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_ReservarTurnoMenuMouseExited

    private void ReservarTurnoMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReservarTurnoMenuMousePressed
        switchLayeredPane(ContentLayeredPane, ReservarTurnoPanel);
        populateMedicoComboBox();
        populateConsultasDisponibles("init");
    }//GEN-LAST:event_ReservarTurnoMenuMousePressed

    private void MedicoComboBoxReservarTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MedicoComboBoxReservarTurnoActionPerformed
        if (MedicoComboBoxReservarTurno.getItemCount() > 0){
            populateConsultorioComboBox();
            populateConsultasDisponibles();
        }
    }//GEN-LAST:event_MedicoComboBoxReservarTurnoActionPerformed

    private void ConsultorioComboBoxReservarTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultorioComboBoxReservarTurnoActionPerformed
        if (ConsultorioComboBoxReservarTurno.getItemCount() > 0){
            populateConsultasDisponibles(ConsultorioComboBoxReservarTurno.getSelectedItem().toString());
        }
    }//GEN-LAST:event_ConsultorioComboBoxReservarTurnoActionPerformed

    private void BorrarButtonReservarTurnoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BorrarButtonReservarTurnoMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_BorrarButtonReservarTurnoMouseEntered

    private void BorrarButtonReservarTurnoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BorrarButtonReservarTurnoMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_BorrarButtonReservarTurnoMouseExited

    private void BorrarButtonReservarTurnoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BorrarButtonReservarTurnoMousePressed
        TurnoSeleccionadoReservarTurno.removeAll();
        TurnoSeleccionadoReservarTurno.revalidate();
        BorrarButtonReservarTurno.setVisible(false);
        ReservarButtonReservarTurno.setVisible(false);
    }//GEN-LAST:event_BorrarButtonReservarTurnoMousePressed

    private void ReservarButtonReservarTurnoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReservarButtonReservarTurnoMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_ReservarButtonReservarTurnoMouseEntered

    private void ReservarButtonReservarTurnoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReservarButtonReservarTurnoMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_ReservarButtonReservarTurnoMouseExited

    private void ReservarButtonReservarTurnoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReservarButtonReservarTurnoMousePressed
        if (TurnoSeleccionadoReservarTurno.getComponentCount() > 0){
            JPanel jPanel = (JPanel)TurnoSeleccionadoReservarTurno.getComponent(0);
            if (jPanel instanceof ConsultaInfoPanel){
                try{
                    serviceConsulta.create(((ConsultaInfoPanel) jPanel).getConsulta());
//                    TurnoSeleccionadoReservarTurno.removeAll();
//                    TurnoSeleccionadoReservarTurno.revalidate();
//                    populateConsultorioComboBox();
//                    populateConsultasDisponibles();
                    JPanel panelConfirmacion = new JPanel();
                    panelConfirmacion.setBackground(new Color(0, 204, 153));
                    panelConfirmacion.setLayout(new BorderLayout());
                    panelConfirmacion.setPreferredSize(new Dimension(866, 72));
                    JLabel reservado = new JLabel("Turno reservado");
                    reservado.setPreferredSize(new Dimension(Integer.MAX_VALUE, 18));
                    reservado.setHorizontalAlignment(JLabel.CENTER);
                    reservado.setForeground(Color.white);
                    reservado.setFont(new Font("Roboto Medium", 0, 18));
                    panelConfirmacion.add(reservado, BorderLayout.CENTER);
                    
//                    final Timer timer;
//                    timer = new Timer(2000, e -> {
//                        TurnoSeleccionadoReservarTurno.removeAll();
//                        TurnoSeleccionadoReservarTurno.revalidate();
//                        timer.stop();
//                    });
//                    TurnoSeleccionadoReservarTurno.add(panelConfirmacion);
//                    TurnoSeleccionadoReservarTurno.revalidate();
//                    timer.start();
                    final Timer[] timer = new Timer[1];
                    timer[0] = new Timer(2000, e -> {
                        TurnoSeleccionadoReservarTurno.removeAll();
                        TurnoSeleccionadoReservarTurno.revalidate();
                        timer[0].stop();
                    });
                    
                    BorrarButtonReservarTurno.setVisible(false);
                    ReservarButtonReservarTurno.setVisible(false);
                    
                    TurnoSeleccionadoReservarTurno.removeAll();
                    TurnoSeleccionadoReservarTurno.revalidate();
                    populateConsultorioComboBox();
                    populateConsultasDisponibles();

                    TurnoSeleccionadoReservarTurno.add(panelConfirmacion);
                    TurnoSeleccionadoReservarTurno.revalidate();
                    timer[0].start();
                    
                }catch(ServiceException exception){
                    JOptionPane.showMessageDialog(null, "No se pudo reservar la consulta", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }
        }
    }//GEN-LAST:event_ReservarButtonReservarTurnoMousePressed

    private void ProximosTurnosMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProximosTurnosMenuMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_ProximosTurnosMenuMouseEntered

    private void ProximosTurnosMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProximosTurnosMenuMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_ProximosTurnosMenuMouseExited

    private void ProximosTurnosMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProximosTurnosMenuMousePressed
        switchLayeredPane(ContentLayeredPane, ProximosTurnosPanel);
        populateProximasConsultas();
    }//GEN-LAST:event_ProximosTurnosMenuMousePressed

    private void ProximosTurnosMantenerButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProximosTurnosMantenerButtonMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_ProximosTurnosMantenerButtonMouseEntered

    private void ProximosTurnosMantenerButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProximosTurnosMantenerButtonMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_ProximosTurnosMantenerButtonMouseExited

    private void ProximosTurnosMantenerButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProximosTurnosMantenerButtonMousePressed
        if (ProximoTurnoAEliminar.getComponentCount() > 0){
            ProximoTurnoAEliminar.removeAll();
            ProximoTurnoAEliminar.revalidate();
            jLabel24.setVisible(false);
            ProximosTurnosMantenerButton.setVisible(false);
            ProximosTurnosCancelarButton.setVisible(false);
        }
    }//GEN-LAST:event_ProximosTurnosMantenerButtonMousePressed

    private void ProximosTurnosCancelarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProximosTurnosCancelarButtonMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_ProximosTurnosCancelarButtonMouseEntered

    private void ProximosTurnosCancelarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProximosTurnosCancelarButtonMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_ProximosTurnosCancelarButtonMouseExited

    private void ProximosTurnosCancelarButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProximosTurnosCancelarButtonMousePressed
        if (ProximoTurnoAEliminar.getComponentCount() > 0){
//            ProximoTurnoAEliminar.removeAll();
//            ProximoTurnoAEliminar.revalidate();
            jLabel24.setVisible(false);
            ProximosTurnosMantenerButton.setVisible(false);
            ProximosTurnosCancelarButton.setVisible(false);
            JPanel jpanel = (JPanel)ProximoTurnoAEliminar.getComponent(0);
            if (jpanel instanceof ConsultaInfoPanel){
                try{
                    serviceConsulta.delete(((ConsultaInfoPanel) jpanel).getConsulta().getId());
                    JPanel panelConfirmacion = new JPanel();
                    panelConfirmacion.setBackground(new Color(0, 204, 153));
                    panelConfirmacion.setLayout(new BorderLayout());
                    panelConfirmacion.setPreferredSize(new Dimension(866, 72));
                    JLabel reservado = new JLabel("Turno cancelado");
                    reservado.setPreferredSize(new Dimension(Integer.MAX_VALUE, 18));
                    reservado.setHorizontalAlignment(JLabel.CENTER);
                    reservado.setForeground(Color.white);
                    reservado.setFont(new Font("Roboto Medium", 0, 18));
                    panelConfirmacion.add(reservado, BorderLayout.CENTER);
                    
                    final Timer[] timer2 = new Timer[1];
                    timer2[0] = new Timer(2000, e -> {
                        ProximoTurnoAEliminar.removeAll();
                        ProximoTurnoAEliminar.revalidate();
                        timer2[0].stop();
                    });
                    
                    ProximoTurnoAEliminar.removeAll();
                    ProximoTurnoAEliminar.revalidate();
                    populateProximasConsultas();

                    ProximoTurnoAEliminar.add(panelConfirmacion);
                    ProximoTurnoAEliminar.revalidate();
                    timer2[0].start();
                }catch(ServiceException exception){
                    JOptionPane.showMessageDialog(null, "No se pudo cancelar la consulta", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            
        }
    }//GEN-LAST:event_ProximosTurnosCancelarButtonMousePressed

    private void HistorialTurnosMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HistorialTurnosMenuMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_HistorialTurnosMenuMouseEntered

    private void HistorialTurnosMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HistorialTurnosMenuMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_HistorialTurnosMenuMouseExited

    private void HistorialTurnosMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HistorialTurnosMenuMousePressed
        switchLayeredPane(ContentLayeredPane, HistorialTurnosPanel);
        populateHistorialConsultas();
    }//GEN-LAST:event_HistorialTurnosMenuMousePressed

    private void PacientePanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PacientePanelMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_PacientePanelMouseEntered

    private void PacientePanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PacientePanelMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_PacientePanelMouseExited

    private void AdminPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdminPanelMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_AdminPanelMouseExited

    private void AdminPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdminPanelMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_AdminPanelMouseEntered

    private void PacientePanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PacientePanelMousePressed
        setCursor(NORMAL);
        switchLayeredPane(MainLayeredPane, LoginPanel);
    }//GEN-LAST:event_PacientePanelMousePressed

    private void ProximosTurnosMedicoFechaComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProximosTurnosMedicoFechaComboBoxMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_ProximosTurnosMedicoFechaComboBoxMouseEntered

    private void ProximosTurnosMedicoFechaComboBoxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProximosTurnosMedicoFechaComboBoxMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_ProximosTurnosMedicoFechaComboBoxMouseExited

    private void ProximosTurnosMedicoFechaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProximosTurnosMedicoFechaComboBoxActionPerformed
        if (ProximosTurnosMedicoFechaComboBox.getItemCount() > 0){
            String param = ProximosTurnosMedicoFechaComboBox.getSelectedItem().toString();
            populateProximasConsultasMedico(param);
        }
//        String param = ProximosTurnosMedicoFechaComboBox.getSelectedItem().toString();
//        populateProximasConsultasMedico(param);
    }//GEN-LAST:event_ProximosTurnosMedicoFechaComboBoxActionPerformed

    private void ProximosTurnosMenuMedicoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProximosTurnosMenuMedicoMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_ProximosTurnosMenuMedicoMouseEntered

    private void ProximosTurnosMenuMedicoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProximosTurnosMenuMedicoMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_ProximosTurnosMenuMedicoMouseExited

    private void AdministrarMedicosSearchTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdministrarMedicosSearchTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AdministrarMedicosSearchTextfieldActionPerformed

    private void AdministrarPacientesMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdministrarPacientesMenuMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_AdministrarPacientesMenuMouseEntered

    private void AdministrarMedicosMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdministrarMedicosMenuMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_AdministrarMedicosMenuMouseEntered

    private void ReportesMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReportesMenuMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_ReportesMenuMouseEntered

    private void ReportesMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReportesMenuMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_ReportesMenuMouseExited

    private void AdministrarMedicosMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdministrarMedicosMenuMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_AdministrarMedicosMenuMouseExited

    private void AdministrarPacientesMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdministrarPacientesMenuMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_AdministrarPacientesMenuMouseExited

    private void AdministrarMedicosMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdministrarMedicosMenuMousePressed
        switchLayeredPane(ContentLayeredPane, AdministrarMedicosPanel);
    }//GEN-LAST:event_AdministrarMedicosMenuMousePressed

    private void AdminPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdminPanelMousePressed
        setCursor(NORMAL);
        switchLayeredPane(MainLayeredPane, DashboardPanel);
        switchLayeredPane(CenterLeftMenuLayeredPane, CenterLeftMenuAdmin);
        switchLayeredPane(ContentLayeredPane, AdministrarMedicosPanel);
        Username.setText("Administrador");
        populateAdministrarMedicos(1);
        AdministrarMedicosActivoComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_AdminPanelMousePressed

    private void AdministrarMedicosSearchButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdministrarMedicosSearchButtonMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_AdministrarMedicosSearchButtonMouseEntered

    private void AdministrarMedicosSearchButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdministrarMedicosSearchButtonMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_AdministrarMedicosSearchButtonMouseExited

    private void AdministrarMedicosSearchButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdministrarMedicosSearchButtonMousePressed
        populateAdministrarMedicos(1, (String) AdministrarMedicosSearchTextfield.getText());
        AdministrarMedicosActivoComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_AdministrarMedicosSearchButtonMousePressed

    private void AdministrarMedicosActivoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdministrarMedicosActivoComboBoxActionPerformed
        String activoComboBox = AdministrarMedicosActivoComboBox.getSelectedItem().toString();
        if (activoComboBox.equals("Activos")){
            if (AdministrarMedicosSearchTextfield.getText().equals("")){
                populateAdministrarMedicos(1);
            }
            else{
                populateAdministrarMedicos(1, (String) AdministrarMedicosSearchTextfield.getText());
            }
        }
        if (activoComboBox.equals("Inactivos")){
            if (AdministrarMedicosSearchTextfield.getText().equals("")){
                populateAdministrarMedicos(0);
            }
            else{
                populateAdministrarMedicos(0, (String) AdministrarMedicosSearchTextfield.getText());
            }
        }
    }//GEN-LAST:event_AdministrarMedicosActivoComboBoxActionPerformed

    private void AdministrarMedicosActivoComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdministrarMedicosActivoComboBoxMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_AdministrarMedicosActivoComboBoxMouseEntered

    private void AdministrarMedicosActivoComboBoxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdministrarMedicosActivoComboBoxMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_AdministrarMedicosActivoComboBoxMouseExited

    private void AdministrarMedicoAgregarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdministrarMedicoAgregarButtonMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_AdministrarMedicoAgregarButtonMouseEntered

    private void AdministrarMedicoAgregarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdministrarMedicoAgregarButtonMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_AdministrarMedicoAgregarButtonMouseExited

    private void AdministrarMedicoAgregarButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdministrarMedicoAgregarButtonMousePressed
        resetEditarMedico();
        setCursor(NORMAL);
        switchLayeredPane(ContentLayeredPane, EditarMedicoPanel);
    }//GEN-LAST:event_AdministrarMedicoAgregarButtonMousePressed

    private void EditarMedicoConsultoriosMedicosTitleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoConsultoriosMedicosTitleMousePressed
        int dni = Integer.parseInt(EditarMedicoID.getText());
        ArrayList<ConsultorioMedico> consultoriosMedicos = searchAllConsultoriosMedicosByDNI(dni);
        for(ConsultorioMedico consultorioMedico : consultoriosMedicos){
            setEditarConsultoriosMedicos(consultorioMedico);
        }
        EditarMedicoConsultoriosMedicosContenedor.setVisible(true);
        EditarMedicoConsultoriosMedicosContenedor.revalidate();
    }//GEN-LAST:event_EditarMedicoConsultoriosMedicosTitleMousePressed

    private void EditarMedicoDNIKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditarMedicoDNIKeyPressed
        onlyDigits(evt);
    }//GEN-LAST:event_EditarMedicoDNIKeyPressed

    private void EditarMedicoHonorariosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditarMedicoHonorariosKeyPressed
        onlyDigits(evt);
    }//GEN-LAST:event_EditarMedicoHonorariosKeyPressed

    private void EditarMedicoPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditarMedicoPasswordKeyPressed
        onlyLettersOrDigits(evt);
    }//GEN-LAST:event_EditarMedicoPasswordKeyPressed

    private void EditarMedicoRepetirPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditarMedicoRepetirPasswordKeyPressed
        onlyLettersOrDigits(evt);
    }//GEN-LAST:event_EditarMedicoRepetirPasswordKeyPressed

    private void EditarMedicoBorrarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoBorrarButtonMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_EditarMedicoBorrarButtonMouseEntered

    private void EditarMedicoBorrarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoBorrarButtonMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_EditarMedicoBorrarButtonMouseExited

    private void EditarMedicoBorrarButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoBorrarButtonMousePressed
        clearEditarMedico();
    }//GEN-LAST:event_EditarMedicoBorrarButtonMousePressed

    private void EditarMedicoGuardarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoGuardarButtonMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_EditarMedicoGuardarButtonMouseEntered

    private void EditarMedicoGuardarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoGuardarButtonMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_EditarMedicoGuardarButtonMouseExited

    private void EditarMedicoGuardarButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoGuardarButtonMousePressed
        setCursor(NORMAL);
        
//        int validationResult = validateAgregarMedico();
//        
//        int dni = Integer.parseInt(EditarMedicoDNI.getText());
//        String nombre = EditarMedicoNombre.getText();
//        String apellido = EditarMedicoApellido.getText();
//        String obraSocial = EditarMedicoObraSocial.getSelectedItem().toString();
//        int honorarios = Integer.parseInt(EditarMedicoHonorarios.getText());
//        String password = EditarMedicoPassword.getText();
//
//        Medico medico = new Medico();
//        medico.setDNI(dni);
//        medico.setNombre(nombre);
//        medico.setApellido(apellido);
//        if (!obraSocial.equals("")){
//            medico.setObrasocial(obraSocial);
//        }
//        medico.setHonorarios(honorarios);
//        medico.setPassword(password);
//        
//        if (validationResult == 1){
//            Medico medicoTest = null;
//            if (EditarMedicoTitle.getText().equals("Agregar médico")){
//                try{
//                    medicoTest = serviceMedico.search(dni);
//                }catch(ServiceException exception){
//                    
//                }finally{
//                    if (medicoTest == null){
//                        JOptionPane.showMessageDialog(null, "Ya existe un médico con el DNI ingresado", "Advertencia", JOptionPane.ERROR_MESSAGE);
//                    }
//                    else{
//                        try{
//                            serviceMedico.create(medico);
//                            
//                            final Medico medicoTimer = medico;
//                            final Timer[] timer3 = new Timer[1];
//                            timer3[0] = new Timer(2000, e -> {
//                                EditarMedicoConfirmacionPanel.setVisible(false);
//                                setEditarMedico(medicoTimer, 1);
//                                timer3[0].stop();
//                            });
//
//                            EditarMedicoConfirmacionPanel.setVisible(true);
//                            EditarMedicoBorrarButton.setVisible(false);
//                            EditarMedicoGuardarButton.setVisible(false);
//                            timer3[0].start();
//                        }catch(ServiceException exception){
//                            JOptionPane.showMessageDialog(null, "Ocurrió un error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
//                        }
//                    }
//                }
//            }
//            else{
//                try{
//                    serviceMedico.update(medico, Integer.parseInt(EditarMedicoID.getText()));
//                    
//                    final Medico medicoTimer = medico;
//                    final Timer[] timer4 = new Timer[1];
//                    timer4[0] = new Timer(2000, e -> {
//                        EditarMedicoConfirmacionPanel.setVisible(false);
//                        switchLayeredPane(ContentLayeredPane, AdministrarMedicosPanel);
//                        populateAdministrarMedicos(1);
//                        AdministrarMedicosActivoComboBox.setSelectedIndex(0);
//                        resetEditarMedico();
//                        timer4[0].stop();
//                    });
//
//                    EditarMedicoConfirmacionPanel.setVisible(true);
//                    EditarMedicoBorrarButton.setVisible(false);
//                    EditarMedicoGuardarButton.setVisible(false);
//                    timer4[0].start();
//                }catch(ServiceException exception){
//                    JOptionPane.showMessageDialog(null, "Ocurrió un error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
//                }
//            }
//        }
//        if(validationResult == 2){
//            JOptionPane.showMessageDialog(null, "Las contraseñas deben coincidir", "Advertencia", JOptionPane.ERROR_MESSAGE);
//        }
//        if (validationResult == 3){
//            JOptionPane.showMessageDialog(null, "Complete todos los campos corréctamente", "Advertencia", JOptionPane.ERROR_MESSAGE);
//        }
        
        
        
        
        if (EditarMedicoTitle.getText().equals("Agregar médico")){
            
            int validationResult = validateAgregarMedico();
            if (validationResult == 1){
                
                int dni = Integer.parseInt(EditarMedicoDNI.getText());
                String nombre = EditarMedicoNombre.getText();
                String apellido = EditarMedicoApellido.getText();
                String obraSocial = EditarMedicoObraSocial.getSelectedItem().toString();
                int honorarios = Integer.parseInt(EditarMedicoHonorarios.getText());
                String password = EditarMedicoPassword.getText();
                
                Medico medicoTest = null;
                    try{
                        medicoTest = searchMedico(dni);
                    }finally{
                        if (medicoTest != null){
                            JOptionPane.showMessageDialog(null, "Ya existe un médico con el DNI ingresado", "Advertencia", JOptionPane.ERROR_MESSAGE);
                        }
                        else{
                            
                            Medico medico = new Medico();
                            medico.setDNI(dni);
                            medico.setNombre(nombre);
                            medico.setApellido(apellido);
                            if (!obraSocial.equals("Ninguna")){
                                medico.setObrasocial(obraSocial);
                            }
                            medico.setHonorarios(honorarios);
                            medico.setPassword(password);
                            
                            try{
                                serviceMedico.create(medico);

                                final Medico medicoTimer = medico;
                                final Timer[] timer3 = new Timer[1];
                                timer3[0] = new Timer(2000, e -> {
                                    EditarMedicoConfirmacionPanel.setVisible(false);
                                    setEditarMedico(medicoTimer, 1);
                                    timer3[0].stop();
                                });

                                EditarMedicoConfirmacionPanel.setVisible(true);
                                EditarMedicoBorrarButton.setVisible(false);
                                EditarMedicoGuardarButton.setVisible(false);
                                timer3[0].start();
                            }catch(ServiceException exception){
                                JOptionPane.showMessageDialog(null, "Ocurrió un error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    }
            }
            if(validationResult == 2){
                JOptionPane.showMessageDialog(null, "Las contraseñas deben coincidir", "Advertencia", JOptionPane.ERROR_MESSAGE);
            }
            if (validationResult == 3){
                JOptionPane.showMessageDialog(null, "Complete todos los campos corréctamente", "Advertencia", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        if (EditarMedicoTitle.getText().equals("Editar médico")){
            
            int validationResult = validateEditarMedico();
            if (validationResult == 1){
                
                int dni = Integer.parseInt(EditarMedicoDNI.getText());
                String nombre = EditarMedicoNombre.getText();
                String apellido = EditarMedicoApellido.getText();
                String obraSocial = EditarMedicoObraSocial.getSelectedItem().toString();
                int honorarios = Integer.parseInt(EditarMedicoHonorarios.getText());
                String password = EditarMedicoRepetirPassword.getText();
                
                Medico medico = new Medico();
                medico.setDNI(dni);
                medico.setNombre(nombre);
                medico.setApellido(apellido);
                if (!obraSocial.equals("Ninguna")){
                    medico.setObrasocial(obraSocial);
                }
                medico.setHonorarios(honorarios);
                medico.setPassword(password);
                
                try{
                    serviceMedico.update(medico, Integer.parseInt(EditarMedicoID.getText()));
                    
                    final Medico medicoTimer = medico;
                    final Timer[] timer4 = new Timer[1];
                    timer4[0] = new Timer(2000, e -> {
                        EditarMedicoConfirmacionPanel.setVisible(false);
                        switchLayeredPane(ContentLayeredPane, AdministrarMedicosPanel);
                        populateAdministrarMedicos(1);
                        AdministrarMedicosActivoComboBox.setSelectedIndex(0);
                        resetEditarMedico();
                        timer4[0].stop();
                    });

                    EditarMedicoConfirmacionPanel.setVisible(true);
                    EditarMedicoBorrarButton.setVisible(false);
                    EditarMedicoGuardarButton.setVisible(false);
                    timer4[0].start();
                }catch(ServiceException exception){
                    JOptionPane.showMessageDialog(null, "Ocurrió un error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
                }
                
            }
            if(validationResult == 2){
                JOptionPane.showMessageDialog(null, "La contraseña antigua es incorrecta", "Advertencia", JOptionPane.ERROR_MESSAGE);
            }
            if (validationResult == 3){
                JOptionPane.showMessageDialog(null, "Complete todos los campos corréctamente", "Advertencia", JOptionPane.ERROR_MESSAGE);
            }
            
        }
        
    }//GEN-LAST:event_EditarMedicoGuardarButtonMousePressed

    private void EditarMedicoConsultoriosMedicosTitleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoConsultoriosMedicosTitleMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_EditarMedicoConsultoriosMedicosTitleMouseEntered

    private void EditarMedicoConsultoriosMedicosTitleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoConsultoriosMedicosTitleMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_EditarMedicoConsultoriosMedicosTitleMouseExited

    private void EditarMedicoConsultoriosMedicosBorrarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoConsultoriosMedicosBorrarButtonMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_EditarMedicoConsultoriosMedicosBorrarButtonMouseEntered

    private void EditarMedicoConsultoriosMedicosBorrarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoConsultoriosMedicosBorrarButtonMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_EditarMedicoConsultoriosMedicosBorrarButtonMouseExited

    private void EditarMedicoConsultoriosMedicosBorrarButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoConsultoriosMedicosBorrarButtonMousePressed
        resetEditarConsultoriosMedicos();
    }//GEN-LAST:event_EditarMedicoConsultoriosMedicosBorrarButtonMousePressed

    private void EditarMedicoConsultoriosMedicosGuardarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoConsultoriosMedicosGuardarButtonMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_EditarMedicoConsultoriosMedicosGuardarButtonMouseEntered

    private void EditarMedicoConsultoriosMedicosGuardarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoConsultoriosMedicosGuardarButtonMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_EditarMedicoConsultoriosMedicosGuardarButtonMouseExited

    private void EditarMedicoConsultoriosMedicosGuardarButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoConsultoriosMedicosGuardarButtonMousePressed
        int validationResult = validateEditarConsultoriosMedicos();
        if (validationResult == 6){
            try{
                int dni = Integer.parseInt(EditarMedicoID.getText());
                serviceConsultorioMedico.deleteByMedico(dni);
                try{
                    
                    Medico medico = searchMedico(dni);
                    
                    if (!LunesConsultoriosMedicos.getText().isEmpty()){
                        System.out.println("\nVOY A CREAR LUNES\n");
                        ConsultorioMedico consultorioMedico = new ConsultorioMedico();
                        consultorioMedico.setConsultorio(LunesConsultoriosMedicos.getText());
                        consultorioMedico.setDia("Lunes");
                        consultorioMedico.setEntrada(LocalTime.parse(LunesEntradaConsultoriosMedicos.getText()));
                        consultorioMedico.setSalida(LocalTime.parse(LunesSalidaConsultoriosMedicos.getText()));
                        consultorioMedico.setMedico(medico);
                        try{
                            serviceConsultorioMedico.create(consultorioMedico);
                        }catch(ServiceException exception){
                            JOptionPane.showMessageDialog(null, "No se pudieron guardar los cambios", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    
                    if (!MartesConsultoriosMedicos.getText().isEmpty()){
                        System.out.println("\nVOY A CREAR MARTES\n");
                        ConsultorioMedico consultorioMedico = new ConsultorioMedico();
                        consultorioMedico.setConsultorio(MartesConsultoriosMedicos.getText());
                        consultorioMedico.setDia("Martes");
                        consultorioMedico.setEntrada(LocalTime.parse(MartesEntradaConsultoriosMedicos.getText()));
                        consultorioMedico.setSalida(LocalTime.parse(MartesSalidaConsultoriosMedicos.getText()));
                        consultorioMedico.setMedico(medico);
                        try{
                            serviceConsultorioMedico.create(consultorioMedico);
                        }catch(ServiceException exception){
                            JOptionPane.showMessageDialog(null, "No se pudieron guardar los cambios", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    
                    if (!MiercolesConsultoriosMedicos.getText().isEmpty()){
                        System.out.println("\nVOY A CREAR MIERCOLES\n");
                        ConsultorioMedico consultorioMedico = new ConsultorioMedico();
                        consultorioMedico.setConsultorio(MiercolesConsultoriosMedicos.getText());
                        consultorioMedico.setDia("Miercoles");
                        consultorioMedico.setEntrada(LocalTime.parse(MiercolesEntradaConsultoriosMedicos.getText()));
                        consultorioMedico.setSalida(LocalTime.parse(MiercolesSalidaConsultoriosMedicos.getText()));
                        consultorioMedico.setMedico(medico);
                        try{
                            serviceConsultorioMedico.create(consultorioMedico);
                        }catch(ServiceException exception){
                            JOptionPane.showMessageDialog(null, "No se pudieron guardar los cambios", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    
                    if (!JuevesConsultoriosMedicos.getText().isEmpty()){
                        System.out.println("\nVOY A CREAR JUEVES\n");
                        ConsultorioMedico consultorioMedico = new ConsultorioMedico();
                        consultorioMedico.setConsultorio(JuevesConsultoriosMedicos.getText());
                        consultorioMedico.setDia("Jueves");
                        consultorioMedico.setEntrada(LocalTime.parse(JuevesEntradaConsultoriosMedicos.getText()));
                        consultorioMedico.setSalida(LocalTime.parse(JuevesSalidaConsultoriosMedicos.getText()));
                        consultorioMedico.setMedico(medico);
                        try{
                            serviceConsultorioMedico.create(consultorioMedico);
                        }catch(ServiceException exception){
                            JOptionPane.showMessageDialog(null, "No se pudieron guardar los cambios", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    
                    if (!ViernesConsultoriosMedicos.getText().isEmpty()){
                        System.out.println("\nVOY A CREAR VIERNES\n");
                        ConsultorioMedico consultorioMedico = new ConsultorioMedico();
                        consultorioMedico.setConsultorio(ViernesConsultoriosMedicos.getText());
                        consultorioMedico.setDia("Viernes");
                        consultorioMedico.setEntrada(LocalTime.parse(ViernesEntradaConsultoriosMedicos.getText()));
                        consultorioMedico.setSalida(LocalTime.parse(ViernesSalidaConsultoriosMedicos.getText()));
                        consultorioMedico.setMedico(medico);
                        try{
                            serviceConsultorioMedico.create(consultorioMedico);
                        }catch(ServiceException exception){
                            JOptionPane.showMessageDialog(null, "No se pudieron guardar los cambios", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    
                    if (!SabadoConsultoriosMedicos.getText().isEmpty()){
                        System.out.println("\nVOY A CREAR SABADO\n");
                        ConsultorioMedico consultorioMedico = new ConsultorioMedico();
                        consultorioMedico.setConsultorio(SabadoConsultoriosMedicos.getText());
                        consultorioMedico.setDia("Sabado");
                        consultorioMedico.setEntrada(LocalTime.parse(SabadoEntradaConsultoriosMedicos.getText()));
                        consultorioMedico.setSalida(LocalTime.parse(SabadoSalidaConsultoriosMedicos.getText()));
                        consultorioMedico.setMedico(medico);
                        try{
                            serviceConsultorioMedico.create(consultorioMedico);
                        }catch(ServiceException exception){
                            JOptionPane.showMessageDialog(null, "No se pudieron guardar los cambios", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    
                    
                    serviceConsulta.deleteMissmatches(dni);
                    setCursor(NORMAL);
                    resetEditarConsultoriosMedicos();
                    switchLayeredPane(ContentLayeredPane, AdministrarMedicosPanel);
                    populateAdministrarMedicos(1);
                    AdministrarMedicosActivoComboBox.setSelectedIndex(0);
                    
                }catch(ServiceException exception){
                    JOptionPane.showMessageDialog(null, "Ocurrió un error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }catch(ServiceException exception){
                JOptionPane.showMessageDialog(null, "No se pudieron guardar los cambios", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_EditarMedicoConsultoriosMedicosGuardarButtonMousePressed

    private void EditarMedicoCancelarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoCancelarButtonMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_EditarMedicoCancelarButtonMouseEntered

    private void EditarMedicoCancelarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoCancelarButtonMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_EditarMedicoCancelarButtonMouseExited

    private void EditarMedicoCancelarButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoCancelarButtonMousePressed
        setCursor(NORMAL);
        resetEditarMedico();
        switchLayeredPane(ContentLayeredPane, AdministrarMedicosPanel);
        populateAdministrarMedicos(1);
        AdministrarMedicosActivoComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_EditarMedicoCancelarButtonMousePressed

    private void EditarMedicoDesactivarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoDesactivarButtonMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_EditarMedicoDesactivarButtonMouseEntered

    private void EditarMedicoDesactivarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoDesactivarButtonMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_EditarMedicoDesactivarButtonMouseExited

    private void EditarMedicoDesactivarButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMedicoDesactivarButtonMousePressed
        setCursor(NORMAL);
        int dni = Integer.parseInt(EditarMedicoID.getText());
        if (EditarMedicoDesactivarText.getText().equals("Dar de alta")){
            try{
                serviceMedico.manageActivation(1, dni);
                resetEditarMedico();
                switchLayeredPane(ContentLayeredPane, AdministrarMedicosPanel);
                populateAdministrarMedicos(1);
                AdministrarMedicosActivoComboBox.setSelectedIndex(0);
            }catch(ServiceException exception){
                JOptionPane.showMessageDialog(null, "No se pudo dar de alta", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            try{
                serviceMedico.manageActivation(0, dni);
                    
                resetEditarMedico();
                switchLayeredPane(ContentLayeredPane, AdministrarMedicosPanel);
                populateAdministrarMedicos(1);
                AdministrarMedicosActivoComboBox.setSelectedIndex(0);
                
            }catch(ServiceException exception){
                JOptionPane.showMessageDialog(null, "No se pudo dar de baja", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_EditarMedicoDesactivarButtonMousePressed

    private void SalirMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalirMousePressed
        setCursor(NORMAL);
        switchLayeredPane(MainLayeredPane, InitPanel);
        if (medicoLogged != null){
            medicoLogged = null;
        }
        if (pacienteLogged != null){
            pacienteLogged = null;
        }
    }//GEN-LAST:event_SalirMousePressed

    private void SalirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalirMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_SalirMouseEntered

    private void SalirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalirMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_SalirMouseExited

    private void BackArrowMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackArrowMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_BackArrowMouseEntered

    private void BackArrowMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackArrowMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_BackArrowMouseExited

    private void BackArrowMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackArrowMousePressed
        setCursor(NORMAL);
        switchLayeredPane(MainLayeredPane, InitPanel);
        if (medicoLogged != null){
            medicoLogged = null;
        }
        if (pacienteLogged != null){
            pacienteLogged = null;
        }
    }//GEN-LAST:event_BackArrowMousePressed

    private void AtrasLoginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AtrasLoginMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_AtrasLoginMouseEntered

    private void AtrasLoginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AtrasLoginMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_AtrasLoginMouseExited

    private void AtrasLoginMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AtrasLoginMousePressed
        IDLogin.setText("");
        PasswordLogin.setText("");
        setCursor(NORMAL);
        switchLayeredPane(MainLayeredPane, InitPanel);
    }//GEN-LAST:event_AtrasLoginMousePressed

    private void ReportesRecaudacionesButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReportesRecaudacionesButtonMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_ReportesRecaudacionesButtonMouseEntered

    private void ReportesRecaudacionesButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReportesRecaudacionesButtonMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_ReportesRecaudacionesButtonMouseExited

    private void ReportesRecaudacionesButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReportesRecaudacionesButtonMousePressed
        populateRecaudacionesReporte();
    }//GEN-LAST:event_ReportesRecaudacionesButtonMousePressed

    private void ReportesMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReportesMenuMousePressed
        resetReportes();
        switchLayeredPane(ContentLayeredPane, ReportesPanel);
    }//GEN-LAST:event_ReportesMenuMousePressed

    private void ReportesConsultasButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReportesConsultasButtonMouseEntered
        setCursor(HAND_CURSOR);
    }//GEN-LAST:event_ReportesConsultasButtonMouseEntered

    private void ReportesConsultasButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReportesConsultasButtonMouseExited
        setCursor(NORMAL);
    }//GEN-LAST:event_ReportesConsultasButtonMouseExited

    private void ReportesConsultasButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReportesConsultasButtonMousePressed
        populateConsultasReporte();
    }//GEN-LAST:event_ReportesConsultasButtonMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AdminPanel;
    private javax.swing.JPanel AdministrarMedicoAgregarButton;
    private javax.swing.JComboBox<String> AdministrarMedicosActivoComboBox;
    private javax.swing.JPanel AdministrarMedicosContenedor;
    private javax.swing.JLabel AdministrarMedicosMenu;
    private javax.swing.JPanel AdministrarMedicosPanel;
    private javax.swing.JScrollPane AdministrarMedicosScrollPane;
    private javax.swing.JPanel AdministrarMedicosSearchButton;
    private javax.swing.JTextField AdministrarMedicosSearchTextfield;
    private javax.swing.JLabel AdministrarPacientesMenu;
    private javax.swing.JLabel AtrasLogin;
    private javax.swing.JLabel BackArrow;
    private javax.swing.JLabel BackToLogin;
    private javax.swing.JPanel BorrarButtonReservarTurno;
    private javax.swing.JLabel ButtonLabelLogin;
    private javax.swing.JPanel ButtonPanel;
    private javax.swing.JPanel CenterLeftMenu;
    private javax.swing.JPanel CenterLeftMenuAdmin;
    private javax.swing.JLayeredPane CenterLeftMenuLayeredPane;
    private javax.swing.JPanel CenterLeftMenuMedico;
    private javax.swing.JComboBox<String> ConsultorioComboBoxReservarTurno;
    private javax.swing.JLayeredPane ContentLayeredPane;
    private javax.swing.JPanel DashboardPanel;
    private javax.swing.JScrollPane EditarConsultoriosMedicosScrollPane;
    private javax.swing.JTextField EditarMedicoApellido;
    private javax.swing.JPanel EditarMedicoBorrarButton;
    private javax.swing.JPanel EditarMedicoCancelarButton;
    private javax.swing.JPanel EditarMedicoConfirmacionPanel;
    private javax.swing.JPanel EditarMedicoConsultoriosMedicosBorrarButton;
    private javax.swing.JPanel EditarMedicoConsultoriosMedicosContenedor;
    private javax.swing.JPanel EditarMedicoConsultoriosMedicosGuardarButton;
    private javax.swing.JPanel EditarMedicoConsultoriosMedicosPanel;
    private javax.swing.JLabel EditarMedicoConsultoriosMedicosTitle;
    private javax.swing.JTextField EditarMedicoDNI;
    private javax.swing.JPanel EditarMedicoDesactivarButton;
    private javax.swing.JLabel EditarMedicoDesactivarText;
    private javax.swing.JPanel EditarMedicoGuardarButton;
    private javax.swing.JTextField EditarMedicoHonorarios;
    private javax.swing.JLabel EditarMedicoID;
    private javax.swing.JTextField EditarMedicoNombre;
    private javax.swing.JComboBox<String> EditarMedicoObraSocial;
    private javax.swing.JPanel EditarMedicoPanel;
    private javax.swing.JPasswordField EditarMedicoPassword;
    private javax.swing.JPasswordField EditarMedicoRepetirPassword;
    private javax.swing.JLabel EditarMedicoRepetirPasswordLabel;
    private javax.swing.JLabel EditarMedicoTitle;
    private javax.swing.JPanel HistorialTurnosContenedor;
    private javax.swing.JLabel HistorialTurnosMenu;
    private javax.swing.JPanel HistorialTurnosPanel;
    private javax.swing.JScrollPane HistorialTurnosScrollPane;
    private javax.swing.JTextField IDLogin;
    private javax.swing.JLabel IniciarSesion;
    private javax.swing.JPanel InitContenedorPanel;
    private javax.swing.JLayeredPane InitLayeredPane;
    private javax.swing.JPanel InitPanel;
    private javax.swing.JTextField JuevesConsultoriosMedicos;
    private javax.swing.JTextField JuevesEntradaConsultoriosMedicos;
    private javax.swing.JTextField JuevesSalidaConsultoriosMedicos;
    private javax.swing.JPanel LeftLoginPanel;
    private javax.swing.JPanel LeftMenu;
    private javax.swing.JPanel LoginForm;
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JLayeredPane LoginRegisterLayeredPanel;
    private javax.swing.JTextField LunesConsultoriosMedicos;
    private javax.swing.JTextField LunesEntradaConsultoriosMedicos;
    private javax.swing.JTextField LunesSalidaConsultoriosMedicos;
    private javax.swing.JLayeredPane MainLayeredPane;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JTextField MartesConsultoriosMedicos;
    private javax.swing.JTextField MartesEntradaConsultoriosMedicos;
    private javax.swing.JTextField MartesSalidaConsultoriosMedicos;
    private javax.swing.JComboBox<Medico> MedicoComboBoxReservarTurno;
    private javax.swing.JTextField MiercolesConsultoriosMedicos;
    private javax.swing.JTextField MiercolesEntradaConsultoriosMedicos;
    private javax.swing.JTextField MiercolesSalidaConsultoriosMedicos;
    private javax.swing.JSeparator NacimientoPacienteSeparator;
    private javax.swing.JPanel PacientePanel;
    private javax.swing.JPasswordField PasswordLogin;
    private javax.swing.JPanel ProximoTurnoAEliminar;
    private javax.swing.JPanel ProximosTurnosCancelarButton;
    private javax.swing.JPanel ProximosTurnosContenedor;
    private javax.swing.JPanel ProximosTurnosMantenerButton;
    private javax.swing.JPanel ProximosTurnosMedicoContenedor;
    private javax.swing.JComboBox<String> ProximosTurnosMedicoFechaComboBox;
    private javax.swing.JPanel ProximosTurnosMedicoPanel;
    private javax.swing.JScrollPane ProximosTurnosMedicoScrollPane;
    private javax.swing.JLabel ProximosTurnosMenu;
    private javax.swing.JLabel ProximosTurnosMenuMedico;
    private javax.swing.JPanel ProximosTurnosPanel;
    private javax.swing.JScrollPane ProximosTurnosScrollPane;
    private javax.swing.JPanel RegisterForm;
    private javax.swing.JLabel RegisterOptionLogin;
    private javax.swing.JTextField RegisterPacienteApellido;
    private javax.swing.JPanel RegisterPacienteButtonPanel;
    private javax.swing.JPanel RegisterPacienteClearPanel;
    private javax.swing.JTextField RegisterPacienteDNI;
    private javax.swing.JRadioButton RegisterPacienteHombre;
    private javax.swing.JRadioButton RegisterPacienteMujer;
    private javax.swing.JTextField RegisterPacienteNacimiento;
    private javax.swing.JTextField RegisterPacienteNombre;
    private javax.swing.JComboBox<String> RegisterPacienteObraSocial;
    private javax.swing.JPasswordField RegisterPacientePassword;
    private javax.swing.JPasswordField RegisterPacientePasswordRepeat;
    private javax.swing.ButtonGroup RegisterPacienteSexo;
    private javax.swing.JPanel ReportesConsultasButton;
    private javax.swing.JPanel ReportesConsultasContenedor;
    private javax.swing.JTextField ReportesConsultasDNI;
    private javax.swing.JTextField ReportesConsultasDesde;
    private javax.swing.JTextField ReportesConsultasHasta;
    private javax.swing.JScrollPane ReportesConsultasScrollPane;
    private javax.swing.JLabel ReportesConsultasTotal;
    private javax.swing.JLabel ReportesMenu;
    private javax.swing.JPanel ReportesPanel;
    private javax.swing.JPanel ReportesRecaudacionesButton;
    private javax.swing.JPanel ReportesRecaudacionesContenedor;
    private javax.swing.JTextField ReportesRecaudacionesDesde;
    private javax.swing.JTextField ReportesRecaudacionesHasta;
    private javax.swing.JScrollPane ReportesRecaudacionesScrollPane;
    private javax.swing.JLabel ReportesRecaudacionesTotal;
    private javax.swing.JPanel ReservarButtonReservarTurno;
    private javax.swing.JLabel ReservarTurnoMenu;
    private javax.swing.JPanel ReservarTurnoPanel;
    private javax.swing.JPanel RightLoginPanel;
    private javax.swing.JPanel RightRegisterPanel;
    private javax.swing.JTextField SabadoConsultoriosMedicos;
    private javax.swing.JTextField SabadoEntradaConsultoriosMedicos;
    private javax.swing.JTextField SabadoSalidaConsultoriosMedicos;
    private javax.swing.JLabel Salir;
    private javax.swing.JPanel SearchMedicoButtonReservarTurno;
    private javax.swing.JTextField SearchMedicoReservarTurno;
    private javax.swing.JLabel SubtitleLogin;
    private javax.swing.JPanel TopLeftMenu;
    private javax.swing.JPanel TurnoSeleccionadoReservarTurno;
    private javax.swing.JPanel TurnosDisponiblesContenedorReservarTurno;
    private javax.swing.JScrollPane TurnosDisponiblesReservarTurno;
    private javax.swing.JLabel Username;
    private javax.swing.JTextField ViernesConsultoriosMedicos;
    private javax.swing.JTextField ViernesEntradaConsultoriosMedicos;
    private javax.swing.JTextField ViernesSalidaConsultoriosMedicos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator19;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator20;
    private javax.swing.JSeparator jSeparator21;
    private javax.swing.JSeparator jSeparator22;
    private javax.swing.JSeparator jSeparator23;
    private javax.swing.JSeparator jSeparator24;
    private javax.swing.JSeparator jSeparator25;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    // End of variables declaration//GEN-END:variables

    private void switchLayeredPane(JLayeredPane jLayeredPane, JPanel panel) {
        jLayeredPane.removeAll();
        jLayeredPane.add(panel);
        jLayeredPane.repaint();
        jLayeredPane.revalidate();
    }

    private boolean validarRegisterPaciente() {
        String dni = RegisterPacienteDNI.getText();
        String password = String.valueOf(RegisterPacientePassword.getPassword());
        String password2 = String.valueOf(RegisterPacientePasswordRepeat.getPassword());
        String nombre = RegisterPacienteNombre.getText();
        String apellido = RegisterPacienteApellido.getText();
        String naciemiento = RegisterPacienteNacimiento.getText();
        String sexo = null;
        if (RegisterPacienteHombre.isSelected()){
            sexo = "hombre";
        }
        if (RegisterPacienteMujer.isSelected()){
            sexo = "mujer";
        }
        if (!password.isEmpty() && !dni.isEmpty() && !password2.isEmpty() && !nombre.isEmpty() && !apellido.isEmpty() && !naciemiento.isEmpty() && sexo != null){
            if (password.equals(password2)){
                DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("yyy-MM-dd");
                try{
                    LocalDate localDate = LocalDate.parse(naciemiento, dateTimeFormatter);
                    return true;
                }catch(DateTimeParseException exception){
                    return false;
                }
            }
            else{
                return false;
            }
        }
        else{
            return false;
        }
//        System.out.print(dni + " " + password + " " + password2 + " " + nombre + " " + apellido + " " + naciemiento + " " + sexo);
//        if (dni == "" || password == "" || !password.equals(password2) || nombre == "" || apellido == "" || naciemiento == "" || sexo == null){
//            return false;
//        }else{
//            return true;
//        }
    }

    private void clearPaciente() {
        RegisterPacienteDNI.setText("");
        RegisterPacientePassword.setText("");
        RegisterPacientePasswordRepeat.setText("");
        RegisterPacienteNombre.setText("");
        RegisterPacienteApellido.setText("");
        RegisterPacienteNacimiento.setText("");
        RegisterPacienteHombre.setSelected(false);
        RegisterPacienteMujer.setSelected(false);
        RegisterPacienteObraSocial.setSelectedIndex(0);
    }

    private void validateOnlyDigits(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)){
            evt.consume();
        }
    }

    private void validateOnlyLettersOrDigits(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (!Character.isLetterOrDigit(c) && (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)){
            evt.consume();
        }
    }

    private void validateNames(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if ( (!Character.isLetter(c)) && (!Character.isSpaceChar(c)) && (String.valueOf(c) != "-") ) {
            evt.consume();
        }
    }
    
    private int validateNamesWithEnter(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        int result = 0;
        if ( (!Character.isLetter(c)) && (!Character.isSpaceChar(c)) && (String.valueOf(c) != "-") && (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE) && (evt.getKeyCode() != KeyEvent.VK_ENTER) ) {
            evt.consume();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            result = 1;
        }
        return result;
    }
    
    private Boolean validateLocalDates(JTextField jTextField){
        String dateString = jTextField.getText();
        Boolean result = true;
        try{
            LocalDate.parse(dateString, DateTimeFormatter.ISO_DATE);
        }catch(DateTimeException exception){
            result = false;
            JOptionPane.showMessageDialog(null, "Fecha inválida", "Advertencia", JOptionPane.PLAIN_MESSAGE);
        }finally{
            return result;
        }
    }
    
    private void changeBorderColor(Boolean state, JSeparator separator){
        if (!state){
            separator.setForeground(Color.red);
            separator.setBackground(Color.red);
        }else{
            Color color = new Color(51, 51, 51);
            separator.setForeground(color);
            separator.setBackground(Color.red);
        }
    }
    
    private ArrayList<Medico> searchAllMedicos(int activo){
        ServiceMedico serviceMedico = new ServiceMedico();
        ArrayList<Medico> medicos = null;
        try{
            medicos = serviceMedico.searchAll(activo);
        }
        catch(ServiceException exception){
            JOptionPane.showMessageDialog(null, "No se pudieron encontrar resultados", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return medicos;
    }
    
    private ArrayList<Medico> searchAllMedicosByApellido(String apellido, int activo){
        ServiceMedico serviceMedico = new ServiceMedico();
        ArrayList<Medico> medicos = null;
        try{
            medicos = serviceMedico.searchAllByApellido(activo, apellido);
        }
        catch(ServiceException exception){
            JOptionPane.showMessageDialog(null, "No se pudieron encontrar resultados", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return medicos;
    }
    
    private Medico searchMedico(int dni){
        Medico medico = null;
        try{
            medico = serviceMedico.search(dni);
        }catch(ServiceException exception){
            JOptionPane.showMessageDialog(null, "Error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return medico;
    }
    
    private ArrayList<ConsultorioMedico> searchAllConsultoriosMedicosByDNI(int dni){
        ServiceConsultorioMedico serviceConsultorioMedico = new ServiceConsultorioMedico();
        ArrayList<ConsultorioMedico> consultoriosMedicos = null;
        try{
            consultoriosMedicos = serviceConsultorioMedico.searchAll(dni);
        }catch(ServiceException exception){
            JOptionPane.showMessageDialog(null, "Error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return consultoriosMedicos;
    }
    
    private ArrayList<Consulta> searchAllConsultasByMedico(int dni, int status){
        ServiceConsulta serviceConsulta = new ServiceConsulta();
        ArrayList<Consulta> consultas = null;
        try{
            consultas = serviceConsulta.searchAllByMedico(dni, status);
        }catch(ServiceException exception){
            JOptionPane.showMessageDialog(null, "Error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return consultas;
    }
    
    private ArrayList<Consulta> searchAllConsultasByPaciente(int dni, int status){
        ServiceConsulta serviceConsulta = new ServiceConsulta();
        ArrayList<Consulta> consultas = null;
        try{
            consultas = serviceConsulta.searchAllByPaciente(dni, status);
        }catch(ServiceException exception){
            JOptionPane.showMessageDialog(null, "No se pudieron cargar las consultas", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return consultas;
    }
    
    private void cobrarConsultas(){
        try{
            serviceConsulta.cobrarConsultas();
        }catch(ServiceException exception){
            JOptionPane.showMessageDialog(null, "Error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void populateMedicoComboBox(String... apellido){
        MedicoComboBoxReservarTurno.removeAllItems();
        System.out.println("Flag 8");
        ArrayList<Medico> medicos = (apellido.length > 0) ? searchAllMedicosByApellido(apellido[0], 1) : searchAllMedicos(1);
        System.out.println("Flag 9");
        if ( (!medicos.isEmpty()) && (medicos != null) ){
            for (Medico medico : medicos){
                MedicoComboBoxReservarTurno.addItem(medico);
            }
//            DefaultComboBoxModel<Medico> model = new DefaultComboBoxModel<>();
//            MedicoComboBoxReservarTurno.setModel(model);
            MedicoComboBoxReservarTurno.setRenderer(new MedicoListCellRenderer());
            if (medicos.size() == 1){
                MedicoComboBoxReservarTurno.setSelectedIndex(0);
            }
        }
    }
    
    private void populateConsultorioComboBox(){
        ConsultorioComboBoxReservarTurno.removeAllItems();
        Medico medico = (Medico) MedicoComboBoxReservarTurno.getSelectedItem();
        ArrayList<ConsultorioMedico> consultoriosMedicos = searchAllConsultoriosMedicosByDNI(medico.getDNI());
        ArrayList<String> consultorios = serviceConsultorioMedico.generateConsultoriosArray(consultoriosMedicos);
        ConsultorioComboBoxReservarTurno.addItem("Todos");
        if (!(consultorios.isEmpty()) && (consultorios != null))
        for (String consultorio : consultorios){
            ConsultorioComboBoxReservarTurno.addItem(consultorio);
        }
    }
    
    private void populateConsultasDisponibles(String... param){
        TurnosDisponiblesContenedorReservarTurno.removeAll();
        TurnosDisponiblesContenedorReservarTurno.revalidate();
        TurnosDisponiblesContenedorReservarTurno.repaint();
        if (!(param.length > 0) && (MedicoComboBoxReservarTurno.getItemCount() > 0)){
            Medico medico = (Medico) MedicoComboBoxReservarTurno.getSelectedItem();
            Paciente paciente = pacienteLogged;
            ArrayList<ConsultorioMedico> consultoriosMedicos = searchAllConsultoriosMedicosByDNI(medico.getDNI());
            ArrayList<Consulta> consultas = searchAllConsultasByMedico(medico.getDNI(), 1);
            ArrayList<Consulta> consultasNew = serviceConsulta.generateArrayConsultas(paciente, consultas, consultoriosMedicos);
            
            for (Consulta consulta : consultasNew){
                ConsultaInfoPanel panel = new ConsultaInfoPanel(consulta, "paciente");
                panel.setPanelEventListener(this);
                panel.addMouseListener("reservar");
                TurnosDisponiblesContenedorReservarTurno.add(Box.createVerticalStrut(2));
                TurnosDisponiblesContenedorReservarTurno.add(panel);
            }
        
            TurnosDisponiblesContenedorReservarTurno.setPreferredSize(new Dimension(868, 8000));
        }
        if ((param.length > 0) && (MedicoComboBoxReservarTurno.getItemCount() > 0) && !(param[0]).equals("init")){
            Medico medico = (Medico) MedicoComboBoxReservarTurno.getSelectedItem();
            Paciente paciente = pacienteLogged;
            ArrayList<ConsultorioMedico> consultoriosMedicos = searchAllConsultoriosMedicosByDNI(medico.getDNI());
            ArrayList<Consulta> consultas = searchAllConsultasByMedico(medico.getDNI(), 1);
            ArrayList<Consulta> consultasNew = serviceConsulta.generateArrayConsultas(paciente, consultas, consultoriosMedicos);
            
            if (!(param[0]).equals("Todos")){
                System.out.println("FLAG 70");
                System.out.println(param[0]);
                for (Consulta consulta : consultasNew){
                    if (param[0].equals(consulta.getConsultorio())){
                        System.out.println("FLAG 80");
                        ConsultaInfoPanel panel = new ConsultaInfoPanel(consulta, "paciente");
                        panel.setPanelEventListener(this);
                        panel.addMouseListener("reservar");
                        TurnosDisponiblesContenedorReservarTurno.add(Box.createVerticalStrut(2));
                        TurnosDisponiblesContenedorReservarTurno.add(panel);
                    }
                }
            }else{
                for (Consulta consulta : consultasNew){
                    ConsultaInfoPanel panel = new ConsultaInfoPanel(consulta, "paciente");
                    panel.setPanelEventListener(this);
                    panel.addMouseListener("reservar");
                    TurnosDisponiblesContenedorReservarTurno.add(Box.createVerticalStrut(2));
                    TurnosDisponiblesContenedorReservarTurno.add(panel);
                }
            }
        
            TurnosDisponiblesContenedorReservarTurno.setPreferredSize(new Dimension(868, 8000));
        }
        TurnosDisponiblesReservarTurno.revalidate();
    }
    
    
    
    public void populateProximasConsultas(){
        cobrarConsultas();
        ProximosTurnosContenedor.removeAll();
        ProximosTurnosContenedor.revalidate();
        ArrayList<Consulta> consultas = searchAllConsultasByPaciente(pacienteLogged.getDNI(), 1);
        System.out.println("com.company.gui.MainFrame.populateProximasConsultas()");
        for (Consulta consulta : consultas){
            System.out.println("\n" + consulta.toString() + "\n");
            ConsultaInfoPanel panel = new ConsultaInfoPanel(consulta, "paciente");
            panel.setPanelEventListener(this);
            panel.addMouseListener("proximos");
            ProximosTurnosContenedor.add(Box.createVerticalStrut(2));
            ProximosTurnosContenedor.add(panel);
        }
        int height = consultas.size() * 74;
        ProximosTurnosContenedor.setPreferredSize(new Dimension(895, height));
    }
    
    public void populateHistorialConsultas(){
        cobrarConsultas();
        HistorialTurnosContenedor.removeAll();
        HistorialTurnosContenedor.revalidate();
        ArrayList<Consulta> consultas = searchAllConsultasByPaciente(pacienteLogged.getDNI(), 0);
        for (Consulta consulta : consultas){
            ConsultaInfoPanel panel = new ConsultaInfoPanel(consulta, "paciente");
            panel.setPanelEventListener(this);
            panel.addMouseListener(".");
            HistorialTurnosContenedor.add(Box.createVerticalStrut(2));
            HistorialTurnosContenedor.add(panel);
        }
        int height = consultas.size() * 74;
        HistorialTurnosContenedor.setPreferredSize(new Dimension(895, height));
    }
    
    public void populateProximasConsultasMedico(String... localDate){
        ArrayList<Consulta> consultas = searchAllConsultasByMedico(medicoLogged.getDNI(), 1);
        if (localDate.length > 0){
//            if (localDate.length > 1){
//                populateProximasConsultasMedicoFechaComboBox(consultas);
//            }
            ArrayList<Consulta> consultasFiltradas = new ArrayList<>();
            if (localDate[0].equals("Fechas posteriores")){
                for (Consulta consulta : consultas){
                    if (consulta.getFecha().isAfter(LocalDate.now().plusMonths(1))){
                        consultasFiltradas.add(consulta);
                    }
                }
                consultas = consultasFiltradas;
            }
            else{
                if (localDate[0].equals("init")){
                    System.out.println("com.company.gui.MainFrame.populateProximasConsultasMedico()");
                    populateProximasConsultasMedicoFechaComboBox(consultas);
                }
                else{
                    if (!localDate[0].equals("Todas")){
                        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd MMM. yyy");
                        LocalDate date = LocalDate.parse(localDate[0], formatter);
                        for (Consulta consulta : consultas){
                            if (consulta.getFecha().equals(date)){
                                consultasFiltradas.add(consulta);
                            }
                        }
                        consultas = consultasFiltradas;
                    }
                }
            }
            
        }
        ProximosTurnosMedicoContenedor.removeAll();
        ProximosTurnosMedicoContenedor.revalidate();
        for (Consulta consulta : consultas){
            System.out.println("\n" + consulta.toString() + "\n");
            ConsultaInfoPanel panel = new ConsultaInfoPanel(consulta, "medico");
            panel.setPanelEventListener(this);
            panel.addMouseListener(".");
            ProximosTurnosMedicoContenedor.add(Box.createVerticalStrut(2));
            ProximosTurnosMedicoContenedor.add(panel);
        }
        if (consultas.isEmpty()){
            ProximosTurnosMedicoContenedor.setPreferredSize(new Dimension(890, 450));
        }
        else{
            int height = consultas.size() * 74;
            ProximosTurnosMedicoContenedor.setPreferredSize(new Dimension(890, height));
        }
        ProximosTurnosMedicoContenedor.revalidate();
    }
    
    public void populateProximasConsultasMedicoFechaComboBox(ArrayList<Consulta> consultas){
        ProximosTurnosMedicoFechaComboBox.removeAllItems();
        ArrayList<String> fechas = serviceConsulta.generateArrayFechas(consultas);
        ProximosTurnosMedicoFechaComboBox.addItem("Todas");
        for (String fecha : fechas){
            ProximosTurnosMedicoFechaComboBox.addItem(fecha);
        }
        ProximosTurnosMedicoFechaComboBox.addItem("Fechas posteriores");
        ProximosTurnosMedicoFechaComboBox.setSelectedIndex(0);
    }
    
    public void populateAdministrarMedicos(int activo, String... apellido){
        ArrayList<Medico> medicos = new ArrayList<>();
        if (apellido.length > 0){
            medicos = searchAllMedicosByApellido(apellido[0], activo);
        }
        else{
            medicos = searchAllMedicos(activo);
        }
        AdministrarMedicosContenedor.removeAll();
        for (Medico medico : medicos){
            MedicoInfoPanel panel = new MedicoInfoPanel(medico, "paciente");
            panel.setPanelEventListener(this);
            panel.addMouseListener(".");
            AdministrarMedicosContenedor.add(Box.createVerticalStrut(2));
            AdministrarMedicosContenedor.add(panel);
        }
        if (medicos.size() > 0){
            int height = medicos.size() * 74;
            AdministrarMedicosContenedor.setPreferredSize(new Dimension(895, height));
        }
        else{
            AdministrarMedicosContenedor.setPreferredSize(new Dimension(895, 450));
        }
        AdministrarMedicosContenedor.revalidate();
    }
    
    public void resetEditarMedico(){
        EditarMedicoConfirmacionPanel.setVisible(false);
        EditarMedicoConsultoriosMedicosTitle.setVisible(false);
        EditarMedicoConsultoriosMedicosContenedor.setVisible(false);
        EditarMedicoTitle.setText("Agregar médico");
        EditarMedicoDesactivarText.setText("Dar de baja");
        EditarMedicoID.setVisible(false);
        EditarMedicoBorrarButton.setVisible(true);
        EditarMedicoGuardarButton.setVisible(true);
        EditarMedicoRepetirPasswordLabel.setText("Repetir contraseña");
        clearEditarMedico();
        resetEditarConsultoriosMedicos();
    }
    
    public void clearEditarMedico(){
        EditarMedicoDNI.setText("");
        EditarMedicoNombre.setText("");
        EditarMedicoApellido.setText("");
        EditarMedicoObraSocial.setSelectedIndex(0);
        EditarMedicoHonorarios.setText("");
        EditarMedicoPassword.setText("");
        EditarMedicoRepetirPassword.setText("");
    }
    
    public void setEditarMedico(Medico medico, int activo){
        EditarMedicoTitle.setText("Editar médico");
        EditarMedicoConsultoriosMedicosTitle.setVisible(true);
        EditarMedicoConsultoriosMedicosContenedor.setVisible(false);
        EditarMedicoBorrarButton.setVisible(true);
        EditarMedicoGuardarButton.setVisible(true);
        EditarMedicoRepetirPasswordLabel.setText("Nueva contraseña");
        if (activo == 1){
            EditarMedicoDesactivarText.setText("Dar de baja");
        }
        else{
            EditarMedicoDesactivarText.setText("Dar de alta");
        }
        EditarMedicoID.setVisible(true);
        EditarMedicoID.setText(String.valueOf(medico.getDNI()));
        EditarMedicoDNI.setText(String.valueOf(medico.getDNI()));
        EditarMedicoNombre.setText(medico.getNombre());
        EditarMedicoApellido.setText(medico.getApellido());
        if (medico.getObrasocial() == null){
            EditarMedicoObraSocial.setSelectedItem("Ninguna");
        }
        else{
            EditarMedicoObraSocial.setSelectedItem(medico.getObrasocial());
        }
        EditarMedicoHonorarios.setText(String.valueOf(medico.getHonorarios()));
    }
    
    public int validateAgregarMedico(){
        String dni = EditarMedicoDNI.getText();
        String nombre = EditarMedicoNombre.getText();
        String apellido = EditarMedicoApellido.getText();
        String honorarios = EditarMedicoHonorarios.getText();
        String password = EditarMedicoPassword.getText();
        String repeatPassword = EditarMedicoRepetirPassword.getText();
        
        if ((!dni.isEmpty()) && (!nombre.isEmpty()) && (!apellido.isEmpty()) && (!honorarios.isEmpty()) && (!honorarios.isEmpty()) && (!password.isEmpty()) && (password).equals(repeatPassword)){
            if ((Integer.parseInt(dni) > 0) && (Integer.parseInt(honorarios) > 0)){
                return 1;
            }
            else{
                return 3;
            }
        }
        if (!password.equals(repeatPassword)){
            return 2;
        }
        else{
            return 3;
        }
    }
    
    public int validateEditarMedico(){
        String dni = EditarMedicoDNI.getText();
        String nombre = EditarMedicoNombre.getText();
        String apellido = EditarMedicoApellido.getText();
        String honorarios = EditarMedicoHonorarios.getText();
        String password = EditarMedicoPassword.getText();
        String repeatPassword = EditarMedicoRepetirPassword.getText();
        
        if ( (!dni.isEmpty()) && (!nombre.isEmpty()) && (!apellido.isEmpty()) && (!honorarios.isEmpty()) && (!honorarios.isEmpty()) && (!password.isEmpty()) && (!repeatPassword.isEmpty()) ){
            if ((Integer.parseInt(dni) > 0) && (Integer.parseInt(honorarios) > 0)){
                int id = Integer.parseInt(EditarMedicoID.getText());
                Medico medico = searchMedico(id);
                if (medico.getPassword().equals(password)){
                    return 1;
                }
                else{
                    return 2;
                }
            }
            else{
                return 3;
            }
        }
        else{
            return 3;
        }
    }
    
    public int validateDiaConsultoriosMedicos(String consultorio, String entrada, String salida){
        int result = 0;
        
        if ( ( consultorio.isEmpty() && entrada.isEmpty() && salida.isEmpty() ) || ( !consultorio.isEmpty() && !entrada.isEmpty() && !salida.isEmpty() ) ){
            if (!consultorio.isEmpty() && !entrada.isEmpty() && !salida.isEmpty()){
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm");
                try{
                    LocalTime entradaLocalTime = LocalTime.parse(entrada, formatter);
                    result = 1;
                }catch(DateTimeParseException exception){
                    result = 3;
                }finally{
                    if (result == 3){
                        return result;
                    }else{
                        try{
                            LocalTime salidaLocalTime = LocalTime.parse(salida, formatter);
                            result = 1;
                        }catch(DateTimeParseException exception){
                            result = 3;
                        }finally{
                            if (result == 3){
                                return result;
                            }
                            else{
                                LocalTime entradaLocalTime = LocalTime.parse(entrada, formatter);
                                LocalTime salidaLocalTime = LocalTime.parse(salida, formatter);
                                if (!entradaLocalTime.isBefore(salidaLocalTime)){
                                    result = 3;
                                    return result;
                                }
                                else{
                                    result = 1;
                                }
                            }
                        }
                    }
                }
                
            }
            if (consultorio.isEmpty() && entrada.isEmpty() && salida.isEmpty()){
                result = 1;
            }
        }
        else{
            result = 2;
        }
        
        System.out.println("\n individual result: "+result+"\n");
        return result;
    }
    
    public int validateEditarConsultoriosMedicos(){
        String lunes = LunesConsultoriosMedicos.getText();
        String lunesEntrada = LunesEntradaConsultoriosMedicos.getText();
        String lunesSalida = LunesSalidaConsultoriosMedicos.getText();
        
        String martes = MartesConsultoriosMedicos.getText();
        String martesEntrada = MartesEntradaConsultoriosMedicos.getText();
        String martesSalida = MartesSalidaConsultoriosMedicos.getText();
        
        String miercoles = MiercolesConsultoriosMedicos.getText();
        String miercolesEntrada = MiercolesEntradaConsultoriosMedicos.getText();
        String miercolesSalida = MiercolesSalidaConsultoriosMedicos.getText();
        
        String jueves = JuevesConsultoriosMedicos.getText();
        String juevesEntrada = JuevesEntradaConsultoriosMedicos.getText();
        String juevesSalida = JuevesSalidaConsultoriosMedicos.getText();
        
        String viernes = ViernesConsultoriosMedicos.getText();
        String viernesEntrada = ViernesEntradaConsultoriosMedicos.getText();
        String viernesSalida = ViernesSalidaConsultoriosMedicos.getText();
        
        String sabado = SabadoConsultoriosMedicos.getText();
        String sabadoEntrada = SabadoEntradaConsultoriosMedicos.getText();
        String sabadoSalida = SabadoSalidaConsultoriosMedicos.getText();
        
        int endResult = 0;
        
        int validationResult;
        validationResult = validateDiaConsultoriosMedicos(lunes, lunesEntrada, lunesSalida);
        System.out.println("\n" + validationResult == 1 + "\n");
        if (validationResult == 1){
            endResult ++;
        }
        if (validationResult == 2){
            JOptionPane.showMessageDialog(null, "Complete corréctamente los campos del día Lunes", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
        if (validationResult == 3){
            JOptionPane.showMessageDialog(null, "Formato incorrecto en las horas. Debe ser 'HH:mm', y los minutos '00' o '30'.", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
        
        validationResult = validateDiaConsultoriosMedicos(martes, martesEntrada, martesSalida);
        System.out.println("\n" + validationResult == 1 + "\n");
        if (validationResult == 1){
            endResult ++;
        }
        if (validationResult == 2){
            JOptionPane.showMessageDialog(null, "Complete corréctamente los campos del día Martes", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
        if (validationResult == 3){
            JOptionPane.showMessageDialog(null, "Formato incorrecto en las horas. Debe ser 'HH:mm', y los minutos '00' o '30'.", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
        
        validationResult = validateDiaConsultoriosMedicos(miercoles, miercolesEntrada, miercolesSalida);
        System.out.println("\n" + validationResult == 1 + "\n");
        if (validationResult == 1){
            endResult ++;
        }
        if (validationResult == 2){
            JOptionPane.showMessageDialog(null, "Complete corréctamente los campos del día Miércoles", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
        if (validationResult == 3){
            JOptionPane.showMessageDialog(null, "Formato incorrecto en las horas. Debe ser 'HH:mm', y los minutos '00' o '30'.", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
        
        validationResult = validateDiaConsultoriosMedicos(jueves, juevesEntrada, juevesSalida);
        System.out.println("\n" + validationResult == 1 + "\n");
        if (validationResult == 1){
            endResult ++;
        }
        if (validationResult == 2){
            JOptionPane.showMessageDialog(null, "Complete corréctamente los campos del día Jueves", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
        if (validationResult == 3){
            JOptionPane.showMessageDialog(null, "Formato incorrecto en las horas. Debe ser 'HH:mm', y los minutos '00' o '30'.", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
        
        validationResult = validateDiaConsultoriosMedicos(viernes, viernesEntrada, viernesSalida);
        System.out.println("\n" + validationResult == 1 + "\n");
        if (validationResult == 1){
            endResult ++;
        }
        if (validationResult == 2){
            JOptionPane.showMessageDialog(null, "Complete corréctamente los campos del día Viernes", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
        if (validationResult == 3){
            JOptionPane.showMessageDialog(null, "Formato incorrecto en las horas. Debe ser 'HH:mm', y los minutos '00' o '30'.", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
        
        validationResult = validateDiaConsultoriosMedicos(sabado, sabadoEntrada, sabadoSalida);
        System.out.println("\n" + validationResult == 1 + "\n");
        if (validationResult == 1){
            endResult ++;
        }
        if (validationResult == 2){
            JOptionPane.showMessageDialog(null, "Complete corréctamente los campos del día Sábado", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
        if (validationResult == 3){
            JOptionPane.showMessageDialog(null, "Formato incorrecto en las horas. Debe ser 'HH:mm', y los minutos '00' o '30'.", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
        System.out.println("\n" + endResult + "\n");
        return endResult;
    }
    
    public void setEditarConsultoriosMedicos(ConsultorioMedico consultorioMedico){
        System.out.println("\n" + consultorioMedico.toString() + "\n");
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm");
        
        System.out.println("\n" + consultorioMedico.getDia().equals("Lunes") + "\n");
        System.out.println("\n" + consultorioMedico.getDia().equals("Martes") + "\n");
        System.out.println("\n" + consultorioMedico.getDia().equals("Miercoles") + "\n");
        System.out.println("\n" + consultorioMedico.getDia().equals("Jueves") + "\n");
        System.out.println("\n" + consultorioMedico.getDia().equals("Viernes") + "\n");
        System.out.println("\n" + consultorioMedico.getDia().equals("Sabado") + "\n");
        
        if (consultorioMedico.getDia().equals("Lunes")){
            System.out.println("\n" + "Lunes" + "\n");
            LunesConsultoriosMedicos.setText(consultorioMedico.getConsultorio());
            LunesEntradaConsultoriosMedicos.setText(consultorioMedico.getEntrada().format(formatter));
            LunesSalidaConsultoriosMedicos.setText(consultorioMedico.getSalida().format(formatter));
        }
        if (consultorioMedico.getDia().equals("Martes")){
            System.out.println("\n" + "Martes" + "\n");
            MartesConsultoriosMedicos.setText(consultorioMedico.getConsultorio());
            MartesEntradaConsultoriosMedicos.setText(consultorioMedico.getEntrada().format(formatter));
            MartesSalidaConsultoriosMedicos.setText(consultorioMedico.getSalida().format(formatter));
        }
        if (consultorioMedico.getDia().equals("Miercoles")){
            System.out.println("\n" + "Miercoles" + "\n");
            MiercolesConsultoriosMedicos.setText(consultorioMedico.getConsultorio());
            MiercolesEntradaConsultoriosMedicos.setText(consultorioMedico.getEntrada().format(formatter));
            MiercolesSalidaConsultoriosMedicos.setText(consultorioMedico.getSalida().format(formatter));
        }
        if (consultorioMedico.getDia().equals("Jueves")){
            System.out.println("\n" + "Jueves" + "\n");
            JuevesConsultoriosMedicos.setText(consultorioMedico.getConsultorio());
            JuevesEntradaConsultoriosMedicos.setText(consultorioMedico.getEntrada().format(formatter));
            JuevesSalidaConsultoriosMedicos.setText(consultorioMedico.getSalida().format(formatter));
        }
        if (consultorioMedico.getDia().equals("Viernes")){
            System.out.println("\n" + "Viernes" + "\n");
            ViernesConsultoriosMedicos.setText(consultorioMedico.getConsultorio());
            ViernesEntradaConsultoriosMedicos.setText(consultorioMedico.getEntrada().format(formatter));
            ViernesSalidaConsultoriosMedicos.setText(consultorioMedico.getSalida().format(formatter));
        }
        if (consultorioMedico.getDia().equals("Sabado")){
            System.out.println("\n" + "Sabado" + "\n");
            SabadoConsultoriosMedicos.setText(consultorioMedico.getConsultorio());
            SabadoEntradaConsultoriosMedicos.setText(consultorioMedico.getEntrada().format(formatter));
            SabadoSalidaConsultoriosMedicos.setText(consultorioMedico.getSalida().format(formatter));
        }
    }
    
    public void resetEditarConsultoriosMedicos(){
        LunesConsultoriosMedicos.setText("");
        LunesEntradaConsultoriosMedicos.setText("");
        LunesSalidaConsultoriosMedicos.setText("");
        
        MartesConsultoriosMedicos.setText("");
        MartesEntradaConsultoriosMedicos.setText("");
        MartesSalidaConsultoriosMedicos.setText("");
        
        MiercolesConsultoriosMedicos.setText("");
        MiercolesEntradaConsultoriosMedicos.setText("");
        MiercolesSalidaConsultoriosMedicos.setText("");
        
        JuevesConsultoriosMedicos.setText("");
        JuevesEntradaConsultoriosMedicos.setText("");
        JuevesSalidaConsultoriosMedicos.setText("");
        
        ViernesConsultoriosMedicos.setText("");
        ViernesEntradaConsultoriosMedicos.setText("");
        ViernesSalidaConsultoriosMedicos.setText("");
        
        SabadoConsultoriosMedicos.setText("");
        SabadoEntradaConsultoriosMedicos.setText("");
        SabadoSalidaConsultoriosMedicos.setText("");
    }
    
    public int validateFecha(String fecha){
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyy-MM-dd");
        try{
            LocalDate fechaLocalDate = LocalDate.parse(fecha, formatter);
            return 1;
        }catch(DateTimeParseException exception){
            return 0;
        }
    }
    
    public void populateRecaudacionesReporte(){
        ReportesRecaudacionesContenedor.removeAll();
        
        String desdeString = ReportesRecaudacionesDesde.getText();
        String hastaString = ReportesRecaudacionesHasta.getText();
        
        ArrayList<Medico> medicos = new ArrayList<>();
        try{
            medicos = serviceMedico.searchAllActiveInactive();
        }catch(ServiceException exception){
            JOptionPane.showMessageDialog(null, "Ocurrió un error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
        }finally{
            System.out.println("\n" + (desdeString.isEmpty() && hastaString.isEmpty()) + "\n");
            ReportesRecaudacionesTotal.setText("0");
            if (desdeString.isEmpty() && hastaString.isEmpty()){
                for (Medico medico : medicos){
                    System.out.println("\n" + medico + "\n");
                    RecaudacionesReportesInfoPanel panel = new RecaudacionesReportesInfoPanel(medico, ReportesRecaudacionesTotal);
                    ReportesRecaudacionesContenedor.add(Box.createVerticalStrut(2));
                    ReportesRecaudacionesContenedor.add(panel);
                }
                if (medicos.size() > 0){
                    int height = medicos.size() * 74;
                    ReportesRecaudacionesContenedor.setPreferredSize(new Dimension(370, height));
                }
                else{
                    ReportesRecaudacionesContenedor.setPreferredSize(new Dimension(370, 380));
                }
                ReportesRecaudacionesContenedor.revalidate();
            }
            else{
                if (!desdeString.isEmpty() && hastaString.isEmpty()){
                    int validationResult = validateFecha(desdeString);
                    if (validationResult == 1){
                        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyy-MM-dd");
                        LocalDate fechaLocalDate = LocalDate.parse(desdeString, formatter);
                        for (Medico medico : medicos){
                            RecaudacionesReportesInfoPanel panel = new RecaudacionesReportesInfoPanel(medico, fechaLocalDate, "desde", ReportesRecaudacionesTotal);
                            ReportesRecaudacionesContenedor.add(Box.createVerticalStrut(2));
                            ReportesRecaudacionesContenedor.add(panel);
                        }
                        if (medicos.size() > 0){
                            int height = medicos.size() * 74;
                            ReportesRecaudacionesContenedor.setPreferredSize(new Dimension(370, height));
                        }
                        else{
                            ReportesRecaudacionesContenedor.setPreferredSize(new Dimension(370, 380));
                        }
                        ReportesRecaudacionesContenedor.revalidate();
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "El formato de las fechas es incorrecto. Debe ser 'yyy-MM-dd'.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                    }
                }
                if (desdeString.isEmpty() && !hastaString.isEmpty()){
                    int validationResult = validateFecha(hastaString);
                    if (validationResult == 1){
                        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyy-MM-dd");
                        LocalDate fechaLocalDate = LocalDate.parse(hastaString, formatter);
                        for (Medico medico : medicos){
                            RecaudacionesReportesInfoPanel panel = new RecaudacionesReportesInfoPanel(medico, fechaLocalDate, "hasta", ReportesRecaudacionesTotal);
                            ReportesRecaudacionesContenedor.add(Box.createVerticalStrut(2));
                            ReportesRecaudacionesContenedor.add(panel);
                        }
                        if (medicos.size() > 0){
                            int height = medicos.size() * 74;
                            ReportesRecaudacionesContenedor.setPreferredSize(new Dimension(370, height));
                        }
                        else{
                            ReportesRecaudacionesContenedor.setPreferredSize(new Dimension(370, 380));
                        }
                        ReportesRecaudacionesContenedor.revalidate();
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "El formato de las fechas es incorrecto. Debe ser 'yyy-MM-dd'.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                    }
                }
                if (!desdeString.isEmpty() && !hastaString.isEmpty()){
                    int validationTotal = 0;
                    int validationResult1 = validateFecha(desdeString);
                    int validationResult2 = validateFecha(hastaString);
                    validationTotal = validationResult1 + validationResult2;
                    if (validationTotal == 2){
                        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyy-MM-dd");
                        LocalDate desdeLocalDate = LocalDate.parse(desdeString, formatter);
                        LocalDate hastaLocalDate = LocalDate.parse(hastaString, formatter);
                        for (Medico medico : medicos){
                            RecaudacionesReportesInfoPanel panel = new RecaudacionesReportesInfoPanel(medico, desdeLocalDate, hastaLocalDate, ReportesRecaudacionesTotal);
                            ReportesRecaudacionesContenedor.add(Box.createVerticalStrut(2));
                            ReportesRecaudacionesContenedor.add(panel);
                        }
                        if (medicos.size() > 0){
                            int height = medicos.size() * 74;
                            ReportesRecaudacionesContenedor.setPreferredSize(new Dimension(370, height));
                        }
                        else{
                            ReportesRecaudacionesContenedor.setPreferredSize(new Dimension(370, 380));
                        }
                        ReportesRecaudacionesContenedor.revalidate();
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "El formato de las fechas es incorrecto. Debe ser 'yyy-MM-dd'.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                    }
                }
            }
            
        }
        
    }
    
    public void resetReportes(){
        ReportesRecaudacionesDesde.setText("");
        ReportesRecaudacionesHasta.setText("");
        ReportesRecaudacionesTotal.setText("");
        ReportesRecaudacionesContenedor.removeAll();
        ReportesRecaudacionesContenedor.revalidate();
        
        ReportesConsultasDNI.setText("");
        ReportesConsultasDesde.setText("");
        ReportesConsultasHasta.setText("");
        ReportesConsultasTotal.setText("");
        ReportesConsultasContenedor.removeAll();
        ReportesConsultasContenedor.revalidate();
    }
    
    public void populateConsultasReporte(){
        ReportesConsultasContenedor.removeAll();
        
        String dniString = ReportesConsultasDNI.getText();
        String desdeString = ReportesConsultasDesde.getText();
        String hastaString = ReportesConsultasHasta.getText();
        
        try{
            int dni = Integer.parseInt(dniString);
            System.out.println(dni);
            Medico medico;
            try{
                medico = serviceMedico.search(dni);
                if (medico != null){
                    ReportesConsultasTotal.setText("0");
                    System.out.println("\n" + medico.toString() + "\n");
                    ArrayList<Consulta> consultas = new ArrayList<>();
                    if (desdeString.isEmpty() && hastaString.isEmpty()){
                        consultas = searchAllConsultasByMedico(dni, 0);
                        for (Consulta consulta : consultas){
                            System.out.println("\n" + consulta.toString() + "\n");
                            ConsultasReportesInfoPanel panel = new ConsultasReportesInfoPanel(consulta, ReportesConsultasTotal);
                            ReportesConsultasContenedor.add(Box.createVerticalStrut(2));
                            ReportesConsultasContenedor.add(panel);
                        }
                        if (consultas.size() > 0){
                            int height = consultas.size() * 74;
                            ReportesConsultasContenedor.setPreferredSize(new Dimension(1300, height));
                        }
                        else{
                            ReportesConsultasContenedor.setPreferredSize(new Dimension(1300, 380));
                        }
                        ReportesConsultasContenedor.revalidate();
                    }
                    else{
                        if (!desdeString.isEmpty() && hastaString.isEmpty()){
                            int validationResult = validateFecha(desdeString);
                            if (validationResult == 1){
                                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyy-MM-dd");
                                LocalDate fechaLocalDate = LocalDate.parse(desdeString, formatter);
                                try{
                                    consultas = serviceConsulta.searchAllBetweenByMedico(dni, fechaLocalDate, LocalDate.now());
                                }catch(ServiceException exception){
                                    JOptionPane.showMessageDialog(null, "Ocurrió un error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
                                }finally{
                                    for (Consulta consulta : consultas){
                                        System.out.println("\n" + consulta.toString() + "\n");
                                        ConsultasReportesInfoPanel panel = new ConsultasReportesInfoPanel(consulta, ReportesConsultasTotal);
                                        ReportesConsultasContenedor.add(Box.createVerticalStrut(2));
                                        ReportesConsultasContenedor.add(panel);
                                    }
                                    if (consultas.size() > 0){
                                        int height = consultas.size() * 74;
                                        ReportesConsultasContenedor.setPreferredSize(new Dimension(1300, height));
                                    }
                                    else{
                                        ReportesConsultasContenedor.setPreferredSize(new Dimension(1300, 380));
                                    }
                                    ReportesConsultasContenedor.revalidate();
                                }
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "El formato de las fechas es incorrecto. Debe ser 'yyy-MM-dd'.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                            }
                        }
                        if (desdeString.isEmpty() && !hastaString.isEmpty()){
                            int validationResult = validateFecha(hastaString);
                            if (validationResult == 1){
                                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyy-MM-dd");
                                LocalDate fechaLocalDate = LocalDate.parse(hastaString, formatter);
                                try{
                                    consultas = serviceConsulta.searchAllBetweenByMedico(dni, LocalDate.of(2001, 1, 1), fechaLocalDate);
                                }catch(ServiceException exception){
                                    JOptionPane.showMessageDialog(null, "Ocurrió un error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
                                }finally{
                                    for (Consulta consulta : consultas){
                                        System.out.println("\n" + consulta.toString() + "\n");
                                        ConsultasReportesInfoPanel panel = new ConsultasReportesInfoPanel(consulta, ReportesConsultasTotal);
                                        ReportesConsultasContenedor.add(Box.createVerticalStrut(2));
                                        ReportesConsultasContenedor.add(panel);
                                    }
                                    if (consultas.size() > 0){
                                        int height = consultas.size() * 74;
                                        ReportesConsultasContenedor.setPreferredSize(new Dimension(1300, height));
                                    }
                                    else{
                                        ReportesConsultasContenedor.setPreferredSize(new Dimension(1300, 380));
                                    }
                                    ReportesConsultasContenedor.revalidate();
                                }
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "El formato de las fechas es incorrecto. Debe ser 'yyy-MM-dd'.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                            }
                        }
                        if (!desdeString.isEmpty() && !hastaString.isEmpty()){
                            int validationTotal = 0;
                            int validationResult1 = validateFecha(desdeString);
                            int validationResult2 = validateFecha(hastaString);
                            validationTotal = validationResult1 + validationResult2;
                            if (validationTotal == 2){
                                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyy-MM-dd");
                                LocalDate desdeLocalDate = LocalDate.parse(desdeString, formatter);
                                LocalDate hastaLocalDate = LocalDate.parse(hastaString, formatter);
                                try{
                                    consultas = serviceConsulta.searchAllBetweenByMedico(dni, desdeLocalDate, hastaLocalDate);
                                }catch(ServiceException exception){
                                    JOptionPane.showMessageDialog(null, "Ocurrió un error en el servidor", "Error", JOptionPane.ERROR_MESSAGE);
                                }finally{
                                    for (Consulta consulta : consultas){
                                        System.out.println("\n" + consulta.toString() + "\n");
                                        ConsultasReportesInfoPanel panel = new ConsultasReportesInfoPanel(consulta, ReportesConsultasTotal);
                                        ReportesConsultasContenedor.add(Box.createVerticalStrut(2));
                                        ReportesConsultasContenedor.add(panel);
                                    }
                                    if (consultas.size() > 0){
                                        int height = consultas.size() * 74;
                                        ReportesConsultasContenedor.setPreferredSize(new Dimension(1300, height));
                                    }
                                    else{
                                        ReportesConsultasContenedor.setPreferredSize(new Dimension(1300, 380));
                                    }
                                    ReportesConsultasContenedor.revalidate();
                                    }
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "El formato de las fechas es incorrecto. Debe ser 'yyy-MM-dd'.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                            }
                        }
                    }
                }
            }catch(ServiceException exception){
                JOptionPane.showMessageDialog(null, "No se pudo encontrar al médico con DNI " + dniString, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }catch(NumberFormatException exception){
//            JOptionPane.showMessageDialog(null, "El DNI no es válido", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    
    

    
    
    
    @Override
    public void onReservarTurnoEvent(Consulta consulta){
        System.out.println("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
        System.out.println(consulta.toString());
        ConsultaInfoPanel panelConsultaSelected = new ConsultaInfoPanel(consulta, "paciente");
        TurnoSeleccionadoReservarTurno.removeAll();
        BorrarButtonReservarTurno.setVisible(true);
        ReservarButtonReservarTurno.setVisible(true);
        TurnoSeleccionadoReservarTurno.add(panelConsultaSelected, BorderLayout.CENTER);
        TurnoSeleccionadoReservarTurno.revalidate();
        System.out.println("com.company.gui.MainFrame.onConsultaEvent()");
    }
    
    @Override
    public void onProximosTurnosEvent(Consulta consulta){
        ConsultaInfoPanel panelConsultaSelected = new ConsultaInfoPanel(consulta, "paciente");
        ProximoTurnoAEliminar.removeAll();
        ProximoTurnoAEliminar.revalidate();
        jLabel24.setVisible(true);
        ProximosTurnosMantenerButton.setVisible(true);
        ProximosTurnosCancelarButton.setVisible(true);
        ProximoTurnoAEliminar.add(panelConsultaSelected, BorderLayout.CENTER);
        ProximoTurnoAEliminar.revalidate();
    }
    
    @Override
    public void onAdministrarMedicosEvent(Medico medico){
        setCursor(NORMAL);
        resetEditarMedico();
        int activo = AdministrarMedicosActivoComboBox.getSelectedIndex();
        if (activo == 0){
            setEditarMedico(medico, 1);
        }
        else{
            setEditarMedico(medico, 0);
        }
        switchLayeredPane(ContentLayeredPane, EditarMedicoPanel);
    }
    
    @Override
    public void mouseEntered(){
        System.out.println("com.company.gui.MainFrame.mouseEntered()");
        setCursor(Cursor.HAND_CURSOR);
    }
    
    @Override
    public void mouseExited(){
        System.out.println("com.company.gui.MainFrame.mouseExited()");
        setCursor(Cursor.DEFAULT_CURSOR);
    }
    
    
}
